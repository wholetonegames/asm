* = $8000                                                                      ;
; da65 V2.15                                                                   ;
; Created     2017-07-10 21 05 44                                              ;
; Input file  bank0_and_1.nes                                                  ;
; Page        1                                                                ;
                                                                               ;
                                                                               ;
;.setcpu  "6502"                                                               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L0000     = $0000                                                              ;
L0012     = $0012                                                              ;
L03D3     = $03D3                                                              ;
L04D3     = $04D3                                                              ;
L05D3     = $05D3                                                              ;
L4A04     = $4A04                                                              ;
L5204     = $5204                                                              ;
L5A08     = $5A08                                                              ;
L6604     = $6604                                                              ;
L6E04     = $6E04                                                              ;
L7604     = $7604                                                              ;
L7E04     = $7E04                                                              ;
; ---------------------------------------------------------------------------- ;
lReset                                                                         ;
jmp      L801A                         ; 0x10 $8000 4C 1A 80                   ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
nmi_entry_point                                                                ;
pha                                    ; 0x13 $8003 48                         ;
txa                                    ; 0x14 $8004 8A                         ;
pha                                    ; 0x15 $8005 48                         ;
tya                                    ; 0x16 $8006 98                         ;
pha                                    ; 0x17 $8007 48                         ;
lda      $25                           ; 0x18 $8008 A5 25                      ;
bne      L800F                         ; 0x1a $800A D0 03                      ;
jsr      Music_related__during_screen_transitions; 0x1c $800C 20 C2 E1         ;
L800F                                                                          ;
lda      $2002                         ; 0x1f $800F AD 02 20                   ;;read PPU status to reset the high/low latch to high, also the address latch used by PPUSCROLL2005 and PPUADDR2006.
inc      $26                           ; 0x22 $8012 E6 26                      ;
pla                                    ; 0x24 $8014 68                         ;
tay                                    ; 0x25 $8015 A8                         ;
pla                                    ; 0x26 $8016 68                         ;
tax                                    ; 0x27 $8017 AA                         ;
pla                                    ; 0x28 $8018 68                         ;
rti                                    ; 0x29 $8019 40                         ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L801A                                                                          ;
sei                                    ; 0x2a $801A 78                         ;
cld                                    ; 0x2b $801B D8                         ;
ldx      #$FF                          ; 0x2c $801C A2 FF                      ;;X = #$ff 1111_1111
txs                                    ; 0x2e $801E 9A                         ;
lda      #$10                          ; 0x2f $801F A9 10                      ;;A = #$10 0001_0000
sta      $2000                         ; 0x31 $8021 8D 00 20                   ;
L8024                                                                          ;
lda      $2002                         ; 0x34 $8024 AD 02 20                   ;;read PPU status to reset the high/low latch to high, also the address latch used by PPUSCROLL2005 and PPUADDR2006.
bpl      L8024                         ; 0x37 $8027 10 FB                      ;
L8029                                                                          ;
lda      $2002                         ; 0x39 $8029 AD 02 20                   ;;read PPU status to reset the high/low latch to high, also the address latch used by PPUSCROLL2005 and PPUADDR2006.
bpl      L8029                         ; 0x3c $802C 10 FB                      ;
lda      #$00                          ; 0x3e $802E A9 00                      ;;A = #$00 0000_0000
sta      $2001                         ; 0x40 $8030 8D 01 20                   ;
lda      #$00                          ; 0x43 $8033 A9 00                      ;;A = #$00 0000_0000
sta      $4010                         ; 0x45 $8035 8D 10 40                   ;;music:DMC channel (write) ;IL-- FFFF 	IRQ enable, loop sample, frequency index
lda      #$40                          ; 0x48 $8038 A9 40                      ;;A = #$40 0100_0000
sta      $4017                         ; 0x4a $803A 8D 17 40                   ;;music:DMC channel (write) ;SD-- ---- 	Frame counter: 5-frame sequence, disable frame interrupt (write) 
lda      #$B0                          ; 0x4d $803D A9 B0                      ;;A = #$b0 1011_0000
sta      $4000                         ; 0x4f $803F 8D 00 40                   ;;music:Pulse 1 channel (write) ;DDLC NNNN 	Duty, loop envelope/disable length counter, constant volume, envelope period/volume
sta      $4004                         ; 0x52 $8042 8D 04 40                   ;;music:Pulse 2 channel (write) ;DDLC NNNN 	Duty, loop envelope/disable length counter, constant volume, envelope period/volume
sta      $4008                         ; 0x55 $8045 8D 08 40                   ;;music:Triangle channel (write) ;CRRR RRRR 	Length counter disable/linear counter control, linear counter reload value
lda      #$10                          ; 0x58 $8048 A9 10                      ;;A = #$10 0001_0000
sta      $400C                         ; 0x5a $804A 8D 0C 40                   ;;music:Noise channel (write) ;--LC NNNN 	Loop envelope/disable length counter, constant volume, envelope period/volume
lda      #$08                          ; 0x5d $804D A9 08                      ;;A = #$08 0000_1000
sta      $4001                         ; 0x5f $804F 8D 01 40                   ;;music:Pulse 1 channel (write) ;EPPP NSSS 	Sweep unit: enabled, period, negative, shift count
sta      $4005                         ; 0x62 $8052 8D 05 40                   ;;music:Pulse 2 channel (write) ;EPPP NSSS 	Sweep unit: enabled, period, negative, shift count
sta      $4009                         ; 0x65 $8055 8D 09 40                   ;
sta      $400D                         ; 0x68 $8058 8D 0D 40                   ;
lda      #$00                          ; 0x6b $805B A9 00                      ;;A = #$00 0000_0000
sta      $4002                         ; 0x6d $805D 8D 02 40                   ;;music:Pulse 1 channel (write) ;LLLL LLLL 	Timer low
sta      $4006                         ; 0x70 $8060 8D 06 40                   ;;music:Pulse 2 channel (write) ;LLLL LLLL 	Timer low
sta      $400A                         ; 0x73 $8063 8D 0A 40                   ;;music:Triangle channel (write) ;LLLL LLLL 	Timer low
sta      $400E                         ; 0x76 $8066 8D 0E 40                   ;;music:Noise channel (write) ;L--- PPPP 	Loop noise, noise period
lda      #$08                          ; 0x79 $8069 A9 08                      ;;A = #$08 0000_1000
sta      $4003                         ; 0x7b $806B 8D 03 40                   ;;music:Pulse 1 channel (write) ;LLLL LHHH 	Length counter load, timer high (also resets duty and starts envelope)
sta      $4007                         ; 0x7e $806E 8D 07 40                   ;;music:Pulse 2 channel (write) ;LLLL LHHH 	Length counter load, timer high (also resets duty and starts envelope)
sta      $400B                         ; 0x81 $8071 8D 0B 40                   ;;music:Triangle channel (write) ;LLLL LHHH 	Length counter load, timer high (also reloads linear counter)
sta      $400F                         ; 0x84 $8074 8D 0F 40                   ;;music:Noise channel (write) ;LLLL L--- 	Length counter load (also starts envelope)
lda      #$0F                          ; 0x87 $8077 A9 0F                      ;;A = #$0f 0000_1111
sta      $4015                         ; 0x89 $8079 8D 15 40                   ;;music:DMC channel (write) ;---D NT21 	Control: DMC enable, length counter enables: noise, triangle, pulse 2, pulse 1 (write);music:DMC channel (write) ;IF-D NT21 	Status: DMC interrupt, frame interrupt, length counter status: noise, triangle, pulse 2, pulse 1 (read)
lda      #$00                          ; 0x8c $807C A9 00                      ;;A = #$00 0000_0000
sta      $25                           ; 0x8e $807E 85 25                      ;
sta      $26                           ; 0x90 $8080 85 26                      ;
ldy      #$00                          ; 0x92 $8082 A0 00                      ;;Y = #$00 0000_0000
L8084                                                                          ;
;determine if RESET or POWER ON (cold boot) occured                            ;
;by comparing $100 to $15F with the HYDLIDE text table                         ;
lda      $0100,y                       ; 0x94 $8084 B9 00 01                   ;
cmp      text_HYDLIDE_copied_to_100_in_ram,y; 0x97 $8087 D9 60 85              ;
bne      L8094                         ; 0x9a $808A D0 08                      ;
iny                                    ; 0x9c $808C C8                         ;
cpy      #$60                          ; 0x9d $808D C0 60                      ;
bne      L8084                         ; 0x9f $808F D0 F3                      ;
jmp      L820E                         ; 0xa1 $8091 4C 0E 82                   ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8094                                                                          ;
lda      #$00                          ; 0xa4 $8094 A9 00                      ;;A = #$00 0000_0000
ldy      #$00                          ; 0xa6 $8096 A0 00                      ;;Y = #$00 0000_0000
L8098                                                                          ;
sta      L0000,y                       ; 0xa8 $8098 99 00 00                   ;
iny                                    ; 0xab $809B C8                         ;
bne      L8098                         ; 0xac $809C D0 FA                      ;
ldx      #$02                          ; 0xae $809E A2 02                      ;;X = #$02 0000_0010
ldy      #$00                          ; 0xb0 $80A0 A0 00                      ;;Y = #$00 0000_0000
lda      #$00                          ; 0xb2 $80A2 A9 00                      ;;A = #$00 0000_0000
sty      L0000                         ; 0xb4 $80A4 84 00                      ;
L80A6                                                                          ;
stx      $01                           ; 0xb6 $80A6 86 01                      ;
L80A8                                                                          ;
sta      (L0000),y                     ; 0xb8 $80A8 91 00                      ;
iny                                    ; 0xba $80AA C8                         ;
bne      L80A8                         ; 0xbb $80AB D0 FB                      ;
inx                                    ; 0xbd $80AD E8                         ;
cpx      #$08                          ; 0xbe $80AE E0 08                      ;
bne      L80A6                         ; 0xc0 $80B0 D0 F4                      ;
ldy      #$00                          ; 0xc2 $80B2 A0 00                      ;;Y = #$00 0000_0000
L80B4                                                                          ;
lda      text_HYDLIDE_copied_to_100_in_ram,y; 0xc4 $80B4 B9 60 85              ;
sta      $0100,y                       ; 0xc7 $80B7 99 00 01                   ;
iny                                    ; 0xca $80BA C8                         ;
cpy      #$60                          ; 0xcb $80BB C0 60                      ;
bne      L80B4                         ; 0xcd $80BD D0 F5                      ;
lda      #$00                          ; 0xcf $80BF A9 00                      ;;A = #$00 0000_0000
jsr      LE142                         ; 0xd1 $80C1 20 42 E1                   ;
lda      #$00                          ; 0xd4 $80C4 A9 00                      ;;A = #$00 0000_0000
jsr      DF11_load_palette_and_implement__index_with_A; 0xd6 $80C6 20 11 DF    ;
lda      #$03                          ; 0xd9 $80C9 A9 03                      ;;A = #$03 0000_0011
jsr      DF51_load_palette_and_implement__index_with_A; 0xdb $80CB 20 51 DF    ;
ldx      #$20                          ; 0xde $80CE A2 20                      ;;X = #$20 0010_0000
stx      $01                           ; 0xe0 $80D0 86 01                      ;
ldy      #$00                          ; 0xe2 $80D2 A0 00                      ;;Y = #$00 0000_0000
sty      L0000                         ; 0xe4 $80D4 84 00                      ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0xe6 $80D6 20 5D 96    ;
lda      #$40                          ; 0xe9 $80D9 A9 40                      ;;A = #$40 0100_0000
L80DB                                                                          ;
sta      $2007                         ; 0xeb $80DB 8D 07 20                   ;;Data ($2007) <> read/write
iny                                    ; 0xee $80DE C8                         ;
bne      L80DB                         ; 0xef $80DF D0 FA                      ;
inx                                    ; 0xf1 $80E1 E8                         ;
cpx      #$28                          ; 0xf2 $80E2 E0 28                      ;
bne      L80DB                         ; 0xf4 $80E4 D0 F5                      ;
lda      #$23                          ; 0xf6 $80E6 A9 23                      ;;A = #$23 0010_0011
sta      $01                           ; 0xf8 $80E8 85 01                      ;
lda      #$C0                          ; 0xfa $80EA A9 C0                      ;;A = #$c0 1100_0000
sta      L0000                         ; 0xfc $80EC 85 00                      ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0xfe $80EE 20 5D 96    ;
lda      #$55                          ; 0x101 $80F1 A9 55                     ;;A = #$55 0101_0101
ldx      #$40                          ; 0x103 $80F3 A2 40                     ;;X = #$40 0100_0000
L80F5                                                                          ;
sta      $2007                         ; 0x105 $80F5 8D 07 20                  ;;Data ($2007) <> read/write
dex                                    ; 0x108 $80F8 CA                        ;
bne      L80F5                         ; 0x109 $80F9 D0 FA                     ;
lda      #$27                          ; 0x10b $80FB A9 27                     ;;A = #$27 0010_0111
sta      $01                           ; 0x10d $80FD 85 01                     ;
lda      #$C0                          ; 0x10f $80FF A9 C0                     ;;A = #$c0 1100_0000
sta      L0000                         ; 0x111 $8101 85 00                     ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x113 $8103 20 5D 96   ;
lda      #$55                          ; 0x116 $8106 A9 55                     ;;A = #$55 0101_0101
ldx      #$40                          ; 0x118 $8108 A2 40                     ;;X = #$40 0100_0000
L810A                                                                          ;
sta      $2007                         ; 0x11a $810A 8D 07 20                  ;;Data ($2007) <> read/write
dex                                    ; 0x11d $810D CA                        ;
bne      L810A                         ; 0x11e $810E D0 FA                     ;
lda      #$F0                          ; 0x120 $8110 A9 F0                     ;;A = #$f0 1111_0000
ldy      #$00                          ; 0x122 $8112 A0 00                     ;;Y = #$00 0000_0000
L8114                                                                          ;
sta      $0200,y                       ; 0x124 $8114 99 00 02                  ;
iny                                    ; 0x127 $8117 C8                        ;
bne      L8114                         ; 0x128 $8118 D0 FA                     ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x12a $811A 20 34 95  ;
lda      #$84                          ; 0x12d $811D A9 84                     ;;A = #$84 1000_0100
sta      $0D                           ; 0x12f $811F 85 0D                     ;
lda      #$48                          ; 0x131 $8121 A9 48                     ;;A = #$48 0100_1000
sta      $0C                           ; 0x133 $8123 85 0C                     ;
lda      #$1A                          ; 0x135 $8125 A9 1A                     ;;A = #$1a 0001_1010
sta      $A0                           ; 0x137 $8127 85 A0                     ;
ldx      #$03                          ; 0x139 $8129 A2 03                     ;;X = #$03 0000_0011
stx      $9E                           ; 0x13b $812B 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$05                          ; 0x13d $812D A0 05                     ;;Y = #$05 0000_0101
sty      $9F                           ; 0x13f $812F 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x141 $8131 20 39 96                  ;
inc      $9F                           ; 0x144 $8134 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x146 $8136 20 39 96                  ;
inc      $9F                           ; 0x149 $8139 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x14b $813B 20 39 96                  ;
inc      $9F                           ; 0x14e $813E E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x150 $8140 20 39 96                  ;
inc      $9F                           ; 0x153 $8143 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x155 $8145 20 39 96                  ;
inc      $9F                           ; 0x158 $8148 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x15a $814A 20 39 96                  ;
lda      #$85                          ; 0x15d $814D A9 85                     ;;A = #$85 1000_0101
sta      $0D                           ; 0x15f $814F 85 0D                     ;
lda      #$40                          ; 0x161 $8151 A9 40                     ;;A = #$40 0100_0000
sta      $0C                           ; 0x163 $8153 85 0C                     ;
lda      #$02                          ; 0x165 $8155 A9 02                     ;;A = #$02 0000_0010
sta      $A0                           ; 0x167 $8157 85 A0                     ;
ldx      #$1D                          ; 0x169 $8159 A2 1D                     ;;X = #$1d 0001_1101
stx      $9E                           ; 0x16b $815B 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$05                          ; 0x16d $815D A0 05                     ;;Y = #$05 0000_0101
sty      $9F                           ; 0x16f $815F 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x171 $8161 20 39 96                  ;
ldx      #$00                          ; 0x174 $8164 A2 00                     ;;X = #$00 0000_0000
stx      $9E                           ; 0x176 $8166 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$04                          ; 0x178 $8168 A0 04                     ;;Y = #$04 0000_0100
sty      $9F                           ; 0x17a $816A 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L961F                         ; 0x17c $816C 20 1F 96                  ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x17f $816F 20 5D 96   ;
ldy      #$10                          ; 0x182 $8172 A0 10                     ;;Y = #$10 0001_0000
lda      #$00                          ; 0x184 $8174 A9 00                     ;;A = #$00 0000_0000
L8176                                                                          ;
sta      $2007                         ; 0x186 $8176 8D 07 20                  ;;Data ($2007) <> read/write
dey                                    ; 0x189 $8179 88                        ;
bne      L8176                         ; 0x18a $817A D0 FA                     ;
lda      #$84                          ; 0x18c $817C A9 84                     ;;A = #$84 1000_0100
sta      $0D                           ; 0x18e $817E 85 0D                     ;
lda      #$E4                          ; 0x190 $8180 A9 E4                     ;;A = #$e4 1110_0100
sta      $0C                           ; 0x192 $8182 85 0C                     ;
lda      #$0D                          ; 0x194 $8184 A9 0D                     ;;A = #$0d 0000_1101
sta      $A0                           ; 0x196 $8186 85 A0                     ;
ldx      #$0B                          ; 0x198 $8188 A2 0B                     ;;X = #$0b 0000_1011
stx      $9E                           ; 0x19a $818A 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0F                          ; 0x19c $818C A0 0F                     ;;Y = #$0f 0000_1111
sty      $9F                           ; 0x19e $818E 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x1a0 $8190 20 39 96                  ;
ldx      #$0B                          ; 0x1a3 $8193 A2 0B                     ;;X = #$0b 0000_1011
stx      $9E                           ; 0x1a5 $8195 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0F                          ; 0x1a7 $8197 A0 0F                     ;;Y = #$0f 0000_1111
sty      $9F                           ; 0x1a9 $8199 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L961F                         ; 0x1ab $819B 20 1F 96                  ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x1ae $819E 20 5D 96   ;
lda      #$FF                          ; 0x1b1 $81A1 A9 FF                     ;;A = #$ff 1111_1111
sta      $2007                         ; 0x1b3 $81A3 8D 07 20                  ;;Data ($2007) <> read/write
sta      $2007                         ; 0x1b6 $81A6 8D 07 20                  ;;Data ($2007) <> read/write
sta      $2007                         ; 0x1b9 $81A9 8D 07 20                  ;;Data ($2007) <> read/write
sta      $2007                         ; 0x1bc $81AC 8D 07 20                  ;;Data ($2007) <> read/write
lda      #$12                          ; 0x1bf $81AF A9 12                     ;;A = #$12 0001_0010
sta      $A0                           ; 0x1c1 $81B1 85 A0                     ;
ldx      #$05                          ; 0x1c3 $81B3 A2 05                     ;;X = #$05 0000_0101
stx      $9E                           ; 0x1c5 $81B5 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$13                          ; 0x1c7 $81B7 A0 13                     ;;Y = #$13 0001_0011
sty      $9F                           ; 0x1c9 $81B9 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x1cb $81BB 20 39 96                  ;
lda      #$1A                          ; 0x1ce $81BE A9 1A                     ;;A = #$1a 0001_1010
sta      $A0                           ; 0x1d0 $81C0 85 A0                     ;
ldx      #$05                          ; 0x1d2 $81C2 A2 05                     ;;X = #$05 0000_0101
stx      $9E                           ; 0x1d4 $81C4 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$15                          ; 0x1d6 $81C6 A0 15                     ;;Y = #$15 0001_0101
sty      $9F                           ; 0x1d8 $81C8 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x1da $81CA 20 39 96                  ;
lda      #$0B                          ; 0x1dd $81CD A9 0B                     ;;A = #$0b 0000_1011
sta      $A0                           ; 0x1df $81CF 85 A0                     ;
ldx      #$0B                          ; 0x1e1 $81D1 A2 0B                     ;;X = #$0b 0000_1011
stx      $9E                           ; 0x1e3 $81D3 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$18                          ; 0x1e5 $81D5 A0 18                     ;;Y = #$18 0001_1000
sty      $9F                           ; 0x1e7 $81D7 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x1e9 $81D9 20 39 96                  ;
lda      #$18                          ; 0x1ec $81DC A9 18                     ;;A = #$18 0001_1000
sta      $A0                           ; 0x1ee $81DE 85 A0                     ;
ldx      #$05                          ; 0x1f0 $81E0 A2 05                     ;;X = #$05 0000_0101
stx      $9E                           ; 0x1f2 $81E2 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$1A                          ; 0x1f4 $81E4 A0 1A                     ;;Y = #$1a 0001_1010
sty      $9F                           ; 0x1f6 $81E6 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x1f8 $81E8 20 39 96                  ;
lda      #$04                          ; 0x1fb $81EB A9 04                     ;;A = #$04 0000_0100
jsr      LE142                         ; 0x1fd $81ED 20 42 E1                  ;
lda      #$1E                          ; 0x200 $81F0 A9 1E                     ;;A = #$1e 0001_1110
sta      $2001                         ; 0x202 $81F2 8D 01 20                  ;
;intro/initial license screen , wait for button press                          ;
L81F5                                                                          ;
jsr      L951A                         ; 0x205 $81F5 20 1A 95                  ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x208 $81F8 20 7E 95               ;
lda      $B4                           ; 0x20b $81FB A5 B4                     ;;FF=button A      pressed
ora      $B5                           ; 0x20d $81FD 05 B5                     ;;FF=button B      pressed
ora      $B6                           ; 0x20f $81FF 05 B6                     ;;FF=button Select pressed
ora      $B7                           ; 0x211 $8201 05 B7                     ;;FF=button Start  pressed
bne      L820B                         ; 0x213 $8203 D0 06                     ;
lda      $C5                           ; 0x215 $8205 A5 C5                     ;
cmp      #$02                          ; 0x217 $8207 C9 02                     ;
bne      L81F5                         ; 0x219 $8209 D0 EA                     ;
L820B                                                                          ;
jmp      Intro__MainMenu__StartGame_or_PasswordEntry; 0x21b $820B 4C 10 82     ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L820E                                                                          ;
inc      $27                           ; 0x21e $820E E6 27                     ;
Intro__MainMenu__StartGame_or_PasswordEntry                                    ;
lda      #$00                          ; 0x220 $8210 A9 00                     ;;A = #$00 0000_0000
sta      $2001                         ; 0x222 $8212 8D 01 20                  ;
lda      #$00                          ; 0x225 $8215 A9 00                     ;;A = #$00 0000_0000
jsr      LE142                         ; 0x227 $8217 20 42 E1                  ;
lda      #$00                          ; 0x22a $821A A9 00                     ;;A = #$00 0000_0000
jsr      DF11_load_palette_and_implement__index_with_A; 0x22c $821C 20 11 DF   ;
lda      #$00                          ; 0x22f $821F A9 00                     ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x231 $8221 20 51 DF   ;
ldx      #$20                          ; 0x234 $8224 A2 20                     ;;X = #$20 0010_0000
stx      $01                           ; 0x236 $8226 86 01                     ;
ldy      #$00                          ; 0x238 $8228 A0 00                     ;;Y = #$00 0000_0000
sty      L0000                         ; 0x23a $822A 84 00                     ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x23c $822C 20 5D 96   ;
lda      #$2D                          ; 0x23f $822F A9 2D                     ;;A = #$2d 0010_1101
L8231                                                                          ;
sta      $2007                         ; 0x241 $8231 8D 07 20                  ;;Data ($2007) <> read/write
iny                                    ; 0x244 $8234 C8                        ;
bne      L8231                         ; 0x245 $8235 D0 FA                     ;
inx                                    ; 0x247 $8237 E8                        ;
cpx      #$28                          ; 0x248 $8238 E0 28                     ;
bne      L8231                         ; 0x24a $823A D0 F5                     ;
lda      #$23                          ; 0x24c $823C A9 23                     ;;A = #$23 0010_0011
sta      $01                           ; 0x24e $823E 85 01                     ;
lda      #$C0                          ; 0x250 $8240 A9 C0                     ;;A = #$c0 1100_0000
sta      L0000                         ; 0x252 $8242 85 00                     ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x254 $8244 20 5D 96   ;
lda      #$55                          ; 0x257 $8247 A9 55                     ;;A = #$55 0101_0101
ldx      #$40                          ; 0x259 $8249 A2 40                     ;;X = #$40 0100_0000
L824B                                                                          ;
sta      $2007                         ; 0x25b $824B 8D 07 20                  ;;Data ($2007) <> read/write
dex                                    ; 0x25e $824E CA                        ;
bne      L824B                         ; 0x25f $824F D0 FA                     ;
lda      #$27                          ; 0x261 $8251 A9 27                     ;;A = #$27 0010_0111
sta      $01                           ; 0x263 $8253 85 01                     ;
lda      #$C0                          ; 0x265 $8255 A9 C0                     ;;A = #$c0 1100_0000
sta      L0000                         ; 0x267 $8257 85 00                     ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x269 $8259 20 5D 96   ;
lda      #$55                          ; 0x26c $825C A9 55                     ;;A = #$55 0101_0101
ldx      #$40                          ; 0x26e $825E A2 40                     ;;X = #$40 0100_0000
L8260                                                                          ;
sta      $2007                         ; 0x270 $8260 8D 07 20                  ;;Data ($2007) <> read/write
dex                                    ; 0x273 $8263 CA                        ;
bne      L8260                         ; 0x274 $8264 D0 FA                     ;
lda      #$F0                          ; 0x276 $8266 A9 F0                     ;;A = #$f0 1111_0000
ldy      #$00                          ; 0x278 $8268 A0 00                     ;;Y = #$00 0000_0000
L826A                                                                          ;
sta      $0200,y                       ; 0x27a $826A 99 00 02                  ;
iny                                    ; 0x27d $826D C8                        ;
bne      L826A                         ; 0x27e $826E D0 FA                     ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x280 $8270 20 34 95  ;
lda      #$83                          ; 0x283 $8273 A9 83                     ;;A = #$83 1000_0011
sta      $0D                           ; 0x285 $8275 85 0D                     ;
lda      #$C7                          ; 0x287 $8277 A9 C7                     ;;A = #$c7 1100_0111
sta      $0C                           ; 0x289 $8279 85 0C                     ;
lda      #$07                          ; 0x28b $827B A9 07                     ;;A = #$07 0000_0111
sta      $A0                           ; 0x28d $827D 85 A0                     ;
lda      #$19                          ; 0x28f $827F A9 19                     ;;A = #$19 0001_1001
sta      $9E                           ; 0x291 $8281 85 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$02                          ; 0x293 $8283 A9 02                     ;;A = #$02 0000_0010
sta      $9F                           ; 0x295 $8285 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x297 $8287 20 39 96                  ;
inc      $9F                           ; 0x29a $828A E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x29c $828C 20 39 96                  ;
inc      $9F                           ; 0x29f $828F E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2a1 $8291 20 39 96                  ;
inc      $9F                           ; 0x2a4 $8294 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2a6 $8296 20 39 96                  ;
lda      #$83                          ; 0x2a9 $8299 A9 83                     ;;A = #$83 1000_0011
sta      $0D                           ; 0x2ab $829B 85 0D                     ;
lda      #$F8                          ; 0x2ad $829D A9 F8                     ;;A = #$f8 1111_1000
sta      $0C                           ; 0x2af $829F 85 0C                     ;
lda      #$04                          ; 0x2b1 $82A1 A9 04                     ;;A = #$04 0000_0100
sta      $A0                           ; 0x2b3 $82A3 85 A0                     ;
lda      #$07                          ; 0x2b5 $82A5 A9 07                     ;;A = #$07 0000_0111
sta      $9F                           ; 0x2b7 $82A7 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2b9 $82A9 20 39 96                  ;
lda      #$03                          ; 0x2bc $82AC A9 03                     ;;A = #$03 0000_0011
sta      $A0                           ; 0x2be $82AE 85 A0                     ;
inc      $9F                           ; 0x2c0 $82B0 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x2c2 $82B2 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x2c4 $82B4 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2c6 $82B6 20 39 96                  ;
inc      $9F                           ; 0x2c9 $82B9 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x2cb $82BB E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x2cd $82BD E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2cf $82BF 20 39 96                  ;
lda      #$05                          ; 0x2d2 $82C2 A9 05                     ;;A = #$05 0000_0101
sta      $A0                           ; 0x2d4 $82C4 85 A0                     ;
inc      $9F                           ; 0x2d6 $82C6 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x2d8 $82C8 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x2da $82CA E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2dc $82CC 20 39 96                  ;
lda      #$07                          ; 0x2df $82CF A9 07                     ;;A = #$07 0000_0111
sta      $A0                           ; 0x2e1 $82D1 85 A0                     ;
lda      #$08                          ; 0x2e3 $82D3 A9 08                     ;;A = #$08 0000_1000
sta      $9F                           ; 0x2e5 $82D5 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
L82D7                                                                          ;
lda      #$83                          ; 0x2e7 $82D7 A9 83                     ;;A = #$83 1000_0011
sta      $0D                           ; 0x2e9 $82D9 85 0D                     ;
lda      #$E3                          ; 0x2eb $82DB A9 E3                     ;;A = #$e3 1110_0011
sta      $0C                           ; 0x2ed $82DD 85 0C                     ;
jsr      L9639                         ; 0x2ef $82DF 20 39 96                  ;
lda      $9F                           ; 0x2f2 $82E2 A5 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x2f4 $82E4 18                        ;
adc      #$03                          ; 0x2f5 $82E5 69 03                     ;
sta      $9F                           ; 0x2f7 $82E7 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x2f9 $82E9 C9 14                     ;
bne      L82D7                         ; 0x2fb $82EB D0 EA                     ;
lda      #$09                          ; 0x2fd $82ED A9 09                     ;;A = #$09 0000_1001
sta      $9F                           ; 0x2ff $82EF 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
L82F1                                                                          ;
lda      #$83                          ; 0x301 $82F1 A9 83                     ;;A = #$83 1000_0011
sta      $0D                           ; 0x303 $82F3 85 0D                     ;
lda      #$EA                          ; 0x305 $82F5 A9 EA                     ;;A = #$ea 1110_1010
sta      $0C                           ; 0x307 $82F7 85 0C                     ;
jsr      L9639                         ; 0x309 $82F9 20 39 96                  ;
lda      $9F                           ; 0x30c $82FC A5 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
adc      #$03                          ; 0x30e $82FE 69 03                     ;
sta      $9F                           ; 0x310 $8300 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$15                          ; 0x312 $8302 C9 15                     ;
bne      L82F1                         ; 0x314 $8304 D0 EB                     ;
lda      #$07                          ; 0x316 $8306 A9 07                     ;;A = #$07 0000_0111
sta      $A0                           ; 0x318 $8308 85 A0                     ;
lda      #$13                          ; 0x31a $830A A9 13                     ;;A = #$13 0001_0011
sta      $9F                           ; 0x31c $830C 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
L830E                                                                          ;
lda      #$83                          ; 0x31e $830E A9 83                     ;;A = #$83 1000_0011
sta      $0D                           ; 0x320 $8310 85 0D                     ;
lda      #$E3                          ; 0x322 $8312 A9 E3                     ;;A = #$e3 1110_0011
sta      $0C                           ; 0x324 $8314 85 0C                     ;
jsr      L9639                         ; 0x326 $8316 20 39 96                  ;
inc      $9F                           ; 0x329 $8319 E6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x32b $831B A5 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$18                          ; 0x32d $831D C9 18                     ;
bne      L830E                         ; 0x32f $831F D0 ED                     ;
lda      #$84                          ; 0x331 $8321 A9 84                     ;;A = #$84 1000_0100
sta      $0D                           ; 0x333 $8323 85 0D                     ;
lda      #$07                          ; 0x335 $8325 A9 07                     ;;A = #$07 0000_0111
sta      $0C                           ; 0x337 $8327 85 0C                     ;
lda      #$15                          ; 0x339 $8329 A9 15                     ;;A = #$15 0001_0101
sta      $9F                           ; 0x33b $832B 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x33d $832D 20 39 96                  ;
lda      #$84                          ; 0x340 $8330 A9 84                     ;;A = #$84 1000_0100
sta      $0D                           ; 0x342 $8332 85 0D                     ;
lda      #$0E                          ; 0x344 $8334 A9 0E                     ;;A = #$0e 0000_1110
sta      $0C                           ; 0x346 $8336 85 0C                     ;
lda      #$1D                          ; 0x348 $8338 A9 1D                     ;;A = #$1d 0001_1101
sta      $A0                           ; 0x34a $833A 85 A0                     ;
lda      #$02                          ; 0x34c $833C A9 02                     ;;A = #$02 0000_0010
sta      $9E                           ; 0x34e $833E 85 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$19                          ; 0x350 $8340 A9 19                     ;;A = #$19 0001_1001
sta      $9F                           ; 0x352 $8342 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x354 $8344 20 39 96                  ;
lda      #$02                          ; 0x357 $8347 A9 02                     ;;A = #$02 0000_0010
sta      $9E                           ; 0x359 $8349 85 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$1B                          ; 0x35b $834B A9 1B                     ;;A = #$1b 0001_1011
sta      $9F                           ; 0x35d $834D 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$17                          ; 0x35f $834F A9 17                     ;;A = #$17 0001_0111
sta      $A0                           ; 0x361 $8351 85 A0                     ;
jsr      L9639                         ; 0x363 $8353 20 39 96                  ;
lda      #$1A                          ; 0x366 $8356 A9 1A                     ;;A = #$1a 0001_1010
sta      $9E                           ; 0x368 $8358 85 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$06                          ; 0x36a $835A A9 06                     ;;A = #$06 0000_0110
sta      $A0                           ; 0x36c $835C 85 A0                     ;
jsr      L9639                         ; 0x36e $835E 20 39 96                  ;
jsr      L836C                         ; 0x371 $8361 20 6C 83                  ;
lda      #$1E                          ; 0x374 $8364 A9 1E                     ;;A = #$1e 0001_1110
sta      $2001                         ; 0x376 $8366 8D 01 20                  ;
jmp      L85E0                         ; 0x379 $8369 4C E0 85                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L836C                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x37c $836C 20 7D 96              ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x37f $836F 20 34 95  ;
ldx      #$02                          ; 0x382 $8372 A2 02                     ;;X = #$02 0000_0010
stx      $9E                           ; 0x384 $8374 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$02                          ; 0x386 $8376 A0 02                     ;;Y = #$02 0000_0010
sty      $9F                           ; 0x388 $8378 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9600                         ; 0x38a $837A 20 00 96                  ;
lda      #$16                          ; 0x38d $837D A9 16                     ;;A = #$16 0001_0110
sta      $04                           ; 0x38f $837F 85 04                     ;
lda      #$06                          ; 0x391 $8381 A9 06                     ;;A = #$06 0000_0110
sta      $05                           ; 0x393 $8383 85 05                     ;
jsr      L951A                         ; 0x395 $8385 20 1A 95                  ;
L8388                                                                          ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x398 $8388 20 5D 96   ;
lda      #$40                          ; 0x39b $838B A9 40                     ;;A = #$40 0100_0000
ldy      #$16                          ; 0x39d $838D A0 16                     ;;Y = #$16 0001_0110
L838F                                                                          ;
sta      $2007                         ; 0x39f $838F 8D 07 20                  ;;Data ($2007) <> read/write
dey                                    ; 0x3a2 $8392 88                        ;
bne      L838F                         ; 0x3a3 $8393 D0 FA                     ;
lda      L0000                         ; 0x3a5 $8395 A5 00                     ;
clc                                    ; 0x3a7 $8397 18                        ;
adc      #$20                          ; 0x3a8 $8398 69 20                     ;
sta      L0000                         ; 0x3aa $839A 85 00                     ;
lda      $01                           ; 0x3ac $839C A5 01                     ;
adc      #$00                          ; 0x3ae $839E 69 00                     ;
sta      $01                           ; 0x3b0 $83A0 85 01                     ;
dec      $05                           ; 0x3b2 $83A2 C6 05                     ;
bne      L83AD                         ; 0x3b4 $83A4 D0 07                     ;
lda      #$06                          ; 0x3b6 $83A6 A9 06                     ;;A = #$06 0000_0110
sta      $05                           ; 0x3b8 $83A8 85 05                     ;
jsr      L951A                         ; 0x3ba $83AA 20 1A 95                  ;
L83AD                                                                          ;
dec      $04                           ; 0x3bd $83AD C6 04                     ;
bne      L8388                         ; 0x3bf $83AF D0 D7                     ;
lda      #$23                          ; 0x3c1 $83B1 A9 23                     ;;A = #$23 0010_0011
sta      $01                           ; 0x3c3 $83B3 85 01                     ;
lda      #$C0                          ; 0x3c5 $83B5 A9 C0                     ;;A = #$c0 1100_0000
sta      L0000                         ; 0x3c7 $83B7 85 00                     ;
jsr      L965A                         ; 0x3c9 $83B9 20 5A 96                  ;
lda      #$55                          ; 0x3cc $83BC A9 55                     ;;A = #$55 0101_0101
ldy      #$30                          ; 0x3ce $83BE A0 30                     ;;Y = #$30 0011_0000
L83C0                                                                          ;
sta      $2007                         ; 0x3d0 $83C0 8D 07 20                  ;;Data ($2007) <> read/write
dey                                    ; 0x3d3 $83C3 88                        ;
bne      L83C0                         ; 0x3d4 $83C4 D0 FA                     ;
rts                                    ; 0x3d6 $83C6 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
.byt    $2D,$2D,$2D,$2D,$2D,$2D,$2D,$BD; 0x3d7 $83C7 2D 2D 2D 2D 2D 2D 2D BD   ;;-------
.byt    $BE,$BF,$C0,$C1,$C2,$C3,$C4,$C5; 0x3df $83CF BE BF C0 C1 C2 C3 C4 C5   ;;
.byt    $C6,$C7,$C8,$C9,$CA,$CB,$CC,$CD; 0x3e7 $83D7 C6 C7 C8 C9 CA CB CC CD   ;;
.byt    $CE,$CF,$D0,$FC,$40,$40,$40,$40; 0x3ef $83DF CE CF D0 FC 40 40 40 40   ;;@@@@
.byt    $40,$40,$40,$87,$88,$89,$8A,$8B; 0x3f7 $83E7 40 40 40 87 88 89 8A 8B   ;;@@@
.byt    $8C,$8D,$8E,$8F,$90,$91,$92,$93; 0x3ff $83EF 8C 8D 8E 8F 90 91 92 93   ;;
                                                                               ;
.byt    $94,$4C,$49,$46,$45            ; 0x407 $83F7 94 4C 49 46 45            ;;LIFE
                                                                               ;
.byt    $53,$54,$52                    ; 0x40c $83FC 53 54 52                  ;;STR
                                                                               ;
.byt    $45,$58,$50                    ; 0x40f $83FF 45 58 50                  ;;EXP
                                                                               ;
.byt    $4D,$41,$47,$49,$43            ; 0x412 $8402 4D 41 47 49 43            ;;MAGIC
                                                                               ;
.byt    $4D,$4F,$4E,$53,$54,$45,$52    ; 0x417 $8407 4D 4F 4E 53 54 45 52      ;;MONSTER
                                                                               ;
.byt    $74,$75,$72,$6E                ; 0x41e $840E 74 75 72 6E               ;;turn
                                                                               ;
.byt    $40,$2D                        ; 0x422 $8412 40 2D                     ;;@-
                                                                               ;
.byt    $66,$69,$72,$65                ; 0x424 $8414 66 69 72 65               ;;fire
                                                                               ;
.byt    $40,$2D                        ; 0x428 $8418 40 2D                     ;;@-
                                                                               ;
.byt    $69,$63,$65                    ; 0x42a $841A 69 63 65                  ;;ice
                                                                               ;
.byt    $40,$40,$2D                    ; 0x42d $841D 40 40 2D                  ;;@@-
                                                                               ;
.byt    $77,$61,$76,$65                ; 0x430 $8420 77 61 76 65               ;;wave
                                                                               ;
.byt    $40,$2D                        ; 0x434 $8424 40 2D                     ;;@-
                                                                               ;
.byt    $66,$6C,$61,$73,$68            ; 0x436 $8426 66 6C 61 73 68            ;;flash
                                                                               ;
.byt    $40,$40,$40,$40,$40,$48,$40,$59; 0x43b $842B 40 40 40 40 40 48 40 59   ;;@@@@@H@Y
.byt    $40,$44,$40,$4C,$40,$49,$40,$44; 0x443 $8433 40 44 40 4C 40 49 40 44   ;;@D@L@I@D
.byt    $40,$45,$40,$40,$40,$40,$40,$41; 0x44b $843B 40 45 40 40 40 40 40 41   ;;@E@@@@@A
.byt    $54,$54,$41,$43,$4B,$ED,$EE,$ED; 0x453 $8443 54 54 41 43 4B ED EE ED   ;;TTACK
.byt    $EE,$ED,$EE,$ED,$EE,$ED,$EF,$EF; 0x45b $844B EE ED EE ED EE ED EF EF   ;;
.byt    $F5,$ED,$EE,$40,$40,$ED,$EE,$ED; 0x463 $8453 F5 ED EE 40 40 ED EE ED   ;;@@
.byt    $EF,$EF,$F5,$ED,$EF,$EF,$EE,$F1; 0x46b $845B EF EF F5 ED EF EF EE F1   ;;
.byt    $F2,$F1,$F2,$F1,$F2,$F1,$F2,$F1; 0x473 $8463 F2 F1 F2 F1 F2 F1 F2 F1   ;;
.byt    $F9,$FA,$F2,$F1,$F2,$40,$40,$F1; 0x47b $846B F9 FA F2 F1 F2 40 40 F1   ;;@@
.byt    $F2,$F1,$F9,$FA,$F2,$F1,$F9,$F0; 0x483 $8473 F2 F1 F9 FA F2 F1 F9 F0   ;;
.byt    $F4,$F1,$F7,$F8,$F2,$F1,$F7,$F8; 0x48b $847B F4 F1 F7 F8 F2 F1 F7 F8   ;;
.byt    $F2,$F1,$F2,$F1,$F2,$F1,$F2,$40; 0x493 $8483 F2 F1 F2 F1 F2 F1 F2 40   ;;@
.byt    $40,$F1,$F2,$F1,$F2,$F1,$F2,$F1; 0x49b $848B 40 F1 F2 F1 F2 F1 F2 F1   ;;@
.byt    $F7,$EF,$EE,$F1,$F9,$FA,$F2,$F3; 0x4a3 $8493 F7 EF EE F1 F9 FA F2 F3   ;;
.byt    $FA,$F9,$F4,$F1,$F2,$F1,$F2,$F1; 0x4ab $849B FA F9 F4 F1 F2 F1 F2 F1   ;;
.byt    $F2,$40,$40,$F1,$F2,$F1,$F2,$F1; 0x4b3 $84A3 F2 40 40 F1 F2 F1 F2 F1   ;;@@
.byt    $F2,$F1,$F9,$F0,$F4,$F1,$F2,$F1; 0x4bb $84AB F2 F1 F9 F0 F4 F1 F2 F1   ;;
.byt    $F2,$40,$F1,$F2,$40,$F1,$F7,$F8; 0x4c3 $84B3 F2 40 F1 F2 40 F1 F7 F8   ;;@@
.byt    $F2,$F1,$F7,$EF,$EE,$F1,$F2,$F1; 0x4cb $84BB F2 F1 F7 EF EE F1 F2 F1   ;;
.byt    $F7,$F8,$F2,$F1,$F7,$EF,$EE,$F3; 0x4d3 $84C3 F7 F8 F2 F1 F7 EF EE F3   ;;
.byt    $F4,$F3,$F4,$40,$F3,$F4,$40,$F3; 0x4db $84CB F4 F3 F4 40 F3 F4 40 F3   ;;@@
.byt    $F0,$F0,$F6,$F3,$F0,$F0,$F4,$F3; 0x4e3 $84D3 F0 F0 F6 F3 F0 F0 F4 F3   ;;
.byt    $F4,$F3,$F0,$F0,$F6,$F3,$F0,$F0; 0x4eb $84DB F4 F3 F0 F0 F6 F3 F0 F0   ;;
;PUSH@BUTTON@<{1986@T ESOFT@INC{1989@FCI?PONYCANYON@INCLICENSED@BYNINTENDO@OF@AMERICA@INCtm     ;
.byt    $F4,$50,$55,$53,$48,$40,$42,$55; 0x4f3 $84E3 F4 50 55 53 48 40 42 55   ;;PUSH@BU
.byt    $54,$54,$4F,$4E,$40,$3C,$7B,$31; 0x4fb $84EB 54 54 4F 4E 40 3C 7B 31   ;;TTON@<{1
.byt    $39,$38,$36,$40,$54,$3B,$45,$53; 0x503 $84F3 39 38 36 40 54 3B 45 53   ;;986@T;ES
.byt    $4F,$46,$54,$40,$49,$4E,$43,$FB; 0x50b $84FB 4F 46 54 40 49 4E 43 FB   ;;OFT@INC
.byt    $7B,$31,$39,$38,$39,$40,$46,$43; 0x513 $8503 7B 31 39 38 39 40 46 43   ;;{1989@FC
.byt    $49,$FD,$3F,$50,$4F,$4E,$59,$43; 0x51b $850B 49 FD 3F 50 4F 4E 59 43   ;;I?PONYC
.byt    $41,$4E,$59,$4F,$4E,$40,$49,$4E; 0x523 $8513 41 4E 59 4F 4E 40 49 4E   ;;ANYON@IN
.byt    $43,$FB,$4C,$49,$43,$45,$4E,$53; 0x52b $851B 43 FB 4C 49 43 45 4E 53   ;;CLICENS
.byt    $45,$44,$40,$42,$59,$4E,$49,$4E; 0x533 $8523 45 44 40 42 59 4E 49 4E   ;;ED@BYNIN
.byt    $54,$45,$4E,$44,$4F,$40,$4F,$46; 0x53b $852B 54 45 4E 44 4F 40 4F 46   ;;TENDO@OF
.byt    $40,$41,$4D,$45,$52,$49,$43,$41; 0x543 $8533 40 41 4D 45 52 49 43 41   ;;@AMERICA
.byt    $40,$49,$4E,$43,$FB,$74,$6D,$20; 0x54b $853B 40 49 4E 43 FB 74 6D 20   ;;@INCtm 
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x553 $8543 20 20 20 20 20 20 20 20   ;;        
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x55b $854B 20 20 20 20 20 20 20 20   ;;        
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x563 $8553 20 20 20 20 20 20 20 20   ;;        
.byt    $20,$20,$20,$20,$20            ; 0x56b $855B 20 20 20 20 20            ;;     
text_HYDLIDE_copied_to_100_in_ram                                              ;
;HYDLIDE                                                                       ;
;(C)1986 T&E SOFT                                                              ;
;Programed by                                                                  ;
;     EIJI KATO                                                                ;
;'85.11.13 - 1.10                                                              ;
; V1.0D '89. 1.12                                                              ;
.byt    $48,$59,$44,$4C,$49,$44,$45,$20; 0x570 $8560 48 59 44 4C 49 44 45 20   ;;HYDLIDE 
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x578 $8568 20 20 20 20 20 20 20 20   ;;        
.byt    $28,$43,$29,$31,$39,$38,$36,$20; 0x580 $8570 28 43 29 31 39 38 36 20   ;;(C)1986 
.byt    $54,$26,$45,$20,$53,$4F,$46,$54; 0x588 $8578 54 26 45 20 53 4F 46 54   ;;T&E SOFT
.byt    $50,$72,$6F,$67,$72,$61,$6D,$65; 0x590 $8580 50 72 6F 67 72 61 6D 65   ;;Programe
.byt    $64,$20,$62,$79,$20,$20,$20,$20; 0x598 $8588 64 20 62 79 20 20 20 20   ;;d by    
.byt    $20,$20,$20,$20,$20,$45,$49,$4A; 0x5a0 $8590 20 20 20 20 20 45 49 4A   ;;     EIJ
.byt    $49,$20,$4B,$41,$54,$4F,$20,$20; 0x5a8 $8598 49 20 4B 41 54 4F 20 20   ;;I KATO  
.byt    $27,$38,$35,$2E,$31,$31,$2E,$31; 0x5b0 $85A0 27 38 35 2E 31 31 2E 31   ;;'85.11.1
.byt    $33,$20,$2D,$20,$31,$2E,$31,$30; 0x5b8 $85A8 33 20 2D 20 31 2E 31 30   ;;3 - 1.10
.byt    $20,$56,$31,$2E,$30,$44,$20,$27; 0x5c0 $85B0 20 56 31 2E 30 44 20 27   ;; V1.0D '
.byt    $38,$39,$2E,$20,$31,$2E,$31,$32; 0x5c8 $85B8 38 39 2E 20 31 2E 31 32   ;;89. 1.12
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x5d0 $85C0 20 20 20 20 20 20 20 20   ;;        
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x5d8 $85C8 20 20 20 20 20 20 20 20   ;;        
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x5e0 $85D0 20 20 20 20 20 20 20 20   ;;        
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x5e8 $85D8 20 20 20 20 20 20 20 20   ;;        
; ---------------------------------------------------------------------------- ;
L85E0                                                                          ;
ldx      #$FF                          ; 0x5f0 $85E0 A2 FF                     ;;X = #$ff 1111_1111
txs                                    ; 0x5f2 $85E2 9A                        ;
ldy      #$00                          ; 0x5f3 $85E3 A0 00                     ;;Y = #$00 0000_0000
lda      #$F0                          ; 0x5f5 $85E5 A9 F0                     ;;A = #$f0 1111_0000
L85E7                                                                          ;
sta      $0200,y                       ; 0x5f7 $85E7 99 00 02                  ;
iny                                    ; 0x5fa $85EA C8                        ;
bne      L85E7                         ; 0x5fb $85EB D0 FA                     ;
ldy      #$3F                          ; 0x5fd $85ED A0 3F                     ;;Y = #$3f 0011_1111
ldx      #$E9                          ; 0x5ff $85EF A2 E9                     ;;X = #$e9 1110_1001
lda      #$00                          ; 0x601 $85F1 A9 00                     ;;A = #$00 0000_0000
sty      $02F8                         ; 0x603 $85F3 8C F8 02                  ;
stx      $02F9                         ; 0x606 $85F6 8E F9 02                  ;
sta      $02FA                         ; 0x609 $85F9 8D FA 02                  ;
ldy      #$87                          ; 0x60c $85FC A0 87                     ;;Y = #$87 1000_0111
sty      $02CC                         ; 0x60e $85FE 8C CC 02                  ;
stx      $02CD                         ; 0x611 $8601 8E CD 02                  ;
L8604                                                                          ;
sta      $02CE                         ; 0x614 $8604 8D CE 02                  ;
stx      $02FD                         ; 0x617 $8607 8E FD 02                  ;
sta      $02FE                         ; 0x61a $860A 8D FE 02                  ;
ldx      #$C0                          ; 0x61d $860D A2 C0                     ;;X = #$c0 1100_0000
stx      $02FB                         ; 0x61f $860F 8E FB 02                  ;
stx      $02CF                         ; 0x622 $8612 8E CF 02                  ;
L8615                                                                          ;
ldx      #$FF                          ; 0x625 $8615 A2 FF                     ;;X = #$ff 1111_1111
txs                                    ; 0x627 $8617 9A                        ;
lda      #$00                          ; 0x628 $8618 A9 00                     ;;A = #$00 0000_0000
sta      $28                           ; 0x62a $861A 85 28                     ;
sta      $9A                           ; 0x62c $861C 85 9A                     ;
lda      #$00                          ; 0x62e $861E A9 00                     ;;A = #$00 0000_0000
jsr      LE142                         ; 0x630 $8620 20 42 E1                  ;
jsr      L96CA                         ; 0x633 $8623 20 CA 96                  ;
jmp      LA927                         ; 0x636 $8626 4C 27 A9                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Player_SetUpForNewGame                                                         ;
ldx      #$FF                          ; 0x639 $8629 A2 FF                     ;;X = #$ff 1111_1111
txs                                    ; 0x63b $862B 9A                        ;
ldx      #$36                          ; 0x63c $862C A2 36                     ;;X = #$36 0011_0110
lda      #$00                          ; 0x63e $862E A9 00                     ;;A = #$00 0000_0000
L8630                                                                          ;
sta      L0000,x                       ; 0x640 $8630 95 00                     ;
inx                                    ; 0x642 $8632 E8                        ;
cpx      #$88                          ; 0x643 $8633 E0 88                     ;
bne      L8630                         ; 0x645 $8635 D0 F9                     ;
lda      #$0D                          ; 0x647 $8637 A9 0D                     ;;A = #$0d 0000_1101
sta      $36                           ; 0x649 $8639 85 36                     ;;player PosX, 0-14 (small meta-tile size)
lda      #$09                          ; 0x64b $863B A9 09                     ;;A = #$09 0000_1001
sta      $37                           ; 0x64d $863D 85 37                     ;;player PosY, 0-14 (small meta-tile size)
lda      #$0A                          ; 0x64f $863F A9 0A                     ;;A = #$0a 0000_1010
sta      $39                           ; 0x651 $8641 85 39                     ;;player str
sta      $38                           ; 0x653 $8643 85 38                     ;;player hp
sta      $41                           ; 0x655 $8645 85 41                     ;;player max hp
sta      $3B                           ; 0x657 $8647 85 3B                     ;;player mp
sta      $42                           ; 0x659 $8649 85 42                     ;;player max mp
lda      #$FF                          ; 0x65b $864B A9 FF                     ;;A = #$ff 1111_1111
sta      $4F                           ; 0x65d $864D 85 4F                     ;;FF=chest for sword apppears
sta      $52                           ; 0x65f $864F 85 52                     ;;FF=chest for cross appears
sta      $54                           ; 0x661 $8651 85 54                     ;;FF=chest for pot appears
sta      $56                           ; 0x663 $8653 85 56                     ;;FF=chest for jewel appears ??
lda      #$00                          ; 0x665 $8655 A9 00                     ;;A = #$00 0000_0000
sta      $47                           ; 0x667 $8657 85 47                     ;;player CurrentArea       
sta      $48                           ; 0x669 $8659 85 48                     ;;player Screen X (0 to 4)
sta      $49                           ; 0x66b $865B 85 49                     ;;player Screen Y (0 to 4)
L865D                                                                          ;
ldx      #$FF                          ; 0x66d $865D A2 FF                     ;;X = #$ff 1111_1111
txs                                    ; 0x66f $865F 9A                        ;
lda      #$12                          ; 0x670 $8660 A9 12                     ;;A = #$12 0001_0010
sta      $88                           ; 0x672 $8662 85 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
jsr      Monster__Load_HP_from_Table__index_with_Type; 0x674 $8664 20 44 D1    ;
sta      $71                           ; 0x677 $8667 85 71                     ;;HP for monster, maybe?? (monster 12:	;DRAGON@)
lda      #$13                          ; 0x679 $8669 A9 13                     ;;A = #$13 0001_0011
sta      $88                           ; 0x67b $866B 85 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
jsr      Monster__Load_HP_from_Table__index_with_Type; 0x67d $866D 20 44 D1    ;
sta      $72                           ; 0x680 $8670 85 72                     ;;HP for monster, maybe?? (monster 13:	;VARALYS)
lda      $35                           ; 0x682 $8672 A5 35                     ;
sta      $34                           ; 0x684 $8674 85 34                     ;
lda      #$03                          ; 0x686 $8676 A9 03                     ;;A = #$03 0000_0011
jsr      RNG_get_random_number__A_is_max; 0x688 $8678 20 8E 96                 ;
tax                                    ; 0x68b $867B AA                        ;
inx                                    ; 0x68c $867C E8                        ;
stx      $7C                           ; 0x68d $867D 86 7C                     ;;Fairy2TreePosition?
lda      #$07                          ; 0x68f $867F A9 07                     ;;A = #$07 0000_0111
jsr      RNG_get_random_number__A_is_max; 0x691 $8681 20 8E 96                 ;
tax                                    ; 0x694 $8684 AA                        ;
inx                                    ; 0x695 $8685 E8                        ;
stx      $70                           ; 0x696 $8686 86 70                     ;;x index of fake chest which contains the key (KeyChestPosition)
lda      #$09                          ; 0x698 $8688 A9 09                     ;;A = #$09 0000_1001
jsr      RNG_get_random_number__A_is_max; 0x69a $868A 20 8E 96                 ;
tax                                    ; 0x69d $868D AA                        ;
inx                                    ; 0x69e $868E E8                        ;
stx      $7A                           ; 0x69f $868F 86 7A                     ;;Fairy1TreePosition?
jsr      DrawGraphicBar_for_HP         ; 0x6a1 $8691 20 42 97                  ;
jsr      DrawGraphicBar_for_STR        ; 0x6a4 $8694 20 51 97                  ;
jsr      DrawGraphicBar_for_EXP        ; 0x6a7 $8697 20 57 97                  ;
jsr      DrawGraphicBar_for_MP         ; 0x6aa $869A 20 5D 97                  ;
jsr      Setup_Pointer_9E_and_C__and_Increment9F_andSomething; 0x6ad $869D 20 92 97;
lda      #$00                          ; 0x6b0 $86A0 A9 00                     ;;A = #$00 0000_0000
sta      $7D                           ; 0x6b2 $86A2 85 7D                     ;
jsr      LA196                         ; 0x6b4 $86A4 20 96 A1                  ;
lda      #$FF                          ; 0x6b7 $86A7 A9 FF                     ;;A = #$ff 1111_1111
sta      $80                           ; 0x6b9 $86A9 85 80                     ;
sta      $4A                           ; 0x6bb $86AB 85 4A                     ;
sta      $4D                           ; 0x6bd $86AD 85 4D                     ;
sta      $4E                           ; 0x6bf $86AF 85 4E                     ;
jsr      LoadScreenCurrent_LoadAndDraw__Sprites__Something; 0x6c1 $86B1 20 BB D4;
L86B4                                                                          ;
ldx      #$FF                          ; 0x6c4 $86B4 A2 FF                     ;;X = #$ff 1111_1111
txs                                    ; 0x6c6 $86B6 9A                        ;
lda      #$00                          ; 0x6c7 $86B7 A9 00                     ;;A = #$00 0000_0000
sta      $85                           ; 0x6c9 $86B9 85 85                     ;
jsr      ClearAll200__set200toF0__setA7to00; 0x6cb $86BB 20 7D 96              ;
jsr      L86E9                         ; 0x6ce $86BE 20 E9 86                  ;
jsr      L8782                         ; 0x6d1 $86C1 20 82 87                  ;
jsr      L8A3B                         ; 0x6d4 $86C4 20 3B 8A                  ;
jsr      L919D                         ; 0x6d7 $86C7 20 9D 91                  ;
jsr      l8B38_JumpToRoutine_BasedOn_PlayerCurrentArea; 0x6da $86CA 20 38 8B   ;
jsr      L8EA3                         ; 0x6dd $86CD 20 A3 8E                  ;
jsr      LBAF2                         ; 0x6e0 $86D0 20 F2 BA                  ;
jsr      Monster__Detect_if_being_attacked_by_played; 0x6e3 $86D3 20 06 8F     ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x6e6 $86D6 20 34 95  ;
lda      $9A                           ; 0x6e9 $86D9 A5 9A                     ;
bne      L86E6                         ; 0x6eb $86DB D0 09                     ;
jsr      PlayerMP_Regen__Palette__UpdateGraphicBarForMP; 0x6ed $86DD 20 76 9A  ;
jsr      LA2EB                         ; 0x6f0 $86E0 20 EB A2                  ;
jsr      LA82E                         ; 0x6f3 $86E3 20 2E A8                  ;
L86E6                                                                          ;
jmp      L86B4                         ; 0x6f6 $86E6 4C B4 86                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L86E9                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x6f9 $86E9 20 7E 95               ;
lda      $9A                           ; 0x6fc $86EC A5 9A                     ;
bne      L8715                         ; 0x6fe $86EE D0 25                     ;
lda      $B4                           ; 0x700 $86F0 A5 B4                     ;;FF=button A      pressed
sta      $B1                           ; 0x702 $86F2 85 B1                     ;;player defense / attack mode (00=defense, FF=attack)
bne      L86FA                         ; 0x704 $86F4 D0 04                     ;if button A is pressed goto $86FA
lda      #$FF                          ; 0x706 $86F6 A9 FF                     ;;A = #$ff 1111_1111
sta      $80                           ; 0x708 $86F8 85 80                     ;
;roll d-pad controls into $AE: bit 3-0: right, up, left, down                  ;
L86FA                                                                          ;
lda      #$00                          ; 0x70a $86FA A9 00                     ;;A = #$00 0000_0000
sta      $AE                           ; 0x70c $86FC 85 AE                     ;;bit 3-0: right, up, left, down
lda      $BB                           ; 0x70e $86FE A5 BB                     ;;FF=button Right  pressed
asl                                    ; 0x710 $8700 0A                        ;
rol      $AE                           ; 0x711 $8701 26 AE                     ;;bit 3-0: right, up, left, down
lda      $B8                           ; 0x713 $8703 A5 B8                     ;;FF=button Up     pressed
asl                                    ; 0x715 $8705 0A                        ;
rol      $AE                           ; 0x716 $8706 26 AE                     ;;bit 3-0: right, up, left, down
lda      $BA                           ; 0x718 $8708 A5 BA                     ;;FF=button Left   pressed
asl                                    ; 0x71a $870A 0A                        ;
rol      $AE                           ; 0x71b $870B 26 AE                     ;;bit 3-0: right, up, left, down
lda      $B9                           ; 0x71d $870D A5 B9                     ;;FF=button Down   pressed
asl                                    ; 0x71f $870F 0A                        ;
rol      $AE                           ; 0x720 $8710 26 AE                     ;;bit 3-0: right, up, left, down
jmp      L8760                         ; 0x722 $8712 4C 60 87                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8715                                                                          ;
lda      $B6                           ; 0x725 $8715 A5 B6                     ;;FF=button Select pressed
ora      $B7                           ; 0x727 $8717 05 B7                     ;;FF=button Start  pressed
beq      L871E                         ; 0x729 $8719 F0 03                     ;
L871B                                                                          ;
jmp      L8615                         ; 0x72b $871B 4C 15 86                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L871E                                                                          ;
dec      $2D                           ; 0x72e $871E C6 2D                     ;
beq      L871B                         ; 0x730 $8720 F0 F9                     ;
lda      $AF                           ; 0x732 $8722 A5 AF                     ;
bne      L873E                         ; 0x734 $8724 D0 18                     ;
ldy      $B0                           ; 0x736 $8726 A4 B0                     ;
lda      Intro__auto_commands__maybe,y ; 0x738 $8728 B9 00 EA                  ;
iny                                    ; 0x73b $872B C8                        ;
sty      $B0                           ; 0x73c $872C 84 B0                     ;
pha                                    ; 0x73e $872E 48                        ;save auto-cmd
and      #$0F                          ; 0x73f $872F 29 0F                     ;;Keep Bits:0000_1111
bne      L8735                         ; 0x741 $8731 D0 02                     ;
lda      #$10                          ; 0x743 $8733 A9 10                     ;;A = #$10 0001_0000
L8735                                                                          ;
;save the lowbyte of the intro-auto-cmd to $AF (unless there isn't one , then save #$10);
sta      $AF                           ; 0x745 $8735 85 AF                     ;
pla                                    ; 0x747 $8737 68                        ;restore auto-cmd
lsr                                    ; 0x748 $8738 4A                        ;
lsr                                    ; 0x749 $8739 4A                        ;
lsr                                    ; 0x74a $873A 4A                        ;
lsr                                    ; 0x74b $873B 4A                        ;
;save the highbyte of the intro-auto-cmd (moved to lowbyte) to $AE             ;
;THIS IS THE DEMONSTRATION AUTO-BUTTON PRESSES                                 ;
sta      $AE                           ; 0x74c $873C 85 AE                     ;;bit 3-0: right, up, left, down
L873E                                                                          ;
dec      $AF                           ; 0x74e $873E C6 AF                     ;
lda      $B2                           ; 0x750 $8740 A5 B2                     ;
bne      L875E                         ; 0x752 $8742 D0 1A                     ;
ldy      $B3                           ; 0x754 $8744 A4 B3                     ;
lda      LEB00,y                       ; 0x756 $8746 B9 00 EB                  ;
iny                                    ; 0x759 $8749 C8                        ;
sty      $B3                           ; 0x75a $874A 84 B3                     ;
pha                                    ; 0x75c $874C 48                        ;
and      #$0F                          ; 0x75d $874D 29 0F                     ;;Keep Bits:0000_1111
bne      L8753                         ; 0x75f $874F D0 02                     ;
lda      #$10                          ; 0x761 $8751 A9 10                     ;;A = #$10 0001_0000
L8753                                                                          ;
sta      $B2                           ; 0x763 $8753 85 B2                     ;
pla                                    ; 0x765 $8755 68                        ;
ldy      #$00                          ; 0x766 $8756 A0 00                     ;;Y = #$00 0000_0000
asl                                    ; 0x768 $8758 0A                        ;
bcc      L875C                         ; 0x769 $8759 90 01                     ;
dey                                    ; 0x76b $875B 88                        ;
L875C                                                                          ;
sty      $B1                           ; 0x76c $875C 84 B1                     ;;player defense / attack mode (00=defense, FF=attack)
L875E                                                                          ;
dec      $B2                           ; 0x76e $875E C6 B2                     ;
L8760                                                                          ;
jsr      Setup_Pointer_9E_and_C__and_Increment9F_andSomething; 0x770 $8760 20 92 97;
inc      $9E                           ; 0x773 $8763 E6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$1B                          ; 0x775 $8765 A9 1B                     ;;A = #$1b 0001_1011
sta      $9F                           ; 0x777 $8767 85 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $A0                           ; 0x779 $8769 C6 A0                     ;
lda      $B1                           ; 0x77b $876B A5 B1                     ;;player defense / attack mode (00=defense, FF=attack)
beq      L8776                         ; 0x77d $876D F0 07                     ;
ldx      #$9A                          ; 0x77f $876F A2 9A                     ;;X = #$9a 1001_1010
ldy      #$15                          ; 0x781 $8771 A0 15                     ;;Y = #$15 0001_0101
jmp      L877A                         ; 0x783 $8773 4C 7A 87                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8776                                                                          ;
ldx      #$9A                          ; 0x786 $8776 A2 9A                     ;;X = #$9a 1001_1010
ldy      #$1B                          ; 0x788 $8778 A0 1B                     ;;Y = #$1b 0001_1011
L877A                                                                          ;
stx      $0D                           ; 0x78a $877A 86 0D                     ;
sty      $0C                           ; 0x78c $877C 84 0C                     ;
jsr      L9639                         ; 0x78e $877E 20 39 96                  ;
rts                                    ; 0x791 $8781 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8782                                                                          ;
jsr      L9297                         ; 0x792 $8782 20 97 92                  ;
lda      #$00                          ; 0x795 $8785 A9 00                     ;;A = #$00 0000_0000
sta      $4A                           ; 0x797 $8787 85 4A                     ;
lda      $AE                           ; 0x799 $8789 A5 AE                     ;;bit 3-0: right, up, left, down
sta      $83                           ; 0x79b $878B 85 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
beq      L87E5                         ; 0x79d $878D F0 56                     ;
sta      $82                           ; 0x79f $878F 85 82                     ;
lda      $47                           ; 0x7a1 $8791 A5 47                     ;;player CurrentArea       
cmp      #$21                          ; 0x7a3 $8793 C9 21                     ;
bpl      L87A9                         ; 0x7a5 $8795 10 12                     ;
lda      $40                           ; 0x7a7 $8797 A5 40                     ;;player tile index(of background ppu tiles) at feet 
cmp      #$03                          ; 0x7a9 $8799 C9 03                     ;dark grass
beq      L87A1                         ; 0x7ab $879B F0 04                     ;
cmp      #$04                          ; 0x7ad $879D C9 04                     ;brown brick
bne      L87A9                         ; 0x7af $879F D0 08                     ;
L87A1                                                                          ;
lda      $3F                           ; 0x7b1 $87A1 A5 3F                     ;
and      #$01                          ; 0x7b3 $87A3 29 01                     ;;Keep Bits:0000_0001
bne      L87AF                         ; 0x7b5 $87A5 D0 08                     ;
beq      L87C1                         ; 0x7b7 $87A7 F0 18                     ;
L87A9                                                                          ;
lda      $3F                           ; 0x7b9 $87A9 A5 3F                     ;
and      #$01                          ; 0x7bb $87AB 29 01                     ;;Keep Bits:0000_0001
bne      L87C1                         ; 0x7bd $87AD D0 12                     ;
L87AF                                                                          ;
lda      $82                           ; 0x7bf $87AF A5 82                     ;
and      #$01                          ; 0x7c1 $87B1 29 01                     ;;Keep Bits:0000_0001
beq      L87B8                         ; 0x7c3 $87B3 F0 03                     ;
jsr      L8804                         ; 0x7c5 $87B5 20 04 88                  ;
L87B8                                                                          ;
lda      $82                           ; 0x7c8 $87B8 A5 82                     ;
and      #$04                          ; 0x7ca $87BA 29 04                     ;;Keep Bits:0000_0100
beq      L87C1                         ; 0x7cc $87BC F0 03                     ;
jsr      L8867                         ; 0x7ce $87BE 20 67 88                  ;
L87C1                                                                          ;
lda      $82                           ; 0x7d1 $87C1 A5 82                     ;
and      #$02                          ; 0x7d3 $87C3 29 02                     ;;Keep Bits:0000_0010
beq      L87CA                         ; 0x7d5 $87C5 F0 03                     ;
jsr      L88EF                         ; 0x7d7 $87C7 20 EF 88                  ;
L87CA                                                                          ;
lda      $82                           ; 0x7da $87CA A5 82                     ;
and      #$08                          ; 0x7dc $87CC 29 08                     ;;Keep Bits:0000_1000
beq      L87D3                         ; 0x7de $87CE F0 03                     ;
jsr      L8952                         ; 0x7e0 $87D0 20 52 89                  ;
L87D3                                                                          ;
lda      $82                           ; 0x7e3 $87D3 A5 82                     ;
and      #$01                          ; 0x7e5 $87D5 29 01                     ;;Keep Bits:0000_0001
beq      L87DC                         ; 0x7e7 $87D7 F0 03                     ;
jsr      L8804                         ; 0x7e9 $87D9 20 04 88                  ;
L87DC                                                                          ;
lda      $82                           ; 0x7ec $87DC A5 82                     ;
and      #$04                          ; 0x7ee $87DE 29 04                     ;;Keep Bits:0000_0100
beq      L87E5                         ; 0x7f0 $87E0 F0 03                     ;
jsr      L8867                         ; 0x7f2 $87E2 20 67 88                  ;
L87E5                                                                          ;
lda      $83                           ; 0x7f5 $87E5 A5 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
bpl      L87F3                         ; 0x7f7 $87E7 10 0A                     ;
lda      #$00                          ; 0x7f9 $87E9 A9 00                     ;;A = #$00 0000_0000
sta      $84                           ; 0x7fb $87EB 85 84                     ;
lda      #$FF                          ; 0x7fd $87ED A9 FF                     ;;A = #$ff 1111_1111
sta      $80                           ; 0x7ff $87EF 85 80                     ;
bne      L87FC                         ; 0x801 $87F1 D0 09                     ;
L87F3                                                                          ;
jsr      L951A                         ; 0x803 $87F3 20 1A 95                  ;
jsr      L951A                         ; 0x806 $87F6 20 1A 95                  ;
jsr      L87FC                         ; 0x809 $87F9 20 FC 87                  ;
L87FC                                                                          ;
lda      $35                           ; 0x80c $87FC A5 35                     ;
bne      L8803                         ; 0x80e $87FE D0 03                     ;
jsr      L951A                         ; 0x810 $8800 20 1A 95                  ;
L8803                                                                          ;
rts                                    ; 0x813 $8803 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8804                                                                          ;
lda      #$00                          ; 0x814 $8804 A9 00                     ;;A = #$00 0000_0000
sta      $3F                           ; 0x816 $8806 85 3F                     ;
lda      $37                           ; 0x818 $8808 A5 37                     ;;player PosY, 0-14 (small meta-tile size)
cmp      #$14                          ; 0x81a $880A C9 14                     ;
beq      Screen_TakeExit_Down          ; 0x81c $880C F0 1D                     ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x81e $880E 20 72 96;
ldy      #$2C                          ; 0x821 $8811 A0 2C                     ;;Y = #$2c 0010_1100
lda      ($0E),y                       ; 0x823 $8813 B1 0E                     ;
iny                                    ; 0x825 $8815 C8                        ;
ora      ($0E),y                       ; 0x826 $8816 11 0E                     ;
and      #$C0                          ; 0x828 $8818 29 C0                     ;;Keep Bits:1100_0000
bne      L882A                         ; 0x82a $881A D0 0E                     ;
lda      #$FF                          ; 0x82c $881C A9 FF                     ;;A = #$ff 1111_1111
sta      $83                           ; 0x82e $881E 85 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
jsr      L8A10                         ; 0x830 $8820 20 10 8A                  ;
inc      $37                           ; 0x833 $8823 E6 37                     ;;player PosY, 0-14 (small meta-tile size)
L8825                                                                          ;
pla                                    ; 0x835 $8825 68                        ;
pla                                    ; 0x836 $8826 68                        ;
jmp      L87E5                         ; 0x837 $8827 4C E5 87                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L882A                                                                          ;
rts                                    ; 0x83a $882A 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_TakeExit_Down                                                           ;
lda      #$00                          ; 0x83b $882B A9 00                     ;;A = #$00 0000_0000
sta      $37                           ; 0x83d $882D 85 37                     ;;player PosY, 0-14 (small meta-tile size)
lda      $47                           ; 0x83f $882F A5 47                     ;;player CurrentArea       
cmp      #$19                          ; 0x841 $8831 C9 19                     ;
bpl      L8847                         ; 0x843 $8833 10 12                     ;
inc      $49                           ; 0x845 $8835 E6 49                     ;;player Screen Y (0 to 4)
lda      $49                           ; 0x847 $8837 A5 49                     ;;player Screen Y (0 to 4)
cmp      #$05                          ; 0x849 $8839 C9 05                     ;
bmi      L8841                         ; 0x84b $883B 30 04                     ;
lda      #$00                          ; 0x84d $883D A9 00                     ;;A = #$00 0000_0000
sta      $49                           ; 0x84f $883F 85 49                     ;;player Screen Y (0 to 4)
L8841                                                                          ;
jsr      L89D4                         ; 0x851 $8841 20 D4 89                  ;
jmp      L8825                         ; 0x854 $8844 4C 25 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8847                                                                          ;
cmp      #$1B                          ; 0x857 $8847 C9 1B                     ;
beq      L8857                         ; 0x859 $8849 F0 0C                     ;
cmp      #$21                          ; 0x85b $884B C9 21                     ;
beq      L885F                         ; 0x85d $884D F0 10                     ;
lda      #$1A                          ; 0x85f $884F A9 1A                     ;;A = #$1a 0001_1010
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x861 $8851 20 DC 89 ;
jmp      L8825                         ; 0x864 $8854 4C 25 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8857                                                                          ;
lda      #$1C                          ; 0x867 $8857 A9 1C                     ;;A = #$1c 0001_1100
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x869 $8859 20 DC 89 ;
jmp      L8825                         ; 0x86c $885C 4C 25 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L885F                                                                          ;
lda      #$22                          ; 0x86f $885F A9 22                     ;;A = #$22 0010_0010
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x871 $8861 20 DC 89 ;
jmp      L8825                         ; 0x874 $8864 4C 25 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8867                                                                          ;
lda      #$02                          ; 0x877 $8867 A9 02                     ;;A = #$02 0000_0010
sta      $3F                           ; 0x879 $8869 85 3F                     ;
lda      $37                           ; 0x87b $886B A5 37                     ;;player PosY, 0-14 (small meta-tile size)
beq      Screen_TakeExit_Up            ; 0x87d $886D F0 2A                     ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x87f $886F 20 72 96;
lda      $0E                           ; 0x882 $8872 A5 0E                     ;
sec                                    ; 0x884 $8874 38                        ;
sbc      #$16                          ; 0x885 $8875 E9 16                     ;
sta      $0E                           ; 0x887 $8877 85 0E                     ;
lda      $0F                           ; 0x889 $8879 A5 0F                     ;
sbc      #$00                          ; 0x88b $887B E9 00                     ;
sta      $0F                           ; 0x88d $887D 85 0F                     ;
ldy      #$00                          ; 0x88f $887F A0 00                     ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x891 $8881 B1 0E                     ;
iny                                    ; 0x893 $8883 C8                        ;
ora      ($0E),y                       ; 0x894 $8884 11 0E                     ;
and      #$C0                          ; 0x896 $8886 29 C0                     ;;Keep Bits:1100_0000
bne      L8898                         ; 0x898 $8888 D0 0E                     ;
lda      #$FF                          ; 0x89a $888A A9 FF                     ;;A = #$ff 1111_1111
sta      $83                           ; 0x89c $888C 85 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
jsr      L8A06                         ; 0x89e $888E 20 06 8A                  ;
dec      $37                           ; 0x8a1 $8891 C6 37                     ;;player PosY, 0-14 (small meta-tile size)
L8893                                                                          ;
pla                                    ; 0x8a3 $8893 68                        ;
pla                                    ; 0x8a4 $8894 68                        ;
jmp      L87E5                         ; 0x8a5 $8895 4C E5 87                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8898                                                                          ;
rts                                    ; 0x8a8 $8898 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_TakeExit_Up                                                             ;
lda      #$14                          ; 0x8a9 $8899 A9 14                     ;;A = #$14 0001_0100
sta      $37                           ; 0x8ab $889B 85 37                     ;;player PosY, 0-14 (small meta-tile size)
lda      $47                           ; 0x8ad $889D A5 47                     ;;player CurrentArea       
cmp      #$19                          ; 0x8af $889F C9 19                     ;
bpl      L88B1                         ; 0x8b1 $88A1 10 0E                     ;
dec      $49                           ; 0x8b3 $88A3 C6 49                     ;;player Screen Y (0 to 4)
bpl      L88AB                         ; 0x8b5 $88A5 10 04                     ;
lda      #$04                          ; 0x8b7 $88A7 A9 04                     ;;A = #$04 0000_0100
sta      $49                           ; 0x8b9 $88A9 85 49                     ;;player Screen Y (0 to 4)
L88AB                                                                          ;
jsr      L89D4                         ; 0x8bb $88AB 20 D4 89                  ;
jmp      L8893                         ; 0x8be $88AE 4C 93 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L88B1                                                                          ;
cmp      #$1C                          ; 0x8c1 $88B1 C9 1C                     ;
beq      L88C5                         ; 0x8c3 $88B3 F0 10                     ;
cmp      #$20                          ; 0x8c5 $88B5 C9 20                     ;
beq      L88CD                         ; 0x8c7 $88B7 F0 14                     ;
cmp      #$22                          ; 0x8c9 $88B9 C9 22                     ;
beq      L88E7                         ; 0x8cb $88BB F0 2A                     ;
lda      #$19                          ; 0x8cd $88BD A9 19                     ;;A = #$19 0001_1001
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x8cf $88BF 20 DC 89 ;
jmp      L8893                         ; 0x8d2 $88C2 4C 93 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L88C5                                                                          ;
lda      #$1B                          ; 0x8d5 $88C5 A9 1B                     ;;A = #$1b 0001_1011
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x8d7 $88C7 20 DC 89 ;
jmp      L8893                         ; 0x8da $88CA 4C 93 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L88CD                                                                          ;
lda      #$0A                          ; 0x8dd $88CD A9 0A                     ;;A = #$0a 0000_1010
sta      $36                           ; 0x8df $88CF 85 36                     ;;player PosX, 0-14 (small meta-tile size)
lda      #$06                          ; 0x8e1 $88D1 A9 06                     ;;A = #$06 0000_0110
sta      $37                           ; 0x8e3 $88D3 85 37                     ;;player PosY, 0-14 (small meta-tile size)
lda      #$02                          ; 0x8e5 $88D5 A9 02                     ;;A = #$02 0000_0010
sta      $48                           ; 0x8e7 $88D7 85 48                     ;;player Screen X (0 to 4)
lda      #$03                          ; 0x8e9 $88D9 A9 03                     ;;A = #$03 0000_0011
sta      $49                           ; 0x8eb $88DB 85 49                     ;;player Screen Y (0 to 4)
lda      #$FF                          ; 0x8ed $88DD A9 FF                     ;;A = #$ff 1111_1111
sta      $4A                           ; 0x8ef $88DF 85 4A                     ;
jsr      L89D4                         ; 0x8f1 $88E1 20 D4 89                  ;
jmp      L8893                         ; 0x8f4 $88E4 4C 93 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L88E7                                                                          ;
lda      #$21                          ; 0x8f7 $88E7 A9 21                     ;;A = #$21 0010_0001
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x8f9 $88E9 20 DC 89 ;
jmp      L8893                         ; 0x8fc $88EC 4C 93 88                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L88EF                                                                          ;
lda      #$01                          ; 0x8ff $88EF A9 01                     ;;A = #$01 0000_0001
sta      $3F                           ; 0x901 $88F1 85 3F                     ;
lda      $36                           ; 0x903 $88F3 A5 36                     ;;player PosX, 0-14 (small meta-tile size)
beq      Screen_TakeExit_Left          ; 0x905 $88F5 F0 2B                     ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x907 $88F7 20 72 96;
lda      $0E                           ; 0x90a $88FA A5 0E                     ;
sec                                    ; 0x90c $88FC 38                        ;
sbc      #$01                          ; 0x90d $88FD E9 01                     ;
sta      $0E                           ; 0x90f $88FF 85 0E                     ;
lda      $0F                           ; 0x911 $8901 A5 0F                     ;
sbc      #$00                          ; 0x913 $8903 E9 00                     ;
sta      $0F                           ; 0x915 $8905 85 0F                     ;
ldy      #$00                          ; 0x917 $8907 A0 00                     ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x919 $8909 B1 0E                     ;
ldy      #$16                          ; 0x91b $890B A0 16                     ;;Y = #$16 0001_0110
ora      ($0E),y                       ; 0x91d $890D 11 0E                     ;
and      #$C0                          ; 0x91f $890F 29 C0                     ;;Keep Bits:1100_0000
bne      L8921                         ; 0x921 $8911 D0 0E                     ;
lda      #$FF                          ; 0x923 $8913 A9 FF                     ;;A = #$ff 1111_1111
sta      $83                           ; 0x925 $8915 85 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
jsr      L89E6                         ; 0x927 $8917 20 E6 89                  ;
dec      $36                           ; 0x92a $891A C6 36                     ;;player PosX, 0-14 (small meta-tile size)
L891C                                                                          ;
pla                                    ; 0x92c $891C 68                        ;
pla                                    ; 0x92d $891D 68                        ;
jmp      L87E5                         ; 0x92e $891E 4C E5 87                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8921                                                                          ;
rts                                    ; 0x931 $8921 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_TakeExit_Left                                                           ;
;set PlayerX to the far right position                                         ;
lda      #$14                          ; 0x932 $8922 A9 14                     ;;A = #$14 0001_0100
sta      $36                           ; 0x934 $8924 85 36                     ;;player PosX, 0-14 (small meta-tile size)
;something, limit check?                                                       ;
lda      $47                           ; 0x936 $8926 A5 47                     ;;player CurrentArea       
cmp      #$19                          ; 0x938 $8928 C9 19                     ;
bpl      L893A                         ; 0x93a $892A 10 0E                     ;
;decrement player screen X                                                     ;
dec      $48                           ; 0x93c $892C C6 48                     ;;player Screen X (0 to 4)
;limit check                                                                   ;
bpl      L8934                         ; 0x93e $892E 10 04                     ;
;implement loop around                                                         ;
lda      #$04                          ; 0x940 $8930 A9 04                     ;;A = #$04 0000_0100
sta      $48                           ; 0x942 $8932 85 48                     ;;player Screen X (0 to 4)
L8934                                                                          ;
;something                                                                     ;
jsr      L89D4                         ; 0x944 $8934 20 D4 89                  ;
jmp      L891C                         ; 0x947 $8937 4C 1C 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L893A                                                                          ;
cmp      #$21                          ; 0x94a $893A C9 21                     ;
beq      L8946                         ; 0x94c $893C F0 08                     ;
lda      #$1D                          ; 0x94e $893E A9 1D                     ;;A = #$1d 0001_1101
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x950 $8940 20 DC 89 ;
jmp      L891C                         ; 0x953 $8943 4C 1C 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8946                                                                          ;
lda      #$FF                          ; 0x956 $8946 A9 FF                     ;;A = #$ff 1111_1111
sta      $4A                           ; 0x958 $8948 85 4A                     ;
lda      #$20                          ; 0x95a $894A A9 20                     ;;A = #$20 0010_0000
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x95c $894C 20 DC 89 ;
jmp      L891C                         ; 0x95f $894F 4C 1C 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8952                                                                          ;
lda      #$03                          ; 0x962 $8952 A9 03                     ;;A = #$03 0000_0011
sta      $3F                           ; 0x964 $8954 85 3F                     ;
lda      $36                           ; 0x966 $8956 A5 36                     ;;player PosX, 0-14 (small meta-tile size)
cmp      #$14                          ; 0x968 $8958 C9 14                     ;
beq      Screen_TakeExit_Right         ; 0x96a $895A F0 1E                     ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x96c $895C 20 72 96;
ldy      #$02                          ; 0x96f $895F A0 02                     ;;Y = #$02 0000_0010
lda      ($0E),y                       ; 0x971 $8961 B1 0E                     ;
ldy      #$18                          ; 0x973 $8963 A0 18                     ;;Y = #$18 0001_1000
ora      ($0E),y                       ; 0x975 $8965 11 0E                     ;
and      #$C0                          ; 0x977 $8967 29 C0                     ;;Keep Bits:1100_0000
bne      L8979                         ; 0x979 $8969 D0 0E                     ;
lda      #$FF                          ; 0x97b $896B A9 FF                     ;;A = #$ff 1111_1111
sta      $83                           ; 0x97d $896D 85 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
jsr      L89F0                         ; 0x97f $896F 20 F0 89                  ;
inc      $36                           ; 0x982 $8972 E6 36                     ;;player PosX, 0-14 (small meta-tile size)
L8974                                                                          ;
pla                                    ; 0x984 $8974 68                        ;
pla                                    ; 0x985 $8975 68                        ;
jmp      L87E5                         ; 0x986 $8976 4C E5 87                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8979                                                                          ;
rts                                    ; 0x989 $8979 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_TakeExit_Right                                                          ;
lda      #$00                          ; 0x98a $897A A9 00                     ;;A = #$00 0000_0000
sta      $36                           ; 0x98c $897C 85 36                     ;;player PosX, 0-14 (small meta-tile size)
lda      $47                           ; 0x98e $897E A5 47                     ;;player CurrentArea       
cmp      #$19                          ; 0x990 $8980 C9 19                     ;
bpl      L8996                         ; 0x992 $8982 10 12                     ;
inc      $48                           ; 0x994 $8984 E6 48                     ;;player Screen X (0 to 4)
lda      $48                           ; 0x996 $8986 A5 48                     ;;player Screen X (0 to 4)
cmp      #$05                          ; 0x998 $8988 C9 05                     ;
bmi      L8990                         ; 0x99a $898A 30 04                     ;
lda      #$00                          ; 0x99c $898C A9 00                     ;;A = #$00 0000_0000
sta      $48                           ; 0x99e $898E 85 48                     ;;player Screen X (0 to 4)
L8990                                                                          ;
jsr      L89D4                         ; 0x9a0 $8990 20 D4 89                  ;
jmp      L8974                         ; 0x9a3 $8993 4C 74 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8996                                                                          ;
cmp      #$1D                          ; 0x9a6 $8996 C9 1D                     ;
beq      L89BC                         ; 0x9a8 $8998 F0 22                     ;
cmp      #$20                          ; 0x9aa $899A C9 20                     ;
beq      L89C4                         ; 0x9ac $899C F0 26                     ;
lda      #$10                          ; 0x9ae $899E A9 10                     ;;A = #$10 0001_0000
sta      $36                           ; 0x9b0 $89A0 85 36                     ;;player PosX, 0-14 (small meta-tile size)
lda      #$08                          ; 0x9b2 $89A2 A9 08                     ;;A = #$08 0000_1000
sta      $37                           ; 0x9b4 $89A4 85 37                     ;;player PosY, 0-14 (small meta-tile size)
lda      #$01                          ; 0x9b6 $89A6 A9 01                     ;;A = #$01 0000_0001
sta      $48                           ; 0x9b8 $89A8 85 48                     ;;player Screen X (0 to 4)
lda      #$00                          ; 0x9ba $89AA A9 00                     ;;A = #$00 0000_0000
sta      $49                           ; 0x9bc $89AC 85 49                     ;;player Screen Y (0 to 4)
lda      #$00                          ; 0x9be $89AE A9 00                     ;;A = #$00 0000_0000
sta      $80                           ; 0x9c0 $89B0 85 80                     ;
lda      #$FF                          ; 0x9c2 $89B2 A9 FF                     ;;A = #$ff 1111_1111
sta      $4A                           ; 0x9c4 $89B4 85 4A                     ;
jsr      L89D4                         ; 0x9c6 $89B6 20 D4 89                  ;
jmp      L8974                         ; 0x9c9 $89B9 4C 74 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L89BC                                                                          ;
lda      #$1E                          ; 0x9cc $89BC A9 1E                     ;;A = #$1e 0001_1110
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x9ce $89BE 20 DC 89 ;
jmp      L8974                         ; 0x9d1 $89C1 4C 74 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L89C4                                                                          ;
lda      #$01                          ; 0x9d4 $89C4 A9 01                     ;;A = #$01 0000_0001
sta      $36                           ; 0x9d6 $89C6 85 36                     ;;player PosX, 0-14 (small meta-tile size)
lda      #$FF                          ; 0x9d8 $89C8 A9 FF                     ;;A = #$ff 1111_1111
sta      $4A                           ; 0x9da $89CA 85 4A                     ;
lda      #$21                          ; 0x9dc $89CC A9 21                     ;;A = #$21 0010_0001
jsr      Update_PlayerCurrentArea_With_A__andDoSomething; 0x9de $89CE 20 DC 89 ;
jmp      L8974                         ; 0x9e1 $89D1 4C 74 89                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L89D4                                                                          ;
lda      $49                           ; 0x9e4 $89D4 A5 49                     ;;player Screen Y (0 to 4)
asl                                    ; 0x9e6 $89D6 0A                        ;
asl                                    ; 0x9e7 $89D7 0A                        ;
adc      $49                           ; 0x9e8 $89D8 65 49                     ;;player Screen Y (0 to 4)
adc      $48                           ; 0x9ea $89DA 65 48                     ;;player Screen X (0 to 4)
Update_PlayerCurrentArea_With_A__andDoSomething                                ;
sta      $47                           ; 0x9ec $89DC 85 47                     ;;player CurrentArea       
jsr      LoadScreenCurrent_LoadAndDraw__Sprites__Something; 0x9ee $89DE 20 BB D4;
lda      #$00                          ; 0x9f1 $89E1 A9 00                     ;;A = #$00 0000_0000
sta      $83                           ; 0x9f3 $89E3 85 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
rts                                    ; 0x9f5 $89E5 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L89E6                                                                          ;
lda      $36                           ; 0x9f6 $89E6 A5 36                     ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x9f8 $89E8 0A                        ;
asl                                    ; 0x9f9 $89E9 0A                        ;
asl                                    ; 0x9fa $89EA 0A                        ;
clc                                    ; 0x9fb $89EB 18                        ;
adc      #$04                          ; 0x9fc $89EC 69 04                     ;
bne      L89F8                         ; 0x9fe $89EE D0 08                     ;
L89F0                                                                          ;
lda      $36                           ; 0xa00 $89F0 A5 36                     ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0xa02 $89F2 0A                        ;
asl                                    ; 0xa03 $89F3 0A                        ;
asl                                    ; 0xa04 $89F4 0A                        ;
clc                                    ; 0xa05 $89F5 18                        ;
adc      #$0C                          ; 0xa06 $89F6 69 0C                     ;
L89F8                                                                          ;
sta      $A8                           ; 0xa08 $89F8 85 A8                     ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0xa0a $89FA A5 37                     ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0xa0c $89FC 0A                        ;
asl                                    ; 0xa0d $89FD 0A                        ;
asl                                    ; 0xa0e $89FE 0A                        ;
clc                                    ; 0xa0f $89FF 18                        ;
adc      #$0F                          ; 0xa10 $8A00 69 0F                     ;
sta      $A9                           ; 0xa12 $8A02 85 A9                     ;;Sprite Data 4 Bytes: Y screen draw location ??
bne      L8A24                         ; 0xa14 $8A04 D0 1E                     ;
L8A06                                                                          ;
lda      $37                           ; 0xa16 $8A06 A5 37                     ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0xa18 $8A08 0A                        ;
asl                                    ; 0xa19 $8A09 0A                        ;
asl                                    ; 0xa1a $8A0A 0A                        ;
clc                                    ; 0xa1b $8A0B 18                        ;
adc      #$0B                          ; 0xa1c $8A0C 69 0B                     ;
bne      L8A18                         ; 0xa1e $8A0E D0 08                     ;
L8A10                                                                          ;
lda      $37                           ; 0xa20 $8A10 A5 37                     ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0xa22 $8A12 0A                        ;
asl                                    ; 0xa23 $8A13 0A                        ;
asl                                    ; 0xa24 $8A14 0A                        ;
clc                                    ; 0xa25 $8A15 18                        ;
adc      #$13                          ; 0xa26 $8A16 69 13                     ;
L8A18                                                                          ;
sta      $A9                           ; 0xa28 $8A18 85 A9                     ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      $36                           ; 0xa2a $8A1A A5 36                     ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0xa2c $8A1C 0A                        ;
asl                                    ; 0xa2d $8A1D 0A                        ;
asl                                    ; 0xa2e $8A1E 0A                        ;
clc                                    ; 0xa2f $8A1F 18                        ;
adc      #$08                          ; 0xa30 $8A20 69 08                     ;
sta      $A8                           ; 0xa32 $8A22 85 A8                     ;;Sprite Data 4 Bytes: X screen draw location ??
L8A24                                                                          ;
jsr      L91BF                         ; 0xa34 $8A24 20 BF 91                  ;
jsr      LCF46                         ; 0xa37 $8A27 20 46 CF                  ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0xa3a $8A2A 20 34 95  ;
jsr      ClearAll200__set200toF0__setA7to00; 0xa3d $8A2D 20 7D 96              ;
jsr      L951A                         ; 0xa40 $8A30 20 1A 95                  ;
lda      $35                           ; 0xa43 $8A33 A5 35                     ;
bne      L8A3A                         ; 0xa45 $8A35 D0 03                     ;
jsr      L951A                         ; 0xa47 $8A37 20 1A 95                  ;
L8A3A                                                                          ;
rts                                    ; 0xa4a $8A3A 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A3B                                                                          ;
lda      $B1                           ; 0xa4b $8A3B A5 B1                     ;;player defense / attack mode (00=defense, FF=attack)
beq      L8A43                         ; 0xa4d $8A3D F0 04                     ;
lda      $80                           ; 0xa4f $8A3F A5 80                     ;
bne      L8A44                         ; 0xa51 $8A41 D0 01                     ;
L8A43                                                                          ;
rts                                    ; 0xa53 $8A43 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A44                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0xa54 $8A44 20 72 96;
ldy      #$00                          ; 0xa57 $8A47 A0 00                     ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0xa59 $8A49 B1 0E                     ;
and      #$3F                          ; 0xa5b $8A4B 29 3F                     ;;Keep Bits:0011_1111
cmp      #$15                          ; 0xa5d $8A4D C9 15                     ;
bne      L8A43                         ; 0xa5f $8A4F D0 F2                     ;
lda      $47                           ; 0xa61 $8A51 A5 47                     ;;player CurrentArea       
cmp      #$01                          ; 0xa63 $8A53 C9 01                     ;
beq      L8A8B                         ; 0xa65 $8A55 F0 34                     ;
cmp      #$06                          ; 0xa67 $8A57 C9 06                     ;
beq      L8A94                         ; 0xa69 $8A59 F0 39                     ;
cmp      #$0B                          ; 0xa6b $8A5B C9 0B                     ;
beq      L8A9D                         ; 0xa6d $8A5D F0 3E                     ;
cmp      #$11                          ; 0xa6f $8A5F C9 11                     ;
beq      L8AA6                         ; 0xa71 $8A61 F0 43                     ;
cmp      #$13                          ; 0xa73 $8A63 C9 13                     ;
beq      L8AAF                         ; 0xa75 $8A65 F0 48                     ;
cmp      #$15                          ; 0xa77 $8A67 C9 15                     ;
beq      L8AC7                         ; 0xa79 $8A69 F0 5C                     ;
cmp      #$18                          ; 0xa7b $8A6B C9 18                     ;
beq      L8AD0                         ; 0xa7d $8A6D F0 61                     ;
cmp      #$1B                          ; 0xa7f $8A6F C9 1B                     ;
beq      L8AD9                         ; 0xa81 $8A71 F0 66                     ;
cmp      #$1C                          ; 0xa83 $8A73 C9 1C                     ;
bne      L8A7A                         ; 0xa85 $8A75 D0 03                     ;
jmp      L8AE8                         ; 0xa87 $8A77 4C E8 8A                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A7A                                                                          ;
cmp      #$1D                          ; 0xa8a $8A7A C9 1D                     ;
bne      L8A81                         ; 0xa8c $8A7C D0 03                     ;
jmp      L8AF9                         ; 0xa8e $8A7E 4C F9 8A                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A81                                                                          ;
cmp      #$1E                          ; 0xa91 $8A81 C9 1E                     ;
bne      L8A88                         ; 0xa93 $8A83 D0 03                     ;
jmp      L8B08                         ; 0xa95 $8A85 4C 08 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A88                                                                          ;
jmp      L8B19                         ; 0xa98 $8A88 4C 19 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A8B                                                                          ;
ldx      #$14                          ; 0xa9b $8A8B A2 14                     ;;X = #$14 0001_0100
ldy      #$05                          ; 0xa9d $8A8D A0 05                     ;;Y = #$05 0000_0101
lda      #$19                          ; 0xa9f $8A8F A9 19                     ;;A = #$19 0001_1001
jmp      L8B27                         ; 0xaa1 $8A91 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A94                                                                          ;
ldx      #$02                          ; 0xaa4 $8A94 A2 02                     ;;X = #$02 0000_0010
ldy      #$01                          ; 0xaa6 $8A96 A0 01                     ;;Y = #$01 0000_0001
lda      #$1D                          ; 0xaa8 $8A98 A9 1D                     ;;A = #$1d 0001_1101
jmp      L8B27                         ; 0xaaa $8A9A 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8A9D                                                                          ;
ldx      #$09                          ; 0xaad $8A9D A2 09                     ;;X = #$09 0000_1001
ldy      #$0E                          ; 0xaaf $8A9F A0 0E                     ;;Y = #$0e 0000_1110
lda      #$0B                          ; 0xab1 $8AA1 A9 0B                     ;;A = #$0b 0000_1011
jmp      L8B27                         ; 0xab3 $8AA3 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AA6                                                                          ;
ldx      #$01                          ; 0xab6 $8AA6 A2 01                     ;;X = #$01 0000_0001
ldy      #$00                          ; 0xab8 $8AA8 A0 00                     ;;Y = #$00 0000_0000
lda      #$20                          ; 0xaba $8AAA A9 20                     ;;A = #$20 0010_0000
jmp      L8B27                         ; 0xabc $8AAC 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AAF                                                                          ;
lda      $36                           ; 0xabf $8AAF A5 36                     ;;player PosX, 0-14 (small meta-tile size)
cmp      #$06                          ; 0xac1 $8AB1 C9 06                     ;
bne      L8ABE                         ; 0xac3 $8AB3 D0 09                     ;
ldx      #$0A                          ; 0xac5 $8AB5 A2 0A                     ;;X = #$0a 0000_1010
ldy      #$12                          ; 0xac7 $8AB7 A0 12                     ;;Y = #$12 0001_0010
lda      #$1C                          ; 0xac9 $8AB9 A9 1C                     ;;A = #$1c 0001_1100
jmp      L8B27                         ; 0xacb $8ABB 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8ABE                                                                          ;
ldx      #$0F                          ; 0xace $8ABE A2 0F                     ;;X = #$0f 0000_1111
ldy      #$13                          ; 0xad0 $8AC0 A0 13                     ;;Y = #$13 0001_0011
lda      #$1E                          ; 0xad2 $8AC2 A9 1E                     ;;A = #$1e 0001_1110
jmp      L8B27                         ; 0xad4 $8AC4 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AC7                                                                          ;
ldx      #$01                          ; 0xad7 $8AC7 A2 01                     ;;X = #$01 0000_0001
ldy      #$01                          ; 0xad9 $8AC9 A0 01                     ;;Y = #$01 0000_0001
lda      #$1F                          ; 0xadb $8ACB A9 1F                     ;;A = #$1f 0001_1111
jmp      L8B27                         ; 0xadd $8ACD 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AD0                                                                          ;
ldx      #$07                          ; 0xae0 $8AD0 A2 07                     ;;X = #$07 0000_0111
ldy      #$02                          ; 0xae2 $8AD2 A0 02                     ;;Y = #$02 0000_0010
lda      #$1B                          ; 0xae4 $8AD4 A9 1B                     ;;A = #$1b 0001_1011
jmp      L8B27                         ; 0xae6 $8AD6 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AD9                                                                          ;
lda      #$04                          ; 0xae9 $8AD9 A9 04                     ;;A = #$04 0000_0100
sta      $48                           ; 0xaeb $8ADB 85 48                     ;;player Screen X (0 to 4)
sta      $49                           ; 0xaed $8ADD 85 49                     ;;player Screen Y (0 to 4)
ldx      #$07                          ; 0xaef $8ADF A2 07                     ;;X = #$07 0000_0111
ldy      #$13                          ; 0xaf1 $8AE1 A0 13                     ;;Y = #$13 0001_0011
lda      #$18                          ; 0xaf3 $8AE3 A9 18                     ;;A = #$18 0001_1000
jmp      L8B27                         ; 0xaf5 $8AE5 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AE8                                                                          ;
lda      #$04                          ; 0xaf8 $8AE8 A9 04                     ;;A = #$04 0000_0100
sta      $48                           ; 0xafa $8AEA 85 48                     ;;player Screen X (0 to 4)
lda      #$03                          ; 0xafc $8AEC A9 03                     ;;A = #$03 0000_0011
sta      $49                           ; 0xafe $8AEE 85 49                     ;;player Screen Y (0 to 4)
ldx      #$06                          ; 0xb00 $8AF0 A2 06                     ;;X = #$06 0000_0110
ldy      #$04                          ; 0xb02 $8AF2 A0 04                     ;;Y = #$04 0000_0100
lda      #$13                          ; 0xb04 $8AF4 A9 13                     ;;A = #$13 0001_0011
jmp      L8B27                         ; 0xb06 $8AF6 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8AF9                                                                          ;
lda      #$01                          ; 0xb09 $8AF9 A9 01                     ;;A = #$01 0000_0001
sta      $48                           ; 0xb0b $8AFB 85 48                     ;;player Screen X (0 to 4)
sta      $49                           ; 0xb0d $8AFD 85 49                     ;;player Screen Y (0 to 4)
ldx      #$0A                          ; 0xb0f $8AFF A2 0A                     ;;X = #$0a 0000_1010
ldy      #$0D                          ; 0xb11 $8B01 A0 0D                     ;;Y = #$0d 0000_1101
lda      #$06                          ; 0xb13 $8B03 A9 06                     ;;A = #$06 0000_0110
jmp      L8B27                         ; 0xb15 $8B05 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8B08                                                                          ;
lda      #$04                          ; 0xb18 $8B08 A9 04                     ;;A = #$04 0000_0100
sta      $48                           ; 0xb1a $8B0A 85 48                     ;;player Screen X (0 to 4)
lda      #$03                          ; 0xb1c $8B0C A9 03                     ;;A = #$03 0000_0011
sta      $49                           ; 0xb1e $8B0E 85 49                     ;;player Screen Y (0 to 4)
ldx      #$0F                          ; 0xb20 $8B10 A2 0F                     ;;X = #$0f 0000_1111
ldy      #$09                          ; 0xb22 $8B12 A0 09                     ;;Y = #$09 0000_1001
lda      #$13                          ; 0xb24 $8B14 A9 13                     ;;A = #$13 0001_0011
jmp      L8B27                         ; 0xb26 $8B16 4C 27 8B                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8B19                                                                          ;
lda      #$01                          ; 0xb29 $8B19 A9 01                     ;;A = #$01 0000_0001
sta      $48                           ; 0xb2b $8B1B 85 48                     ;;player Screen X (0 to 4)
lda      #$04                          ; 0xb2d $8B1D A9 04                     ;;A = #$04 0000_0100
sta      $49                           ; 0xb2f $8B1F 85 49                     ;;player Screen Y (0 to 4)
ldx      #$0F                          ; 0xb31 $8B21 A2 0F                     ;;X = #$0f 0000_1111
ldy      #$0F                          ; 0xb33 $8B23 A0 0F                     ;;Y = #$0f 0000_1111
lda      #$15                          ; 0xb35 $8B25 A9 15                     ;;A = #$15 0001_0101
L8B27                                                                          ;
sta      $47                           ; 0xb37 $8B27 85 47                     ;;player CurrentArea       
stx      $36                           ; 0xb39 $8B29 86 36                     ;;player PosX, 0-14 (small meta-tile size)
sty      $37                           ; 0xb3b $8B2B 84 37                     ;;player PosY, 0-14 (small meta-tile size)
lda      #$FF                          ; 0xb3d $8B2D A9 FF                     ;;A = #$ff 1111_1111
sta      $4A                           ; 0xb3f $8B2F 85 4A                     ;
lda      #$00                          ; 0xb41 $8B31 A9 00                     ;;A = #$00 0000_0000
sta      $80                           ; 0xb43 $8B33 85 80                     ;
jmp      LoadScreenCurrent_LoadAndDraw__Sprites__Something; 0xb45 $8B35 4C BB D4;
                                                                               ;
; ---------------------------------------------------------------------------- ;
l8B38_JumpToRoutine_BasedOn_PlayerCurrentArea                                  ;
lda      $47                           ; 0xb48 $8B38 A5 47                     ;;player CurrentArea       
asl                                    ; 0xb4a $8B3A 0A                        ;
tax                                    ; 0xb4b $8B3B AA                        ;
lda      L8B4A,x                       ; 0xb4c $8B3C BD 4A 8B                  ;
sta      L0000                         ; 0xb4f $8B3F 85 00                     ;
inx                                    ; 0xb51 $8B41 E8                        ;
lda      L8B4A,x                       ; 0xb52 $8B42 BD 4A 8B                  ;
sta      $01                           ; 0xb55 $8B45 85 01                     ;
jmp      (L0000)                       ; 0xb57 $8B47 6C 00 00                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8B4A                                                                          ;
.word    RTS__ThereIsNoRoutine         ; 0xb5a $8B4A 90 8B                     ;(player current area) index 00
.word    RTS__ThereIsNoRoutine         ; 0xb5c $8B4C 90 8B                     ;index 01
.word    RTS__ThereIsNoRoutine         ; 0xb5e $8B4E 90 8B                     ;index 02
.word    L8B91                         ; 0xb60 $8B50 91 8B                     ;index 03
.word    RTS__ThereIsNoRoutine         ; 0xb62 $8B52 90 8B                     ;index 04
.word    L8BAB                         ; 0xb64 $8B54 AB 8B                     ;index 05
.word    RTS__ThereIsNoRoutine         ; 0xb66 $8B56 90 8B                     ;index 06
.word    RTS__ThereIsNoRoutine         ; 0xb68 $8B58 90 8B                     ;index 07
.word    RTS__ThereIsNoRoutine         ; 0xb6a $8B5A 90 8B                     ;index 08
.word    RTS__ThereIsNoRoutine         ; 0xb6c $8B5C 90 8B                     ;index 09
.word    RTS__ThereIsNoRoutine         ; 0xb6e $8B5E 90 8B                     ;index 0A
.word    RTS__ThereIsNoRoutine         ; 0xb70 $8B60 90 8B                     ;index 0B
.word    RTS__ThereIsNoRoutine         ; 0xb72 $8B62 90 8B                     ;index 0C
.word    RTS__ThereIsNoRoutine         ; 0xb74 $8B64 90 8B                     ;index 0D
.word    L8C74                         ; 0xb76 $8B66 74 8C                     ;index 0E
.word    RTS__ThereIsNoRoutine         ; 0xb78 $8B68 90 8B                     ;index 0F
.word    RTS__ThereIsNoRoutine         ; 0xb7a $8B6A 90 8B                     ;index 10
.word    RTS__ThereIsNoRoutine         ; 0xb7c $8B6C 90 8B                     ;index 11
.word    L8C95                         ; 0xb7e $8B6E 95 8C                     ;index 12
.word    RTS__ThereIsNoRoutine         ; 0xb80 $8B70 90 8B                     ;index 13
.word    RTS__ThereIsNoRoutine         ; 0xb82 $8B72 90 8B                     ;index 14
.word    RTS__ThereIsNoRoutine         ; 0xb84 $8B74 90 8B                     ;index 15
.word    RTS__ThereIsNoRoutine         ; 0xb86 $8B76 90 8B                     ;index 16
.word    RTS__ThereIsNoRoutine         ; 0xb88 $8B78 90 8B                     ;index 17
.word    L8CAF                         ; 0xb8a $8B7A AF 8C                     ;index 18
.word    RTS__ThereIsNoRoutine         ; 0xb8c $8B7C 90 8B                     ;index 19
.word    L8CD2                         ; 0xb8e $8B7E D2 8C                     ;index 1A
.word    L8CEC                         ; 0xb90 $8B80 EC 8C                     ;index 1B
.word    L8D34                         ; 0xb92 $8B82 34 8D                     ;index 1C
.word    RTS__ThereIsNoRoutine         ; 0xb94 $8B84 90 8B                     ;index 1D
.word    L8D40                         ; 0xb96 $8B86 40 8D                     ;index 1E
.word    L8D5E                         ; 0xb98 $8B88 5E 8D                     ;index 1F
.word    RTS__ThereIsNoRoutine         ; 0xb9a $8B8A 90 8B                     ;index 20
.word    RTS__ThereIsNoRoutine         ; 0xb9c $8B8C 90 8B                     ;index 21
.word    L8D90                         ; 0xb9e $8B8E 90 8D                     ;index 22
; ---------------------------------------------------------------------------- ;
RTS__ThereIsNoRoutine                                                          ;
rts                                    ; 0xba0 $8B90 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8B91                                                                          ;
jsr      L8DC1                         ; 0xba1 $8B91 20 C1 8D                  ;
bne      RTS__ThereIsNoRoutine         ; 0xba4 $8B94 D0 FA                     ;
ldx      #$0A                          ; 0xba6 $8B96 A2 0A                     ;;X = #$0a 0000_1010
ldy      #$0E                          ; 0xba8 $8B98 A0 0E                     ;;Y = #$0e 0000_1110
lda      #$02                          ; 0xbaa $8B9A A9 02                     ;;A = #$02 0000_0010
jsr      L8DDA                         ; 0xbac $8B9C 20 DA 8D                  ;
ldx      #$00                          ; 0xbaf $8B9F A2 00                     ;;X = #$00 0000_0000
stx      $52                           ; 0xbb1 $8BA1 86 52                     ;;FF=chest for cross appears
dex                                    ; 0xbb3 $8BA3 CA                        ;
stx      $5C                           ; 0xbb4 $8BA4 86 5C                     ;;FF=got cross 			(appears in ITEM)
lda      #$04                          ; 0xbb6 $8BA6 A9 04                     ;;A = #$04 0000_0100
jmp      L92AF                         ; 0xbb8 $8BA8 4C AF 92                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8BAB                                                                          ;
lda      $7F                           ; 0xbbb $8BAB A5 7F                     ;
beq      L8BB6                         ; 0xbbd $8BAD F0 07                     ;
jsr      Setup_SpriteData_And_Draw__something__MaybeMusicOrSoundEffectToo; 0xbbf $8BAF 20 27 B4;
lda      #$00                          ; 0xbc2 $8BB2 A9 00                     ;;A = #$00 0000_0000
sta      $7F                           ; 0xbc4 $8BB4 85 7F                     ;
L8BB6                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0xbc6 $8BB6 20 72 96;
ldy      #$00                          ; 0xbc9 $8BB9 A0 00                     ;;Y = #$00 0000_0000
;load tile where player currently is at                                        ;
lda      ($0E),y                       ; 0xbcb $8BBB B1 0E                     ;
and      #$3F                          ; 0xbcd $8BBD 29 3F                     ;;Keep Bits:0011_1111
;check if is bottom of tree                                                    ;
cmp      #$0F                          ; 0xbcf $8BBF C9 0F                     ;
beq      L8BD4                         ; 0xbd1 $8BC1 F0 11                     ;
cmp      #$10                          ; 0xbd3 $8BC3 C9 10                     ;
beq      L8BD4                         ; 0xbd5 $8BC5 F0 0D                     ;
iny                                    ; 0xbd7 $8BC7 C8                        ;
lda      ($0E),y                       ; 0xbd8 $8BC8 B1 0E                     ;
and      #$3F                          ; 0xbda $8BCA 29 3F                     ;;Keep Bits:0011_1111
cmp      #$0F                          ; 0xbdc $8BCC C9 0F                     ;
beq      L8BD4                         ; 0xbde $8BCE F0 04                     ;
cmp      #$10                          ; 0xbe0 $8BD0 C9 10                     ;
bne      RTS__ThereIsNoRoutine         ; 0xbe2 $8BD2 D0 BC                     ;
L8BD4                                                                          ;
lda      $3F                           ; 0xbe4 $8BD4 A5 3F                     ;
cmp      #$02                          ; 0xbe6 $8BD6 C9 02                     ;
bne      RTS__ThereIsNoRoutine         ; 0xbe8 $8BD8 D0 B6                     ;
lda      #$0A                          ; 0xbea $8BDA A9 0A                     ;;A = #$0a 0000_1010
sta      $04                           ; 0xbec $8BDC 85 04                     ;
ldy      #$00                          ; 0xbee $8BDE A0 00                     ;;Y = #$00 0000_0000
ldx      #$01                          ; 0xbf0 $8BE0 A2 01                     ;;X = #$01 0000_0001
L8BE2                                                                          ;
lda      Screen5_Location_Of_Trees_Which_Spawn_Bees,y; 0xbf2 $8BE2 B9 02 98    ;
cmp      $37                           ; 0xbf5 $8BE5 C5 37                     ;;player PosY, 0-14 (small meta-tile size)
beq      L8BF0                         ; 0xbf7 $8BE7 F0 07                     ;
inx                                    ; 0xbf9 $8BE9 E8                        ;
iny                                    ; 0xbfa $8BEA C8                        ;
iny                                    ; 0xbfb $8BEB C8                        ;
dec      $04                           ; 0xbfc $8BEC C6 04                     ;
bne      L8BE2                         ; 0xbfe $8BEE D0 F2                     ;
L8BF0                                                                          ;
cpx      $7A                           ; 0xc00 $8BF0 E4 7A                     ;;Fairy1TreePosition?
bne      L8C08                         ; 0xc02 $8BF2 D0 14                     ;
lda      $64                           ; 0xc04 $8BF4 A5 64                     ;;FF=got fairy 1 (appears in ITEM)
bne      L8C08                         ; 0xc06 $8BF6 D0 10                     ;
iny                                    ; 0xc08 $8BF8 C8                        ;
lda      Screen5_Location_Of_Trees_Which_Spawn_Bees,y; 0xc09 $8BF9 B9 02 98    ;
cmp      $36                           ; 0xc0c $8BFC C5 36                     ;;player PosX, 0-14 (small meta-tile size)
bne      L8C07                         ; 0xc0e $8BFE D0 07                     ;
dec      $64                           ; 0xc10 $8C00 C6 64                     ;;FF=got fairy 1 (appears in ITEM)
lda      #$01                          ; 0xc12 $8C02 A9 01                     ;;A = #$01 0000_0001
jsr      GetItem_Or_GetFairy_Maybe     ; 0xc14 $8C04 20 7A 93                  ;
L8C07                                                                          ;
rts                                    ; 0xc17 $8C07 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C08                                                                          ;
lda      $84                           ; 0xc18 $8C08 A5 84                     ;
bne      L8C07                         ; 0xc1a $8C0A D0 FB                     ;
;setup pointer		$6EC                                                           ;
;			as addy for pointer ($8B)                                                  ;
;address $6EC is monster 0 variables (with the other monsters following)       ;
;each monsters has 0xA bytes of data                                           ;
lda      #$06                          ; 0xc1c $8C0C A9 06                     ;;A = #$06 0000_0110
sta      $8C                           ; 0xc1e $8C0E 85 8C                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0xc20 $8C10 A9 EC                     ;;A = #$ec 1110_1100
sta      $8B                           ; 0xc22 $8C12 85 8B                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
;reset $89 = #$00                                                              ;
lda      #$00                          ; 0xc24 $8C14 A9 00                     ;;A = #$00 0000_0000
sta      $89                           ; 0xc26 $8C16 85 89                     ;
L8C18                                                                          ;
;if ( monster's OffscreenTimerOffset is == 0 ) goto $8C54                      ;
ldy      #$04                          ; 0xc28 $8C18 A0 04                     ;(index=4 is:	 6F0 	Enemy 0 - OffscreenTimerOffset    4)
lda      ($8B),y                       ; 0xc2a $8C1A B1 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      L8C54                         ; 0xc2c $8C1C F0 36                     ;
;Set Enemy Position X:	(index=1)                                               ;
;$84 / 2 + playerX	->store to-> 	monster 6ED 	                                 ;Enemy 0 - XPosOffset              1
lda      $84                           ; 0xc2e $8C1E A5 84                     ;
lsr                                    ; 0xc30 $8C20 4A                        ;
clc                                    ; 0xc31 $8C21 18                        ;
adc      $36                           ; 0xc32 $8C22 65 36                     ;;player PosX, 0-14 (small meta-tile size)
ldy      #$01                          ; 0xc34 $8C24 A0 01                     ;index=1: 	monster 6ED 	;Enemy 0 - XPosOffset              1
sta      ($8B),y                       ; 0xc36 $8C26 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set Enemy Position Y:	(index=2)                                               ;
;playerY - #$01 	->store to->	6EE 	                                            ;Enemy 0 - YPosOffset              2
iny                                    ; 0xc38 $8C28 C8                        ;index=2:	6EE 	;Enemy 0 - YPosOffset              2
lda      $37                           ; 0xc39 $8C29 A5 37                     ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0xc3b $8C2B 38                        ;
sbc      #$01                          ; 0xc3c $8C2C E9 01                     ;
sta      ($8B),y                       ; 0xc3e $8C2E 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set MonsterIndex=3:Unknown1Offset to #$00                                     ;
;reset to =0:	monster 6EF 	                                                    ;Enemy 0 - Unknown1Offset          3
iny                                    ; 0xc40 $8C30 C8                        ;index=3:	6EF 	;Enemy 0 - Unknown1Offset          3
lda      #$00                          ; 0xc41 $8C31 A9 00                     ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0xc43 $8C33 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set MonsterIndex=4:OffscreenTimerOffset to #$00                               ;
;reset to =0:	monster 6F0 	Enemy 0 - OffscreenTimerOffset    4                 ;
iny                                    ; 0xc45 $8C35 C8                        ;index=4:	6F0 	Enemy 0 - OffscreenTimerOffset    4
sta      ($8B),y                       ; 0xc46 $8C36 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set Enemy Direction Offset to #$02                                            ;
iny                                    ; 0xc48 $8C38 C8                        ;index=5:	6F1 	;Enemy 0 - DirectionOffset         5
lda      #$02                          ; 0xc49 $8C39 A9 02                     ;;A = #$02 0000_0010
sta      ($8B),y                       ; 0xc4b $8C3B 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set Enemy NextActionTimerOffset to #$03                                       ;
iny                                    ; 0xc4d $8C3D C8                        ;index=6:	6F2 	;Enemy 0 - NextActionTimerOffset   6
lda      #$03                          ; 0xc4e $8C3E A9 03                     ;;A = #$03 0000_0011
sta      ($8B),y                       ; 0xc50 $8C40 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set Enemy AnimationTimerOffset to #$00                                        ;
iny                                    ; 0xc52 $8C42 C8                        ;index=7:	6F3 	;Enemy 0 - AnimationTimerOffset    7
lda      #$00                          ; 0xc53 $8C43 A9 00                     ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0xc55 $8C45 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set Enemy HPOffset                                                            ;
iny                                    ; 0xc57 $8C47 C8                        ;index=8:	6F4 	;Enemy 0 - HPOffset                8
jsr      Monster__Load_HP_from_Table__index_with_Type; 0xc58 $8C48 20 44 D1    ;
sta      ($8B),y                       ; 0xc5b $8C4B 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;Set Enemy Unknown2Offset                                                      ;
iny                                    ; 0xc5d $8C4D C8                        ;index=9:	6F5 	;Enemy 0 - Unknown2Offset          9
lda      #$00                          ; 0xc5e $8C4E A9 00                     ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0xc60 $8C50 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
inc      $84                           ; 0xc62 $8C52 E6 84                     ;
;jump/skip to here for: if ( monster's OffscreenTimerOffset is == 0 )          ;
;Increment $84                                                                 ;
;Something ?                                                                   ;
L8C54                                                                          ;
;Increment to the next monster variable-set                                    ;
;each monster has 0xA bytes of variables                                       ;
lda      $8B                           ; 0xc64 $8C54 A5 8B                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0xc66 $8C56 18                        ;
adc      #$0A                          ; 0xc67 $8C57 69 0A                     ;
sta      $8B                           ; 0xc69 $8C59 85 8B                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0xc6b $8C5B A5 8C                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0xc6d $8C5D 69 00                     ;
sta      $8C                           ; 0xc6f $8C5F 85 8C                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
;Count number of monsters spawned, make sure it doesn't exceed this screen's limit ?;
inc      $89                           ; 0xc71 $8C61 E6 89                     ;
lda      $89                           ; 0xc73 $8C63 A5 89                     ;
cmp      $8A                           ; 0xc75 $8C65 C5 8A                     ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bpl      L8C6F                         ; 0xc77 $8C67 10 06                     ;
;Something, possible loop count limit check or count of monster spawned or something?;
lda      $84                           ; 0xc79 $8C69 A5 84                     ;
cmp      #$04                          ; 0xc7b $8C6B C9 04                     ;
bmi      L8C18                         ; 0xc7d $8C6D 30 A9                     ;
L8C6F                                                                          ;
lda      #$FF                          ; 0xc7f $8C6F A9 FF                     ;;A = #$ff 1111_1111
sta      $84                           ; 0xc81 $8C71 85 84                     ;
rts                                    ; 0xc83 $8C73 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C74                                                                          ;
lda      $56                           ; 0xc84 $8C74 A5 56                     ;;FF=chest for jewel appears ??
and      $5F                           ; 0xc86 $8C76 25 5F                     ;;FF=got key 			(appears in ITEM)
beq      L8C94                         ; 0xc88 $8C78 F0 1A                     ;
jsr      L8DC1                         ; 0xc8a $8C7A 20 C1 8D                  ;
bne      L8C94                         ; 0xc8d $8C7D D0 15                     ;
ldx      #$08                          ; 0xc8f $8C7F A2 08                     ;;X = #$08 0000_1000
ldy      #$08                          ; 0xc91 $8C81 A0 08                     ;;Y = #$08 0000_1000
lda      #$08                          ; 0xc93 $8C83 A9 08                     ;;A = #$08 0000_1000
jsr      L8DDA                         ; 0xc95 $8C85 20 DA 8D                  ;
ldx      #$00                          ; 0xc98 $8C88 A2 00                     ;;X = #$00 0000_0000
stx      $56                           ; 0xc9a $8C8A 86 56                     ;;FF=chest for jewel appears ??
dex                                    ; 0xc9c $8C8C CA                        ;
stx      $60                           ; 0xc9d $8C8D 86 60                     ;;FF=got jewel 			(appears in ITEM)
lda      #$08                          ; 0xc9f $8C8F A9 08                     ;;A = #$08 0000_1000
jmp      L92AF                         ; 0xca1 $8C91 4C AF 92                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C94                                                                          ;
rts                                    ; 0xca4 $8C94 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C95                                                                          ;
jsr      L8DC1                         ; 0xca5 $8C95 20 C1 8D                  ;
bne      L8C94                         ; 0xca8 $8C98 D0 FA                     ;
ldx      #$0E                          ; 0xcaa $8C9A A2 0E                     ;;X = #$0e 0000_1110
ldy      #$08                          ; 0xcac $8C9C A0 08                     ;;Y = #$08 0000_1000
lda      #$04                          ; 0xcae $8C9E A9 04                     ;;A = #$04 0000_0100
jsr      L8DDA                         ; 0xcb0 $8CA0 20 DA 8D                  ;
ldx      #$00                          ; 0xcb3 $8CA3 A2 00                     ;;X = #$00 0000_0000
stx      $58                           ; 0xcb5 $8CA5 86 58                     ;;FF=chest for ruby appears
dex                                    ; 0xcb7 $8CA7 CA                        ;
stx      $62                           ; 0xcb8 $8CA8 86 62                     ;;FF=got ruby			(appears in ITEM)
lda      #$0A                          ; 0xcba $8CAA A9 0A                     ;;A = #$0a 0000_1010
jmp      L92AF                         ; 0xcbc $8CAC 4C AF 92                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8CAF                                                                          ;
jsr      L8DC1                         ; 0xcbf $8CAF 20 C1 8D                  ;
bne      L8C94                         ; 0xcc2 $8CB2 D0 E0                     ;
ldx      #$0A                          ; 0xcc4 $8CB4 A2 0A                     ;;X = #$0a 0000_1010
ldy      #$10                          ; 0xcc6 $8CB6 A0 10                     ;;Y = #$10 0001_0000
lda      #$04                          ; 0xcc8 $8CB8 A9 04                     ;;A = #$04 0000_0100
jsr      L8DDA                         ; 0xcca $8CBA 20 DA 8D                  ;
ldx      #$00                          ; 0xccd $8CBD A2 00                     ;;X = #$00 0000_0000
stx      $54                           ; 0xccf $8CBF 86 54                     ;;FF=chest for pot appears
dex                                    ; 0xcd1 $8CC1 CA                        ;
stx      $5E                           ; 0xcd2 $8CC2 86 5E                     ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
lda      #$06                          ; 0xcd4 $8CC4 A9 06                     ;;A = #$06 0000_0110
jsr      L92AF                         ; 0xcd6 $8CC6 20 AF 92                  ;
ldx      #$07                          ; 0xcd9 $8CC9 A2 07                     ;;X = #$07 0000_0111
ldy      #$13                          ; 0xcdb $8CCB A0 13                     ;;Y = #$13 0001_0011
lda      #$15                          ; 0xcdd $8CCD A9 15                     ;;A = #$15 0001_0101
jmp      L8E41                         ; 0xcdf $8CCF 4C 41 8E                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8CD2                                                                          ;
jsr      L8DC1                         ; 0xce2 $8CD2 20 C1 8D                  ;
bne      L8C94                         ; 0xce5 $8CD5 D0 BD                     ;
ldx      #$04                          ; 0xce7 $8CD7 A2 04                     ;;X = #$04 0000_0100
ldy      #$10                          ; 0xce9 $8CD9 A0 10                     ;;Y = #$10 0001_0000
lda      #$04                          ; 0xceb $8CDB A9 04                     ;;A = #$04 0000_0100
jsr      L8DDA                         ; 0xced $8CDD 20 DA 8D                  ;
ldx      #$00                          ; 0xcf0 $8CE0 A2 00                     ;;X = #$00 0000_0000
stx      $51                           ; 0xcf2 $8CE2 86 51                     ;;FF=chest for lamp appears
dex                                    ; 0xcf4 $8CE4 CA                        ;
stx      $5B                           ; 0xcf5 $8CE5 86 5B                     ;;FF=got lamp 			(appears in ITEM)
lda      #$03                          ; 0xcf7 $8CE7 A9 03                     ;;A = #$03 0000_0011
jmp      L92AF                         ; 0xcf9 $8CE9 4C AF 92                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8CEC                                                                          ;
jsr      L8DC1                         ; 0xcfc $8CEC 20 C1 8D                  ;
bne      L8C94                         ; 0xcff $8CEF D0 A3                     ;
ldy      #$00                          ; 0xd01 $8CF1 A0 00                     ;;Y = #$00 0000_0000
ldx      #$01                          ; 0xd03 $8CF3 A2 01                     ;;X = #$01 0000_0001
L8CF5                                                                          ;
lda      #$04                          ; 0xd05 $8CF5 A9 04                     ;;A = #$04 0000_0100
sta      $04                           ; 0xd07 $8CF7 85 04                     ;
L8CF9                                                                          ;
lda      LDFB4,y                       ; 0xd09 $8CF9 B9 B4 DF                  ;
cmp      $36                           ; 0xd0c $8CFC C5 36                     ;;player PosX, 0-14 (small meta-tile size)
bne      L8D07                         ; 0xd0e $8CFE D0 07                     ;
lda      LDFB5,y                       ; 0xd10 $8D00 B9 B5 DF                  ;
cmp      $37                           ; 0xd13 $8D03 C5 37                     ;;player PosY, 0-14 (small meta-tile size)
beq      L8D0E                         ; 0xd15 $8D05 F0 07                     ;
L8D07                                                                          ;
iny                                    ; 0xd17 $8D07 C8                        ;
iny                                    ; 0xd18 $8D08 C8                        ;
inx                                    ; 0xd19 $8D09 E8                        ;
dec      $04                           ; 0xd1a $8D0A C6 04                     ;
bne      L8CF9                         ; 0xd1c $8D0C D0 EB                     ;
L8D0E                                                                          ;
stx      $04                           ; 0xd1e $8D0E 86 04                     ;
lda      LDFB4,y                       ; 0xd20 $8D10 B9 B4 DF                  ;
tax                                    ; 0xd23 $8D13 AA                        ;
lda      LDFB5,y                       ; 0xd24 $8D14 B9 B5 DF                  ;
tay                                    ; 0xd27 $8D17 A8                        ;
lda      #$04                          ; 0xd28 $8D18 A9 04                     ;;A = #$04 0000_0100
jsr      L8DCD                         ; 0xd2a $8D1A 20 CD 8D                  ;
ldx      $04                           ; 0xd2d $8D1D A6 04                     ;
lda      #$FF                          ; 0xd2f $8D1F A9 FF                     ;;A = #$ff 1111_1111
sta      $67,x                         ; 0xd31 $8D21 95 67                     ;;fake chest
cpx      $70                           ; 0xd33 $8D23 E4 70                     ;;x index of fake chest which contains the key (KeyChestPosition)
bne      L8D33                         ; 0xd35 $8D25 D0 0C                     ;
ldx      #$00                          ; 0xd37 $8D27 A2 00                     ;;X = #$00 0000_0000
stx      $55                           ; 0xd39 $8D29 86 55                     ;;FF=chest for key appears
dex                                    ; 0xd3b $8D2B CA                        ;
stx      $5F                           ; 0xd3c $8D2C 86 5F                     ;;FF=got key 			(appears in ITEM)
lda      #$07                          ; 0xd3e $8D2E A9 07                     ;;A = #$07 0000_0111
jsr      L92AF                         ; 0xd40 $8D30 20 AF 92                  ;
L8D33                                                                          ;
rts                                    ; 0xd43 $8D33 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8D34                                                                          ;
jsr      L8DC1                         ; 0xd44 $8D34 20 C1 8D                  ;
bne      L8D33                         ; 0xd47 $8D37 D0 FA                     ;
ldy      #$08                          ; 0xd49 $8D39 A0 08                     ;;Y = #$08 0000_1000
ldx      #$05                          ; 0xd4b $8D3B A2 05                     ;;X = #$05 0000_0101
jmp      L8CF5                         ; 0xd4d $8D3D 4C F5 8C                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8D40                                                                          ;
jsr      L8DC1                         ; 0xd50 $8D40 20 C1 8D                  ;
bne      L8D33                         ; 0xd53 $8D43 D0 EE                     ;
lda      $5F                           ; 0xd55 $8D45 A5 5F                     ;;FF=got key 			(appears in ITEM)
beq      L8D33                         ; 0xd57 $8D47 F0 EA                     ;
ldx      #$12                          ; 0xd59 $8D49 A2 12                     ;;X = #$12 0001_0010
ldy      #$0A                          ; 0xd5b $8D4B A0 0A                     ;;Y = #$0a 0000_1010
lda      #$04                          ; 0xd5d $8D4D A9 04                     ;;A = #$04 0000_0100
jsr      L8DCD                         ; 0xd5f $8D4F 20 CD 8D                  ;
ldx      #$00                          ; 0xd62 $8D52 A2 00                     ;;X = #$00 0000_0000
stx      $57                           ; 0xd64 $8D54 86 57                     ;;FF=chest for ring appears 
dex                                    ; 0xd66 $8D56 CA                        ;
stx      $61                           ; 0xd67 $8D57 86 61                     ;;FF=got ring 			(appears in ITEM)
lda      #$09                          ; 0xd69 $8D59 A9 09                     ;;A = #$09 0000_1001
jmp      L92AF                         ; 0xd6b $8D5B 4C AF 92                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8D5E                                                                          ;
jsr      L8DC1                         ; 0xd6e $8D5E 20 C1 8D                  ;
bne      L8D33                         ; 0xd71 $8D61 D0 D0                     ;
ldx      #$0A                          ; 0xd73 $8D63 A2 0A                     ;;X = #$0a 0000_1010
ldy      #$0E                          ; 0xd75 $8D65 A0 0E                     ;;Y = #$0e 0000_1110
lda      #$04                          ; 0xd77 $8D67 A9 04                     ;;A = #$04 0000_0100
jsr      L8DCD                         ; 0xd79 $8D69 20 CD 8D                  ;
ldx      #$00                          ; 0xd7c $8D6C A2 00                     ;;X = #$00 0000_0000
stx      $4F                           ; 0xd7e $8D6E 86 4F                     ;;FF=chest for sword apppears
dex                                    ; 0xd80 $8D70 CA                        ;
stx      $59                           ; 0xd81 $8D71 86 59                     ;;FF=got sword			(appears in ITEM)
lda      #$01                          ; 0xd83 $8D73 A9 01                     ;;A = #$01 0000_0001
jsr      L92AF                         ; 0xd85 $8D75 20 AF 92                  ;
lda      $5B                           ; 0xd88 $8D78 A5 5B                     ;;FF=got lamp 			(appears in ITEM)
bne      L8D80                         ; 0xd8a $8D7A D0 04                     ;
lda      #$FF                          ; 0xd8c $8D7C A9 FF                     ;;A = #$ff 1111_1111
sta      $7F                           ; 0xd8e $8D7E 85 7F                     ;
L8D80                                                                          ;
lda      $39                           ; 0xd90 $8D80 A5 39                     ;;player str
clc                                    ; 0xd92 $8D82 18                        ;
adc      #$0A                          ; 0xd93 $8D83 69 0A                     ;
cmp      #$64                          ; 0xd95 $8D85 C9 64                     ;
bmi      L8D8B                         ; 0xd97 $8D87 30 02                     ;
lda      #$64                          ; 0xd99 $8D89 A9 64                     ;;A = #$64 0110_0100
L8D8B                                                                          ;
sta      $39                           ; 0xd9b $8D8B 85 39                     ;;player str
jmp      DrawGraphicBar_for_STR        ; 0xd9d $8D8D 4C 51 97                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8D90                                                                          ;
lda      $73                           ; 0xda0 $8D90 A5 73                     ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
bne      L8D33                         ; 0xda2 $8D92 D0 9F                     ;
lda      $36                           ; 0xda4 $8D94 A5 36                     ;;player PosX, 0-14 (small meta-tile size)
cmp      #$0A                          ; 0xda6 $8D96 C9 0A                     ;
bne      L8D33                         ; 0xda8 $8D98 D0 99                     ;
lda      $37                           ; 0xdaa $8D9A A5 37                     ;;player PosY, 0-14 (small meta-tile size)
cmp      #$0D                          ; 0xdac $8D9C C9 0D                     ;
bne      L8D33                         ; 0xdae $8D9E D0 93                     ;
lda      $3F                           ; 0xdb0 $8DA0 A5 3F                     ;
cmp      #$02                          ; 0xdb2 $8DA2 C9 02                     ;
bne      L8D33                         ; 0xdb4 $8DA4 D0 8D                     ;
lda      $B1                           ; 0xdb6 $8DA6 A5 B1                     ;;player defense / attack mode (00=defense, FF=attack)
beq      L8D33                         ; 0xdb8 $8DA8 F0 89                     ;
ldx      #$0A                          ; 0xdba $8DAA A2 0A                     ;;X = #$0a 0000_1010
ldy      #$0C                          ; 0xdbc $8DAC A0 0C                     ;;Y = #$0c 0000_1100
lda      #$08                          ; 0xdbe $8DAE A9 08                     ;;A = #$08 0000_1000
jsr      L8DDA                         ; 0xdc0 $8DB0 20 DA 8D                  ;
ldx      #$FF                          ; 0xdc3 $8DB3 A2 FF                     ;;X = #$ff 1111_1111
stx      $73                           ; 0xdc5 $8DB5 86 73                     ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
stx      $58                           ; 0xdc7 $8DB7 86 58                     ;;FF=chest for ruby appears
lda      #$0E                          ; 0xdc9 $8DB9 A9 0E                     ;;A = #$0e 0000_1110
sta      $7B                           ; 0xdcb $8DBB 85 7B                     ;;0E=ruby got???
jsr      L9311                         ; 0xdcd $8DBD 20 11 93                  ;
rts                                    ; 0xdd0 $8DC0 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8DC1                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0xdd1 $8DC1 20 72 96;
ldy      #$00                          ; 0xdd4 $8DC4 A0 00                     ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0xdd6 $8DC6 B1 0E                     ;
and      #$3F                          ; 0xdd8 $8DC8 29 3F                     ;;Keep Bits:0011_1111
cmp      #$29                          ; 0xdda $8DCA C9 29                     ;
rts                                    ; 0xddc $8DCC 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8DCD                                                                          ;
sta      $0A                           ; 0xddd $8DCD 85 0A                     ;
lda      $5B                           ; 0xddf $8DCF A5 5B                     ;;FF=got lamp 			(appears in ITEM)
bne      L8DDC                         ; 0xde1 $8DD1 D0 09                     ;
stx      $9E                           ; 0xde3 $8DD3 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sty      $9F                           ; 0xde5 $8DD5 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      L8E20                         ; 0xde7 $8DD7 4C 20 8E                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8DDA                                                                          ;
sta      $0A                           ; 0xdea $8DDA 85 0A                     ;
L8DDC                                                                          ;
inx                                    ; 0xdec $8DDC E8                        ;
inx                                    ; 0xded $8DDD E8                        ;
iny                                    ; 0xdee $8DDE C8                        ;
iny                                    ; 0xdef $8DDF C8                        ;
stx      $9E                           ; 0xdf0 $8DE0 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      $0A                           ; 0xdf2 $8DE2 A6 0A                     ;
lda      LDFC4,x                       ; 0xdf4 $8DE4 BD C4 DF                  ;
ldx      $9E                           ; 0xdf7 $8DE7 A6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L95A1                         ; 0xdf9 $8DE9 20 A1 95                  ;
jsr      L951A                         ; 0xdfc $8DEC 20 1A 95                  ;
jsr      L95F4                         ; 0xdff $8DEF 20 F4 95                  ;
jsr      L9600                         ; 0xe02 $8DF2 20 00 96                  ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0xe05 $8DF5 20 5D 96   ;
lda      $0A                           ; 0xe08 $8DF8 A5 0A                     ;
sta      $2007                         ; 0xe0a $8DFA 8D 07 20                  ;;Data ($2007) <> read/write
sta      $2007                         ; 0xe0d $8DFD 8D 07 20                  ;;Data ($2007) <> read/write
lda      L0000                         ; 0xe10 $8E00 A5 00                     ;
clc                                    ; 0xe12 $8E02 18                        ;
L8E03                                                                          ;
adc      #$20                          ; 0xe13 $8E03 69 20                     ;
sta      L0000                         ; 0xe15 $8E05 85 00                     ;
lda      $01                           ; 0xe17 $8E07 A5 01                     ;
adc      #$00                          ; 0xe19 $8E09 69 00                     ;
sta      $01                           ; 0xe1b $8E0B 85 01                     ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0xe1d $8E0D 20 5D 96   ;
lda      $0A                           ; 0xe20 $8E10 A5 0A                     ;
sta      $2007                         ; 0xe22 $8E12 8D 07 20                  ;;Data ($2007) <> read/write
sta      $2007                         ; 0xe25 $8E15 8D 07 20                  ;;Data ($2007) <> read/write
dec      $9E                           ; 0xe28 $8E18 C6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9E                           ; 0xe2a $8E1A C6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0xe2c $8E1C C6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0xe2e $8E1E C6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
L8E20                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0xe30 $8E20 20 B9 DE                  ;
lda      $0A                           ; 0xe33 $8E23 A5 0A                     ;
ldy      #$00                          ; 0xe35 $8E25 A0 00                     ;;Y = #$00 0000_0000
sta      ($0E),y                       ; 0xe37 $8E27 91 0E                     ;
iny                                    ; 0xe39 $8E29 C8                        ;
sta      ($0E),y                       ; 0xe3a $8E2A 91 0E                     ;
ldy      #$16                          ; 0xe3c $8E2C A0 16                     ;;Y = #$16 0001_0110
sta      ($0E),y                       ; 0xe3e $8E2E 91 0E                     ;
iny                                    ; 0xe40 $8E30 C8                        ;
sta      ($0E),y                       ; 0xe41 $8E31 91 0E                     ;
rts                                    ; 0xe43 $8E33 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
save_A_to_A__x_to_9E__y_to_9F                                                  ;
;save A to $A ???                                                              ;
sta      $0A                           ; 0xe44 $8E34 85 0A                     ;
;if got lamp skip                                                              ;
lda      $5B                           ; 0xe46 $8E36 A5 5B                     ;;FF=got lamp 			(appears in ITEM)
bne      related_to_lamp__probably     ; 0xe48 $8E38 D0 09                     ;
;store register X and Y to $9E(x) and $9F(y)                                   ;
stx      $9E                           ; 0xe4a $8E3A 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sty      $9F                           ; 0xe4c $8E3C 84 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      L8E88                         ; 0xe4e $8E3E 4C 88 8E                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8E41                                                                          ;
sta      $0A                           ; 0xe51 $8E41 85 0A                     ;
related_to_lamp__probably                                                      ;
inx                                    ; 0xe53 $8E43 E8                        ;
inx                                    ; 0xe54 $8E44 E8                        ;
iny                                    ; 0xe55 $8E45 C8                        ;
iny                                    ; 0xe56 $8E46 C8                        ;
stx      $9E                           ; 0xe57 $8E47 86 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      $0A                           ; 0xe59 $8E49 A6 0A                     ;
lda      LDFC4,x                       ; 0xe5b $8E4B BD C4 DF                  ;
ldx      $9E                           ; 0xe5e $8E4E A6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L95A1                         ; 0xe60 $8E50 20 A1 95                  ;
jsr      L951A                         ; 0xe63 $8E53 20 1A 95                  ;
jsr      L95F4                         ; 0xe66 $8E56 20 F4 95                  ;
jsr      L9600                         ; 0xe69 $8E59 20 00 96                  ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0xe6c $8E5C 20 5D 96   ;
ldx      $0A                           ; 0xe6f $8E5F A6 0A                     ;
stx      $2007                         ; 0xe71 $8E61 8E 07 20                  ;;Data ($2007) <> read/write
inx                                    ; 0xe74 $8E64 E8                        ;
stx      $2007                         ; 0xe75 $8E65 8E 07 20                  ;;Data ($2007) <> read/write
inx                                    ; 0xe78 $8E68 E8                        ;
lda      L0000                         ; 0xe79 $8E69 A5 00                     ;
clc                                    ; 0xe7b $8E6B 18                        ;
adc      #$20                          ; 0xe7c $8E6C 69 20                     ;
sta      L0000                         ; 0xe7e $8E6E 85 00                     ;
lda      $01                           ; 0xe80 $8E70 A5 01                     ;
adc      #$00                          ; 0xe82 $8E72 69 00                     ;
sta      $01                           ; 0xe84 $8E74 85 01                     ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0xe86 $8E76 20 5D 96   ;
stx      $2007                         ; 0xe89 $8E79 8E 07 20                  ;;Data ($2007) <> read/write
inx                                    ; 0xe8c $8E7C E8                        ;
stx      $2007                         ; 0xe8d $8E7D 8E 07 20                  ;;Data ($2007) <> read/write
dec      $9E                           ; 0xe90 $8E80 C6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9E                           ; 0xe92 $8E82 C6 9E                     ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0xe94 $8E84 C6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0xe96 $8E86 C6 9F                     ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
L8E88                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0xe98 $8E88 20 B9 DE                  ;
lda      $0A                           ; 0xe9b $8E8B A5 0A                     ;
ldy      #$00                          ; 0xe9d $8E8D A0 00                     ;;Y = #$00 0000_0000
sta      ($0E),y                       ; 0xe9f $8E8F 91 0E                     ;
clc                                    ; 0xea1 $8E91 18                        ;
adc      #$01                          ; 0xea2 $8E92 69 01                     ;
iny                                    ; 0xea4 $8E94 C8                        ;
sta      ($0E),y                       ; 0xea5 $8E95 91 0E                     ;
adc      #$01                          ; 0xea7 $8E97 69 01                     ;
ldy      #$16                          ; 0xea9 $8E99 A0 16                     ;;Y = #$16 0001_0110
sta      ($0E),y                       ; 0xeab $8E9B 91 0E                     ;
adc      #$01                          ; 0xead $8E9D 69 01                     ;
iny                                    ; 0xeaf $8E9F C8                        ;
sta      ($0E),y                       ; 0xeb0 $8EA0 91 0E                     ;
rts                                    ; 0xeb2 $8EA2 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8EA3                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0xeb3 $8EA3 20 72 96;
ldy      #$16                          ; 0xeb6 $8EA6 A0 16                     ;;Y = #$16 0001_0110
jsr      L8EE5                         ; 0xeb8 $8EA8 20 E5 8E                  ;
sta      $08                           ; 0xebb $8EAB 85 08                     ;;save calc'd attack strength to $08 ?
iny                                    ; 0xebd $8EAD C8                        ;
jsr      L8EE5                         ; 0xebe $8EAE 20 E5 8E                  ;
clc                                    ; 0xec1 $8EB1 18                        ;
adc      $08                           ; 0xec2 $8EB2 65 08                     ;;save calc'd attack strength to $08 ?
bmi      L8ECB                         ; 0xec4 $8EB4 30 15                     ;
clc                                    ; 0xec6 $8EB6 18                        ;
adc      $3D                           ; 0xec7 $8EB7 65 3D                     ;;DamageTimer       ???
sta      $3D                           ; 0xec9 $8EB9 85 3D                     ;;DamageTimer       ???
bcc      L8ECA                         ; 0xecb $8EBB 90 0D                     ;
;regen hp                                                                      ;
inc      $38                           ; 0xecd $8EBD E6 38                     ;;player hp
;if player max hp >= player hp then skip, otherwise save hp to what it was before inc? maybe;
lda      $41                           ; 0xecf $8EBF A5 41                     ;;player max hp
cmp      $38                           ; 0xed1 $8EC1 C5 38                     ;;player hp
bpl      L8EC7                         ; 0xed3 $8EC3 10 02                     ;
sta      $38                           ; 0xed5 $8EC5 85 38                     ;;player hp
L8EC7                                                                          ;
jsr      DrawGraphicBar_for_HP         ; 0xed7 $8EC7 20 42 97                  ;
L8ECA                                                                          ;
rts                                    ; 0xeda $8ECA 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8ECB                                                                          ;
clc                                    ; 0xedb $8ECB 18                        ;
adc      $3D                           ; 0xedc $8ECC 65 3D                     ;;DamageTimer       ???
sta      $3D                           ; 0xede $8ECE 85 3D                     ;;DamageTimer       ???
bcs      L8EDD                         ; 0xee0 $8ED0 B0 0B                     ;
dec      $38                           ; 0xee2 $8ED2 C6 38                     ;;player hp
bpl      L8EDA                         ; 0xee4 $8ED4 10 04                     ;
lda      #$00                          ; 0xee6 $8ED6 A9 00                     ;;A = #$00 0000_0000
sta      $38                           ; 0xee8 $8ED8 85 38                     ;;player hp
L8EDA                                                                          ;
jsr      DrawGraphicBar_for_HP         ; 0xeea $8EDA 20 42 97                  ;
L8EDD                                                                          ;
lda      $38                           ; 0xeed $8EDD A5 38                     ;;player hp
beq      L8EE2                         ; 0xeef $8EDF F0 01                     ;
rts                                    ; 0xef1 $8EE1 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8EE2                                                                          ;
jmp      LAF46                         ; 0xef2 $8EE2 4C 46 AF                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8EE5                                                                          ;
lda      ($0E),y                       ; 0xef5 $8EE5 B1 0E                     ;
and      #$3F                          ; 0xef7 $8EE7 29 3F                     ;;Keep Bits:0011_1111
cmp      #$09                          ; 0xef9 $8EE9 C9 09                     ;
bpl      L8F00                         ; 0xefb $8EEB 10 13                     ;
asl                                    ; 0xefd $8EED 0A                        ;
tax                                    ; 0xefe $8EEE AA                        ;
lda      $3C                           ; 0xeff $8EEF A5 3C                     ;;player CurrentLevel      
cmp      #$05                          ; 0xf01 $8EF1 C9 05                     ;
bpl      L8EFA                         ; 0xf03 $8EF3 10 05                     ;
lda      $83                           ; 0xf05 $8EF5 A5 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
beq      L8EFA                         ; 0xf07 $8EF7 F0 01                     ;
inx                                    ; 0xf09 $8EF9 E8                        ;
L8EFA                                                                          ;
lda      L97C4,x                       ; 0xf0a $8EFA BD C4 97                  ;
jmp      L8F02                         ; 0xf0d $8EFD 4C 02 8F                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8F00                                                                          ;
lda      #$00                          ; 0xf10 $8F00 A9 00                     ;;A = #$00 0000_0000
L8F02                                                                          ;
clc                                    ; 0xf12 $8F02 18                        ;
adc      $3C                           ; 0xf13 $8F03 65 3C                     ;;player CurrentLevel      
rts                                    ; 0xf15 $8F05 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Detect_if_being_attacked_by_played                                    ;
lda      $83                           ; 0xf16 $8F06 A5 83                     ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
bne      L8F0B                         ; 0xf18 $8F08 D0 01                     ;
rts                                    ; 0xf1a $8F0A 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8F0B                                                                          ;
;point ($8B) to $06EC (monster variables)                                      ;
lda      #$06                          ; 0xf1b $8F0B A9 06                     ;;A = #$06 0000_0110
sta      $8C                           ; 0xf1d $8F0D 85 8C                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0xf1f $8F0F A9 EC                     ;;A = #$ec 1110_1100
sta      $8B                           ; 0xf21 $8F11 85 8B                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0xf23 $8F13 A9 00                     ;;A = #$00 0000_0000
sta      $89                           ; 0xf25 $8F15 85 89                     ;
L8F17                                                                          ;
ldy      #$00                          ; 0xf27 $8F17 A0 00                     ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0xf29 $8F19 B1 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0xf2b $8F1B 85 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
;monster variable index 4: 6F0 	                                               ;Enemy 0 - OffscreenTimerOffset    4
ldy      #$04                          ; 0xf2d $8F1D A0 04                     ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0xf2f $8F1F B1 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      L8F2B                         ; 0xf31 $8F21 D0 08                     ;
jsr      Monster_CheckIfPlayerIsAttacking__Maybe; 0xf33 $8F23 20 24 91         ;
bcc      L8F2B                         ; 0xf36 $8F26 90 03                     ;
jsr      Monster_Attacked_By_Player0   ; 0xf38 $8F28 20 41 8F                  ;nop this out and player cannot attack monsters?
L8F2B                                                                          ;
;increment to next monster slot (of variables)                                 ;
lda      $8B                           ; 0xf3b $8F2B A5 8B                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0xf3d $8F2D 18                        ;
adc      #$0A                          ; 0xf3e $8F2E 69 0A                     ;increment lowbyte address to next monster slot (of variables)
sta      $8B                           ; 0xf40 $8F30 85 8B                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0xf42 $8F32 A5 8C                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0xf44 $8F34 69 00                     ;
sta      $8C                           ; 0xf46 $8F36 85 8C                     ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0xf48 $8F38 E6 89                     ;
lda      $89                           ; 0xf4a $8F3A A5 89                     ;
cmp      $8A                           ; 0xf4c $8F3C C5 8A                     ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      L8F17                         ; 0xf4e $8F3E 30 D7                     ;
rts                                    ; 0xf50 $8F40 60                        ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster_Attacked_By_Player0                                                    ;
lda      $88                           ; 0xf51 $8F41 A5 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$0C                          ; 0xf53 $8F43 C9 0C                     ;
beq      L8F4B                         ; 0xf55 $8F45 F0 04                     ;
cmp      #$0D                          ; 0xf57 $8F47 C9 0D                     ;
bne      Monster_Attacked_By_Player1   ; 0xf59 $8F49 D0 03                     ;
L8F4B                                                                          ;
jmp      L90F6                         ; 0xf5b $8F4B 4C F6 90                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster_Attacked_By_Player1                                                    ;
lda      #$02                          ; 0xf5e $8F4E A9 02                     ;;A = #$02 0000_0010
jsr      LE271                         ; 0xf60 $8F50 20 71 E2                  ;
;load player str                                                               ;
lda      $39                           ; 0xf63 $8F53 A5 39                     ;;player str
;check if in Defense Mode                                                      ;
ldx      $B1                           ; 0xf65 $8F55 A6 B1                     ;;player defense / attack mode (00=defense, FF=attack)
bne      L8F5F                         ; 0xf67 $8F57 D0 06                     ;
;reduce str (in A) if in Defense Mode                                          ;
lsr                                    ; 0xf69 $8F59 4A                        ;
lsr                                    ; 0xf6a $8F5A 4A                        ;
lsr                                    ; 0xf6b $8F5B 4A                        ;
lsr                                    ; 0xf6c $8F5C 4A                        ;
;if (Attack-STR is reduced to <80) goto $8F65                                  ;
bpl      L8F65                         ; 0xf6d $8F5D 10 06                     ;
L8F5F                                                                          ;
;reduce attack-str again (damage strength too high?)                           ;
lsr                                    ; 0xf6f $8F5F 4A                        ;
;check if got sword                                                            ;
ldx      $59                           ; 0xf70 $8F60 A6 59                     ;;FF=got sword			(appears in ITEM)
bne      L8F65                         ; 0xf72 $8F62 D0 01                     ;
;reduce attack-str again (no sword)                                            ;
lsr                                    ; 0xf74 $8F64 4A                        ;
L8F65                                                                          ;
;monster 06:	VAMPIRE                                                           ;
ldx      $88                           ; 0xf75 $8F65 A6 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
cpx      #$06                          ; 0xf77 $8F67 E0 06                     ;
bne      L8F71                         ; 0xf79 $8F69 D0 06                     ;
;check if got cross for attacking vampire                                      ;
ldx      $5C                           ; 0xf7b $8F6B A6 5C                     ;;FF=got cross 			(appears in ITEM)
bne      L8F71                         ; 0xf7d $8F6D D0 02                     ;
;attacking vampire with no cross = #$00 attack strength                        ;
lda      #$00                          ; 0xf7f $8F6F A9 00                     ;;A = #$00 0000_0000
L8F71                                                                          ;
;monster 12:	DRAGON@                                                           ;
ldx      $88                           ; 0xf81 $8F71 A6 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
cpx      #$12                          ; 0xf83 $8F73 E0 12                     ;
bne      L8F81                         ; 0xf85 $8F75 D0 0A                     ;
;if (all fairys NOT got) then goto:(set attack strength to #$00)               ;
ldx      $67                           ; 0xf87 $8F77 A6 67                     ;;all fairys got
beq      L8F7F                         ; 0xf89 $8F79 F0 04                     ;
;if (dragon invincible) then (set attack strength to #$00)                     ;
ldx      $73                           ; 0xf8b $8F7B A6 73                     ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
bne      L8F81                         ; 0xf8d $8F7D D0 02                     ;
L8F7F                                                                          ;
;if (dragon invincible) OR (all fairys NOT got)                                ;
;set attack strength to #$00                                                   ;
lda      #$00                          ; 0xf8f $8F7F A9 00                     ;;A = #$00 0000_0000
L8F81                                                                          ;
;monster 0B:	WIZARD@                                                           ;
ldx      $88                           ; 0xf91 $8F81 A6 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
cpx      #$0B                          ; 0xf93 $8F83 E0 0B                     ;
bne      L8F89                         ; 0xf95 $8F85 D0 02                     ;
;if (wizard) set attack strength to #$00                                       ;
;cannot physically attack wizard                                               ;
lda      #$00                          ; 0xf97 $8F87 A9 00                     ;;A = #$00 0000_0000
L8F89                                                                          ;
;save attack strength to $08 ?                                                 ;
sta      $08                           ; 0xf99 $8F89 85 08                     ;;save calc'd attack strength to $08 ?
;monster variable index 8:	6F4 	Enemy 0 - HPOffset                8            ;
ldy      #$08                          ; 0xf9b $8F8B A0 08                     ;;Y = #$08 0000_1000
;load HP of monster attacking                                                  ;
lda      ($8B),y                       ; 0xf9d $8F8D B1 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;subtract damage dealt                                                         ;
sec                                    ; 0xf9f $8F8F 38                        ;
sbc      $08                           ; 0xfa0 $8F90 E5 08                     ;;save calc'd attack strength to $08 ?
;update monster HP                                                             ;
sta      ($8B),y                       ; 0xfa2 $8F92 91 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;monster 12:	DRAGON@                                                           ;
ldx      $88                           ; 0xfa4 $8F94 A6 88                     ;;save monster's (index=0) "typeOffset"(?) to $88
cpx      #$12                          ; 0xfa6 $8F96 E0 12                     ;
bne      L8F9C                         ; 0xfa8 $8F98 D0 02                     ;
sta      $71                           ; 0xfaa $8F9A 85 71                     ;;HP for monster, maybe?? (monster 12:	;DRAGON@)
L8F9C                                                                          ;
;monster 13:	VARALYS                                                           ;
cpx      #$13                          ; 0xfac $8F9C E0 13                     ;
bne      L8FA2                         ; 0xfae $8F9E D0 02                     ;
sta      $72                           ; 0xfb0 $8FA0 85 72                     ;;HP for monster, maybe?? (monster 13:	;VARALYS)
L8FA2                                                                          ;
;check if monster hp is 0 or negative (80 to FF)                               ;
lda      ($8B),y                       ; 0xfb2 $8FA2 B1 8B                     ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      Monster_Death                 ; 0xfb4 $8FA4 F0 05                     ;
bmi      Monster_Death                 ; 0xfb6 $8FA6 30 03                     ;
jmp      LCF77                         ; 0xfb8 $8FA8 4C 77 CF                  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster_Death                                                                  ;
jsr      Monster__PickAndSetRND_OffscreenTimer; 0xfbb $8FAB 20 75 C8           ;
jsr      L96CA                         ; 0xfbe $8FAE 20 CA 96                  ;
jsr      Monster__LoadFromTable_EXP_Amount_From_Kill; 0xfc1 $8FB1 20 54 D1     ;
;add exp from monster to current exp                                           ;
clc                                    ; 0xfc4 $8FB4 18                        ;
adc      $3A                           ; 0xfc5 $8FB5 65 3A                     ;;player CurrentExperience 
sta      $3A                           ; 0xfc7 $8FB7 85 3A                     ;;player CurrentExperience 
;subtract #$64                                                                 ;
;	if result is <0 , then we obviously didn't level up                          ;
sec                                    ; 0xfc9 $8FB9 38                        ;
sbc      #$64                          ; 0xfca $8FBA E9 64                     ;
;if we didn't level up, skip ahead to $9016                                    ;
bmi      L9016                         ; 0xfcc $8FBC 30 58                     ;if bit7 of the result (of sbc) is 1, then goto $9016
sta      $3A                           ; 0xfce $8FBE 85 3A                     ;;player CurrentExperience 
;increment stats                                                               ;
lda      $38                           ; 0xfd0 $8FC0 A5 38                     ;;player hp
clc                                    ; 0xfd2 $8FC2 18                        ;
adc      #$0A                          ; 0xfd3 $8FC3 69 0A                     ;
;if new hp is < #$64 then save the hp now, otherwise set hp to #$64            ;
cmp      #$64                          ; 0xfd5 $8FC5 C9 64                     ;
bmi      L8FCB                         ; 0xfd7 $8FC7 30 02                     ;
lda      #$64                          ; 0xfd9 $8FC9 A9 64                     ;;A = #$64 0110_0100
L8FCB                                                                          ;
sta      $38                           ; 0xfdb $8FCB 85 38                     ;;player hp
lda      $41                           ; 0xfdd $8FCD A5 41                     ;;player max hp
clc                                    ; 0xfdf $8FCF 18                        ;
adc      #$0A                          ; 0xfe0 $8FD0 69 0A                     ;
;if new max hp is < #$64 then save the max hp now, otherwise set max hp to #$64;
cmp      #$64                          ; 0xfe2 $8FD2 C9 64                     ;
bmi      L8FD8                         ; 0xfe4 $8FD4 30 02                     ;
lda      #$64                          ; 0xfe6 $8FD6 A9 64                     ;;A = #$64 0110_0100
L8FD8                                                                          ;
sta      $41                           ; 0xfe8 $8FD8 85 41                     ;;player max hp
lda      $39                           ; 0xfea $8FDA A5 39                     ;;player str
clc                                    ; 0xfec $8FDC 18                        ;
adc      #$0A                          ; 0xfed $8FDD 69 0A                     ;
;if new str is < #$64 then save the str now, otherwise set str to #$64         ;
cmp      #$64                          ; 0xfef $8FDF C9 64                     ;
bmi      L8FE5                         ; 0xff1 $8FE1 30 02                     ;
lda      #$64                          ; 0xff3 $8FE3 A9 64                     ;;A = #$64 0110_0100
L8FE5                                                                          ;
sta      $39                           ; 0xff5 $8FE5 85 39                     ;;player str
;increment level                                                               ;
inc      $3C                           ; 0xff7 $8FE7 E6 3C                     ;;player CurrentLevel      
lda      $3C                           ; 0xff9 $8FE9 A5 3C                     ;;player CurrentLevel      
;if (player_level) is < #$09 then save player_level now, otherwise set player level to #$09;
cmp      #$09                          ; 0xffb $8FEB C9 09                     ;
bmi      L8FF1                         ; 0xffd $8FED 30 02                     ;
;set player_level to #$09                                                      ;
lda      #$09                          ; 0xfff $8FEF A9 09                     ;;A = #$09 0000_1001
;save player_level                                                             ;
L8FF1                                                                          ;
sta      $3C                           ; 0x1001 $8FF1 85 3C                    ;;player CurrentLevel      
;load player mp and add #$0A                                                   ;;Keep Bits:0000_0000
lda      $3B                           ; 0x1003 $8FF3 A5 3B                    ;;player mp
clc                                    ; 0x1005 $8FF5 18                       ;
adc      #$0A                          ; 0x1006 $8FF6 69 0A                    ;
;if (player_mp < #$64) skip                                                    ;
cmp      #$64                          ; 0x1008 $8FF8 C9 64                    ;
bmi      L8FFE                         ; 0x100a $8FFA 30 02                    ;
;set player_mp to #$64                                                         ;
lda      #$64                          ; 0x100c $8FFC A9 64                    ;;A = #$64 0110_0100
;save player mp                                                                ;
L8FFE                                                                          ;
sta      $3B                           ; 0x100e $8FFE 85 3B                    ;;player mp
;load player max mp and add #$0A                                               ;;Keep Bits:0000_0000
lda      $42                           ; 0x1010 $9000 A5 42                    ;;player max mp
clc                                    ; 0x1012 $9002 18                       ;
adc      #$0A                          ; 0x1013 $9003 69 0A                    ;
;if (player max mp < #$64) skip                                                ;
cmp      #$64                          ; 0x1015 $9005 C9 64                    ;
bmi      L900B                         ; 0x1017 $9007 30 02                    ;
;set player max mp to #$64                                                     ;
lda      #$64                          ; 0x1019 $9009 A9 64                    ;;A = #$64 0110_0100
;save player max mp                                                            ;
L900B                                                                          ;
sta      $42                           ; 0x101b $900B 85 42                    ;;player max mp
;update/redraw graphic bars for HP , STR , MP                                  ;
jsr      DrawGraphicBar_for_HP         ; 0x101d $900D 20 42 97                 ;
jsr      DrawGraphicBar_for_STR        ; 0x1020 $9010 20 51 97                 ;
jsr      DrawGraphicBar_for_MP         ; 0x1023 $9013 20 5D 97                 ;
;update/redraw graphic bars for EXP                                            ;
L9016                                                                          ;
jsr      DrawGraphicBar_for_EXP        ; 0x1026 $9016 20 57 97                 ;
;something involving shield item, skip                                         ;
lda      $5A                           ; 0x1029 $9019 A5 5A                    ;;FF=got shield 			(appears in ITEM)
bne      L903B                         ; 0x102b $901B D0 1E                    ;
;something involving monster type, skip                                        ;
lda      $88                           ; 0x102d $901D A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
beq      L9027                         ; 0x102f $901F F0 06                    ;
;set $77 to #$00                                                               ;
lda      #$00                          ; 0x1031 $9021 A9 00                    ;;A = #$00 0000_0000
sta      $77                           ; 0x1033 $9023 85 77                    ;
;forced goto $903B                                                             ;
beq      L903B                         ; 0x1035 $9025 F0 14                    ;
L9027                                                                          ;
;increment $77                                                                 ;
inc      $77                           ; 0x1037 $9027 E6 77                    ;
;if ($77 < #$03) skip                                                          ;
lda      $77                           ; 0x1039 $9029 A5 77                    ;
cmp      #$03                          ; 0x103b $902B C9 03                    ;
bmi      L903B                         ; 0x103d $902D 30 0C                    ;
;set chest for shield (NOT) appear                                             ;
ldx      #$00                          ; 0x103f $902F A2 00                    ;;X = #$00 0000_0000
stx      $50                           ; 0x1041 $9031 86 50                    ;;FF=chest for shield appear ??
;set FF=got shield 			(appears in ITEM)                                        ;
dex                                    ; 0x1043 $9033 CA                       ;
stx      $5A                           ; 0x1044 $9034 86 5A                    ;;FF=got shield 			(appears in ITEM)
;something                                                                     ;
lda      #$02                          ; 0x1046 $9036 A9 02                    ;;A = #$02 0000_0010
jsr      L92AF                         ; 0x1048 $9038 20 AF 92                 ;
;skip point to here                                                            ;
L903B                                                                          ;
;if got ring, skip                                                             ;
lda      $61                           ; 0x104b $903B A5 61                    ;;FF=got ring 			(appears in ITEM)
bne      L9082                         ; 0x104d $903D D0 43                    ;
;load monster type                                                             ;
lda      $88                           ; 0x104f $903F A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;monster 01:	GOLDAM@                                                           ;
cmp      #$01                          ; 0x1051 $9041 C9 01                    ;
bne      L9067                         ; 0x1053 $9043 D0 22                    ;
;code for monster 01:	GOLDAM@                                                  ;
lda      $57                           ; 0x1055 $9045 A5 57                    ;;FF=chest for ring appears 
bne      L9082                         ; 0x1057 $9047 D0 39                    ;
;increment $76                                                                 ;
inc      $76                           ; 0x1059 $9049 E6 76                    ;
;if ($76 < #$03) skip                                                          ;
lda      $76                           ; 0x105b $904B A5 76                    ;
cmp      #$03                          ; 0x105d $904D C9 03                    ;
bmi      L9082                         ; 0x105f $904F 30 31                    ;
;make (chest for ring appears)                                                 ;
lda      #$FF                          ; 0x1061 $9051 A9 FF                    ;;A = #$ff 1111_1111
sta      $57                           ; 0x1063 $9053 85 57                    ;;FF=chest for ring appears 
;if ($47 is not equal to #$1E) skip                                            ;
lda      $47                           ; 0x1065 $9055 A5 47                    ;;player CurrentArea       
cmp      #$1E                          ; 0x1067 $9057 C9 1E                    ;
bne      L9082                         ; 0x1069 $9059 D0 27                    ;
;something                                                                     ;
ldx      #$12                          ; 0x106b $905B A2 12                    ;;X = #$12 0001_0010
ldy      #$0A                          ; 0x106d $905D A0 0A                    ;;Y = #$0a 0000_1010
lda      #$29                          ; 0x106f $905F A9 29                    ;;A = #$29 0010_1001
jsr      save_A_to_A__x_to_9E__y_to_9F ; 0x1071 $9061 20 34 8E                 ;
;something                                                                     ;
jmp      L9082                         ; 0x1074 $9064 4C 82 90                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9067                                                                          ;
lda      #$00                          ; 0x1077 $9067 A9 00                    ;;A = #$00 0000_0000
sta      $76                           ; 0x1079 $9069 85 76                    ;
lda      $57                           ; 0x107b $906B A5 57                    ;;FF=chest for ring appears 
beq      L9082                         ; 0x107d $906D F0 13                    ;
lda      #$00                          ; 0x107f $906F A9 00                    ;;A = #$00 0000_0000
sta      $57                           ; 0x1081 $9071 85 57                    ;;FF=chest for ring appears 
lda      $47                           ; 0x1083 $9073 A5 47                    ;;player CurrentArea       
cmp      #$1E                          ; 0x1085 $9075 C9 1E                    ;
bne      L9082                         ; 0x1087 $9077 D0 09                    ;
lda      #$04                          ; 0x1089 $9079 A9 04                    ;;A = #$04 0000_0100
ldx      #$12                          ; 0x108b $907B A2 12                    ;;X = #$12 0001_0010
ldy      #$0A                          ; 0x108d $907D A0 0A                    ;;Y = #$0a 0000_1010
jsr      L8DCD                         ; 0x108f $907F 20 CD 8D                 ;
L9082                                                                          ;
lda      $88                           ; 0x1092 $9082 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$06                          ; 0x1094 $9084 C9 06                    ;
bne      L9097                         ; 0x1096 $9086 D0 0F                    ;
lda      #$FF                          ; 0x1098 $9088 A9 FF                    ;;A = #$ff 1111_1111
sta      $51                           ; 0x109a $908A 85 51                    ;;FF=chest for lamp appears
sta      $75                           ; 0x109c $908C 85 75                    ;
ldx      #$04                          ; 0x109e $908E A2 04                    ;;X = #$04 0000_0100
ldy      #$10                          ; 0x10a0 $9090 A0 10                    ;;Y = #$10 0001_0000
lda      #$29                          ; 0x10a2 $9092 A9 29                    ;;A = #$29 0010_1001
jsr      L8E41                         ; 0x10a4 $9094 20 41 8E                 ;
L9097                                                                          ;
lda      $88                           ; 0x10a7 $9097 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$12                          ; 0x10a9 $9099 C9 12                    ;
bne      L90A9                         ; 0x10ab $909B D0 0C                    ;
ldx      #$00                          ; 0x10ad $909D A2 00                    ;;X = #$00 0000_0000
stx      $53                           ; 0x10af $909F 86 53                    ;
dex                                    ; 0x10b1 $90A1 CA                       ;
stx      $5D                           ; 0x10b2 $90A2 86 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
lda      #$05                          ; 0x10b4 $90A4 A9 05                    ;;A = #$05 0000_0101
jsr      L92AF                         ; 0x10b6 $90A6 20 AF 92                 ;
L90A9                                                                          ;
lda      $88                           ; 0x10b9 $90A9 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$13                          ; 0x10bb $90AB C9 13                    ;
bne      L90B2                         ; 0x10bd $90AD D0 03                    ;
jmp      LB08D                         ; 0x10bf $90AF 4C 8D B0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L90B2                                                                          ;
lda      $88                           ; 0x10c2 $90B2 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$07                          ; 0x10c4 $90B4 C9 07                    ;
bne      L90C4                         ; 0x10c6 $90B6 D0 0C                    ;
lda      $3C                           ; 0x10c8 $90B8 A5 3C                    ;;player CurrentLevel      
cmp      #$05                          ; 0x10ca $90BA C9 05                    ;
bmi      L90C4                         ; 0x10cc $90BC 30 06                    ;
lda      #$14                          ; 0x10ce $90BE A9 14                    ;;A = #$14 0001_0100
ldy      #$00                          ; 0x10d0 $90C0 A0 00                    ;;Y = #$00 0000_0000
sta      ($8B),y                       ; 0x10d2 $90C2 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
L90C4                                                                          ;
lda      $88                           ; 0x10d4 $90C4 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$08                          ; 0x10d6 $90C6 C9 08                    ;
bne      L90D6                         ; 0x10d8 $90C8 D0 0C                    ;
lda      $3C                           ; 0x10da $90CA A5 3C                    ;;player CurrentLevel      
cmp      #$05                          ; 0x10dc $90CC C9 05                    ;
bmi      L90D6                         ; 0x10de $90CE 30 06                    ;
lda      #$15                          ; 0x10e0 $90D0 A9 15                    ;;A = #$15 0001_0101
ldy      #$00                          ; 0x10e2 $90D2 A0 00                    ;;Y = #$00 0000_0000
sta      ($8B),y                       ; 0x10e4 $90D4 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
L90D6                                                                          ;
lda      $88                           ; 0x10e6 $90D6 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$09                          ; 0x10e8 $90D8 C9 09                    ;
beq      L90E2                         ; 0x10ea $90DA F0 06                    ;
lda      #$00                          ; 0x10ec $90DC A9 00                    ;;A = #$00 0000_0000
sta      $79                           ; 0x10ee $90DE 85 79                    ;
beq      L90F5                         ; 0x10f0 $90E0 F0 13                    ;
L90E2                                                                          ;
inc      $79                           ; 0x10f2 $90E2 E6 79                    ;
lda      $79                           ; 0x10f4 $90E4 A5 79                    ;
and      #$1F                          ; 0x10f6 $90E6 29 1F                    ;;Keep Bits:0001_1111
sta      $79                           ; 0x10f8 $90E8 85 79                    ;
bne      L90F5                         ; 0x10fa $90EA D0 09                    ;
lda      $47                           ; 0x10fc $90EC A5 47                    ;;player CurrentArea       
cmp      #$07                          ; 0x10fe $90EE C9 07                    ;
bne      L90F5                         ; 0x1100 $90F0 D0 03                    ;
jsr      LB272                         ; 0x1102 $90F2 20 72 B2                 ;
L90F5                                                                          ;
rts                                    ; 0x1105 $90F5 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L90F6                                                                          ;
lda      $88                           ; 0x1106 $90F6 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$0D                          ; 0x1108 $90F8 C9 0D                    ;
bne      L911D                         ; 0x110a $90FA D0 21                    ;
lda      $89                           ; 0x110c $90FC A5 89                    ;
clc                                    ; 0x110e $90FE 18                       ;
adc      #$01                          ; 0x110f $90FF 69 01                    ;
cmp      $7C                           ; 0x1111 $9101 C5 7C                    ;;Fairy2TreePosition?
bne      L911D                         ; 0x1113 $9103 D0 18                    ;
lda      $65                           ; 0x1115 $9105 A5 65                    ;;FF=got fairy 2 (appears in ITEM)
bne      L911D                         ; 0x1117 $9107 D0 14                    ;
lda      $B1                           ; 0x1119 $9109 A5 B1                    ;;player defense / attack mode (00=defense, FF=attack)
beq      L911C                         ; 0x111b $910B F0 0F                    ;
lda      $3F                           ; 0x111d $910D A5 3F                    ;
cmp      #$02                          ; 0x111f $910F C9 02                    ;
bne      L911C                         ; 0x1121 $9111 D0 09                    ;
lda      #$FF                          ; 0x1123 $9113 A9 FF                    ;;A = #$ff 1111_1111
sta      $65                           ; 0x1125 $9115 85 65                    ;;FF=got fairy 2 (appears in ITEM)
lda      #$02                          ; 0x1127 $9117 A9 02                    ;;A = #$02 0000_0010
jsr      GetItem_Or_GetFairy_Maybe     ; 0x1129 $9119 20 7A 93                 ;
L911C                                                                          ;
rts                                    ; 0x112c $911C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L911D                                                                          ;
lda      $41                           ; 0x112d $911D A5 41                    ;;player max hp
lsr                                    ; 0x112f $911F 4A                       ;
jsr      LC7C1                         ; 0x1130 $9120 20 C1 C7                 ;
rts                                    ; 0x1133 $9123 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster_CheckIfPlayerIsAttacking__Maybe                                        ;
lda      $88                           ; 0x1134 $9124 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$11                          ; 0x1136 $9126 C9 11                    ;
beq      L916D                         ; 0x1138 $9128 F0 43                    ;
asl                                    ; 0x113a $912A 0A                       ;
tax                                    ; 0x113b $912B AA                       ;
lda      L97D6,x                       ; 0x113c $912C BD D6 97                 ;
sta      $97                           ; 0x113f $912F 85 97                    ;
lda      L97D7,x                       ; 0x1141 $9131 BD D7 97                 ;
sta      $98                           ; 0x1144 $9134 85 98                    ;
ldx      $3F                           ; 0x1146 $9136 A6 3F                    ;
beq      L9142                         ; 0x1148 $9138 F0 08                    ;
dex                                    ; 0x114a $913A CA                       ;
beq      L916F                         ; 0x114b $913B F0 32                    ;
dex                                    ; 0x114d $913D CA                       ;
beq      L9191                         ; 0x114e $913E F0 51                    ;
bne      L9199                         ; 0x1150 $9140 D0 57                    ;
L9142                                                                          ;
lda      #$02                          ; 0x1152 $9142 A9 02                    ;;A = #$02 0000_0010
L9144                                                                          ;
clc                                    ; 0x1154 $9144 18                       ;
adc      $37                           ; 0x1155 $9145 65 37                    ;;player PosY, 0-14 (small meta-tile size)
ldy      #$02                          ; 0x1157 $9147 A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x1159 $9149 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      L916D                         ; 0x115b $914B D0 20                    ;
lda      $36                           ; 0x115d $914D A5 36                    ;;player PosX, 0-14 (small meta-tile size)
clc                                    ; 0x115f $914F 18                       ;
adc      #$01                          ; 0x1160 $9150 69 01                    ;
sta      $09                           ; 0x1162 $9152 85 09                    ;
sec                                    ; 0x1164 $9154 38                       ;
sbc      $97                           ; 0x1165 $9155 E5 97                    ;
bpl      L915B                         ; 0x1167 $9157 10 02                    ;
lda      #$00                          ; 0x1169 $9159 A9 00                    ;;A = #$00 0000_0000
L915B                                                                          ;
sta      $08                           ; 0x116b $915B 85 08                    ;;save calc'd attack strength to $08 ?
ldy      #$01                          ; 0x116d $915D A0 01                    ;;Y = #$01 0000_0001
L915F                                                                          ;
lda      ($8B),y                       ; 0x116f $915F B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      $08                           ; 0x1171 $9161 C5 08                    ;;save calc'd attack strength to $08 ?
bmi      L916D                         ; 0x1173 $9163 30 08                    ;
inc      $09                           ; 0x1175 $9165 E6 09                    ;
cmp      $09                           ; 0x1177 $9167 C5 09                    ;
bpl      L916D                         ; 0x1179 $9169 10 02                    ;
sec                                    ; 0x117b $916B 38                       ;
rts                                    ; 0x117c $916C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L916D                                                                          ;
clc                                    ; 0x117d $916D 18                       ;
rts                                    ; 0x117e $916E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L916F                                                                          ;
lda      #$00                          ; 0x117f $916F A9 00                    ;;A = #$00 0000_0000
sec                                    ; 0x1181 $9171 38                       ;
sbc      $97                           ; 0x1182 $9172 E5 97                    ;
L9174                                                                          ;
clc                                    ; 0x1184 $9174 18                       ;
adc      $36                           ; 0x1185 $9175 65 36                    ;;player PosX, 0-14 (small meta-tile size)
ldy      #$01                          ; 0x1187 $9177 A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x1189 $9179 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      L916D                         ; 0x118b $917B D0 F0                    ;
lda      $37                           ; 0x118d $917D A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x118f $917F 18                       ;
adc      #$01                          ; 0x1190 $9180 69 01                    ;
sta      $09                           ; 0x1192 $9182 85 09                    ;
sec                                    ; 0x1194 $9184 38                       ;
sbc      $98                           ; 0x1195 $9185 E5 98                    ;
bpl      L918B                         ; 0x1197 $9187 10 02                    ;
lda      #$00                          ; 0x1199 $9189 A9 00                    ;;A = #$00 0000_0000
L918B                                                                          ;
sta      $08                           ; 0x119b $918B 85 08                    ;;save calc'd attack strength to $08 ?
ldy      #$02                          ; 0x119d $918D A0 02                    ;;Y = #$02 0000_0010
bne      L915F                         ; 0x119f $918F D0 CE                    ;
L9191                                                                          ;
lda      #$00                          ; 0x11a1 $9191 A9 00                    ;;A = #$00 0000_0000
sec                                    ; 0x11a3 $9193 38                       ;
sbc      $98                           ; 0x11a4 $9194 E5 98                    ;
jmp      L9144                         ; 0x11a6 $9196 4C 44 91                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9199                                                                          ;
lda      #$02                          ; 0x11a9 $9199 A9 02                    ;;A = #$02 0000_0010
bne      L9174                         ; 0x11ab $919B D0 D7                    ;
L919D                                                                          ;
lda      $36                           ; 0x11ad $919D A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x11af $919F 0A                       ;
asl                                    ; 0x11b0 $91A0 0A                       ;
asl                                    ; 0x11b1 $91A1 0A                       ;
clc                                    ; 0x11b2 $91A2 18                       ;
adc      #$08                          ; 0x11b3 $91A3 69 08                    ;
sta      $A8                           ; 0x11b5 $91A5 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0x11b7 $91A7 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x11b9 $91A9 0A                       ;
asl                                    ; 0x11ba $91AA 0A                       ;
asl                                    ; 0x11bb $91AB 0A                       ;
clc                                    ; 0x11bc $91AC 18                       ;
adc      #$0F                          ; 0x11bd $91AD 69 0F                    ;
sta      $A9                           ; 0x11bf $91AF 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
jsr      L91BF                         ; 0x11c1 $91B1 20 BF 91                 ;
ldy      #$16                          ; 0x11c4 $91B4 A0 16                    ;;Y = #$16 0001_0110
lda      ($0E),y                       ; 0x11c6 $91B6 B1 0E                    ;
and      #$3F                          ; 0x11c8 $91B8 29 3F                    ;;Keep Bits:0011_1111
sta      $40                           ; 0x11ca $91BA 85 40                    ;;player tile index(of background ppu tiles) at feet 
jmp      L927F                         ; 0x11cc $91BC 4C 7F 92                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L91BF                                                                          ;
lda      $83                           ; 0x11cf $91BF A5 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
beq      L91C9                         ; 0x11d1 $91C1 F0 06                    ;
lda      $3E                           ; 0x11d3 $91C3 A5 3E                    ;
eor      #$FF                          ; 0x11d5 $91C5 49 FF                    ;;Flip Bits:1111_1111
sta      $3E                           ; 0x11d7 $91C7 85 3E                    ;
L91C9                                                                          ;
lda      $3E                           ; 0x11d9 $91C9 A5 3E                    ;
and      #$04                          ; 0x11db $91CB 29 04                    ;;Keep Bits:0000_0100
clc                                    ; 0x11dd $91CD 18                       ;
adc      $3F                           ; 0x11de $91CE 65 3F                    ;
asl                                    ; 0x11e0 $91D0 0A                       ;
asl                                    ; 0x11e1 $91D1 0A                       ;
asl                                    ; 0x11e2 $91D2 0A                       ;
sta      $AB                           ; 0x11e3 $91D3 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
L91D5                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x11e5 $91D5 20 72 96;
ldx      $A7                           ; 0x11e8 $91D8 A6 A7                    ;
ldy      $AB                           ; 0x11ea $91DA A4 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      $A9                           ; 0x11ec $91DC A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x11ee $91DE 9D 00 02                 ;
inx                                    ; 0x11f1 $91E1 E8                       ;
lda      L9819,y                       ; 0x11f2 $91E2 B9 19 98                 ;
iny                                    ; 0x11f5 $91E5 C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x11f6 $91E6 9D 00 02                 ;
inx                                    ; 0x11f9 $91E9 E8                       ;
lda      L9819,y                       ; 0x11fa $91EA B9 19 98                 ;
iny                                    ; 0x11fd $91ED C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x11fe $91EE 9D 00 02                 ;
inx                                    ; 0x1201 $91F1 E8                       ;
lda      $A8                           ; 0x1202 $91F2 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x1204 $91F4 9D 00 02                 ;
inx                                    ; 0x1207 $91F7 E8                       ;
lda      $A9                           ; 0x1208 $91F8 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x120a $91FA 9D 00 02                 ;
inx                                    ; 0x120d $91FD E8                       ;
lda      L9819,y                       ; 0x120e $91FE B9 19 98                 ;
iny                                    ; 0x1211 $9201 C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x1212 $9202 9D 00 02                 ;
inx                                    ; 0x1215 $9205 E8                       ;
lda      L9819,y                       ; 0x1216 $9206 B9 19 98                 ;
iny                                    ; 0x1219 $9209 C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x121a $920A 9D 00 02                 ;
inx                                    ; 0x121d $920D E8                       ;
lda      $A8                           ; 0x121e $920E A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x1220 $9210 18                       ;
adc      #$08                          ; 0x1221 $9211 69 08                    ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x1223 $9213 9D 00 02                 ;
inx                                    ; 0x1226 $9216 E8                       ;
sty      $AB                           ; 0x1227 $9217 84 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      $A9                           ; 0x1229 $9219 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x122b $921B 18                       ;
adc      #$08                          ; 0x122c $921C 69 08                    ;
sta      $A9                           ; 0x122e $921E 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
ldy      #$16                          ; 0x1230 $9220 A0 16                    ;;Y = #$16 0001_0110
lda      ($0E),y                       ; 0x1232 $9222 B1 0E                    ;
and      #$3F                          ; 0x1234 $9224 29 3F                    ;;Keep Bits:0011_1111
cmp      #$01                          ; 0x1236 $9226 C9 01                    ;
beq      L924B                         ; 0x1238 $9228 F0 21                    ;
cmp      #$03                          ; 0x123a $922A C9 03                    ;
beq      L924B                         ; 0x123c $922C F0 1D                    ;
ldy      $AB                           ; 0x123e $922E A4 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      $A9                           ; 0x1240 $9230 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x1242 $9232 9D 00 02                 ;
inx                                    ; 0x1245 $9235 E8                       ;
lda      L9819,y                       ; 0x1246 $9236 B9 19 98                 ;
iny                                    ; 0x1249 $9239 C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x124a $923A 9D 00 02                 ;
inx                                    ; 0x124d $923D E8                       ;
lda      L9819,y                       ; 0x124e $923E B9 19 98                 ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x1251 $9241 9D 00 02                 ;
inx                                    ; 0x1254 $9244 E8                       ;
lda      $A8                           ; 0x1255 $9245 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x1257 $9247 9D 00 02                 ;
inx                                    ; 0x125a $924A E8                       ;
L924B                                                                          ;
ldy      #$17                          ; 0x125b $924B A0 17                    ;;Y = #$17 0001_0111
lda      ($0E),y                       ; 0x125d $924D B1 0E                    ;
and      #$3F                          ; 0x125f $924F 29 3F                    ;;Keep Bits:0011_1111
cmp      #$01                          ; 0x1261 $9251 C9 01                    ;
beq      L927C                         ; 0x1263 $9253 F0 27                    ;
cmp      #$03                          ; 0x1265 $9255 C9 03                    ;
beq      L927C                         ; 0x1267 $9257 F0 23                    ;
ldy      $AB                           ; 0x1269 $9259 A4 AB                    ;;Sprite Data 4 Bytes: tile index ??
iny                                    ; 0x126b $925B C8                       ;
iny                                    ; 0x126c $925C C8                       ;
lda      $A9                           ; 0x126d $925D A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x126f $925F 9D 00 02                 ;
inx                                    ; 0x1272 $9262 E8                       ;
lda      L9819,y                       ; 0x1273 $9263 B9 19 98                 ;
iny                                    ; 0x1276 $9266 C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x1277 $9267 9D 00 02                 ;
inx                                    ; 0x127a $926A E8                       ;
lda      L9819,y                       ; 0x127b $926B B9 19 98                 ;
iny                                    ; 0x127e $926E C8                       ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x127f $926F 9D 00 02                 ;
inx                                    ; 0x1282 $9272 E8                       ;
lda      $A8                           ; 0x1283 $9273 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x1285 $9275 18                       ;
adc      #$08                          ; 0x1286 $9276 69 08                    ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x1288 $9278 9D 00 02                 ;
inx                                    ; 0x128b $927B E8                       ;
L927C                                                                          ;
stx      $A7                           ; 0x128c $927C 86 A7                    ;
rts                                    ; 0x128e $927E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L927F                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x128f $927F 20 72 96;
ldy      #$00                          ; 0x1292 $9282 A0 00                    ;;Y = #$00 0000_0000
jsr      L9289                         ; 0x1294 $9284 20 89 92                 ;
ldy      #$16                          ; 0x1297 $9287 A0 16                    ;;Y = #$16 0001_0110
L9289                                                                          ;
lda      ($0E),y                       ; 0x1299 $9289 B1 0E                    ;
ora      #$80                          ; 0x129b $928B 09 80                    ;;Set Bits:1000_0000
sta      ($0E),y                       ; 0x129d $928D 91 0E                    ;
iny                                    ; 0x129f $928F C8                       ;
lda      ($0E),y                       ; 0x12a0 $9290 B1 0E                    ;
ora      #$80                          ; 0x12a2 $9292 09 80                    ;;Set Bits:1000_0000
sta      ($0E),y                       ; 0x12a4 $9294 91 0E                    ;
rts                                    ; 0x12a6 $9296 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9297                                                                          ;
jsr      Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F; 0x12a7 $9297 20 72 96;
ldy      #$00                          ; 0x12aa $929A A0 00                    ;;Y = #$00 0000_0000
jsr      L92A1                         ; 0x12ac $929C 20 A1 92                 ;
ldy      #$16                          ; 0x12af $929F A0 16                    ;;Y = #$16 0001_0110
L92A1                                                                          ;
lda      ($0E),y                       ; 0x12b1 $92A1 B1 0E                    ;
and      #$7F                          ; 0x12b3 $92A3 29 7F                    ;;Keep Bits:0111_1111
sta      ($0E),y                       ; 0x12b5 $92A5 91 0E                    ;
iny                                    ; 0x12b7 $92A7 C8                       ;
lda      ($0E),y                       ; 0x12b8 $92A8 B1 0E                    ;
and      #$7F                          ; 0x12ba $92AA 29 7F                    ;;Keep Bits:0111_1111
sta      ($0E),y                       ; 0x12bc $92AC 91 0E                    ;
rts                                    ; 0x12be $92AE 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L92AF                                                                          ;
sta      $7B                           ; 0x12bf $92AF 85 7B                    ;;0E=ruby got???
dec      $7B                           ; 0x12c1 $92B1 C6 7B                    ;;0E=ruby got???
jsr      L96E4                         ; 0x12c3 $92B3 20 E4 96                 ;
ldx      #$1A                          ; 0x12c6 $92B6 A2 1A                    ;;X = #$1a 0001_1010
ldy      #$13                          ; 0x12c8 $92B8 A0 13                    ;;Y = #$13 0001_0011
jsr      L9604                         ; 0x12ca $92BA 20 04 96                 ;
jsr      L965A                         ; 0x12cd $92BD 20 5A 96                 ;
lda      $7B                           ; 0x12d0 $92C0 A5 7B                    ;;0E=ruby got???
and      #$7F                          ; 0x12d2 $92C2 29 7F                    ;;Keep Bits:0111_1111
asl                                    ; 0x12d4 $92C4 0A                       ;
asl                                    ; 0x12d5 $92C5 0A                       ;
adc      #$95                          ; 0x12d6 $92C6 69 95                    ;
tax                                    ; 0x12d8 $92C8 AA                       ;
stx      $2007                         ; 0x12d9 $92C9 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x12dc $92CC E8                       ;
stx      $2007                         ; 0x12dd $92CD 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x12e0 $92D0 E8                       ;
lda      L0000                         ; 0x12e1 $92D1 A5 00                    ;
clc                                    ; 0x12e3 $92D3 18                       ;
adc      #$20                          ; 0x12e4 $92D4 69 20                    ;
sta      L0000                         ; 0x12e6 $92D6 85 00                    ;
lda      $01                           ; 0x12e8 $92D8 A5 01                    ;
adc      #$00                          ; 0x12ea $92DA 69 00                    ;
sta      $01                           ; 0x12ec $92DC 85 01                    ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x12ee $92DE 20 5D 96  ;
stx      $2007                         ; 0x12f1 $92E1 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x12f4 $92E4 E8                       ;
stx      $2007                         ; 0x12f5 $92E5 8E 07 20                 ;;Data ($2007) <> read/write
L92E8                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x12f8 $92E8 20 34 95 ;
lda      $7B                           ; 0x12fb $92EB A5 7B                    ;;0E=ruby got???
and      #$7F                          ; 0x12fd $92ED 29 7F                    ;;Keep Bits:0111_1111
sta      $08                           ; 0x12ff $92EF 85 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x1301 $92F1 0A                       ;
asl                                    ; 0x1302 $92F2 0A                       ;
asl                                    ; 0x1303 $92F3 0A                       ;
sec                                    ; 0x1304 $92F4 38                       ;
sbc      $08                           ; 0x1305 $92F5 E5 08                    ;;save calc'd attack strength to $08 ?
clc                                    ; 0x1307 $92F7 18                       ;
adc      #$61                          ; 0x1308 $92F8 69 61                    ;
sta      $0C                           ; 0x130a $92FA 85 0C                    ;
lda      #$00                          ; 0x130c $92FC A9 00                    ;;A = #$00 0000_0000
adc      #$98                          ; 0x130e $92FE 69 98                    ;
sta      $0D                           ; 0x1310 $9300 85 0D                    ;
ldx      #$19                          ; 0x1312 $9302 A2 19                    ;;X = #$19 0001_1001
stx      $9E                           ; 0x1314 $9304 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$16                          ; 0x1316 $9306 A0 16                    ;;Y = #$16 0001_0110
sty      $9F                           ; 0x1318 $9308 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$07                          ; 0x131a $930A A9 07                    ;;A = #$07 0000_0111
sta      $A0                           ; 0x131c $930C 85 A0                    ;
jsr      L9639                         ; 0x131e $930E 20 39 96                 ;
L9311                                                                          ;
lda      #$06                          ; 0x1321 $9311 A9 06                    ;;A = #$06 0000_0110
jsr      LE271                         ; 0x1323 $9313 20 71 E2                 ;
ldx      #$02                          ; 0x1326 $9316 A2 02                    ;;X = #$02 0000_0010
stx      $9E                           ; 0x1328 $9318 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$1B                          ; 0x132a $931A A0 1B                    ;;Y = #$1b 0001_1011
sty      $9F                           ; 0x132c $931C 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$17                          ; 0x132e $931E A9 17                    ;;A = #$17 0001_0111
sta      $A0                           ; 0x1330 $9320 85 A0                    ;
lda      #$08                          ; 0x1332 $9322 A9 08                    ;;A = #$08 0000_1000
sta      $04                           ; 0x1334 $9324 85 04                    ;
L9326                                                                          ;
lda      $7B                           ; 0x1336 $9326 A5 7B                    ;;0E=ruby got???
bpl      L932C                         ; 0x1338 $9328 10 02                    ;
lda      #$0D                          ; 0x133a $932A A9 0D                    ;;A = #$0d 0000_1101
L932C                                                                          ;
sta      $08                           ; 0x133c $932C 85 08                    ;;save calc'd attack strength to $08 ?
lda      #$98                          ; 0x133e $932E A9 98                    ;;A = #$98 1001_1000
sta      $0D                           ; 0x1340 $9330 85 0D                    ;
lda      #$BC                          ; 0x1342 $9332 A9 BC                    ;;A = #$bc 1011_1100
sta      $0C                           ; 0x1344 $9334 85 0C                    ;
lda      $08                           ; 0x1346 $9336 A5 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x1348 $9338 0A                       ;
asl                                    ; 0x1349 $9339 0A                       ;
asl                                    ; 0x134a $933A 0A                       ;
asl                                    ; 0x134b $933B 0A                       ;
clc                                    ; 0x134c $933C 18                       ;
adc      $0C                           ; 0x134d $933D 65 0C                    ;
sta      $0C                           ; 0x134f $933F 85 0C                    ;
lda      $0D                           ; 0x1351 $9341 A5 0D                    ;
adc      #$00                          ; 0x1353 $9343 69 00                    ;
sta      $0D                           ; 0x1355 $9345 85 0D                    ;
lda      $08                           ; 0x1357 $9347 A5 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x1359 $9349 0A                       ;
asl                                    ; 0x135a $934A 0A                       ;
asl                                    ; 0x135b $934B 0A                       ;
sec                                    ; 0x135c $934C 38                       ;
sbc      $08                           ; 0x135d $934D E5 08                    ;;save calc'd attack strength to $08 ?
clc                                    ; 0x135f $934F 18                       ;
adc      $0C                           ; 0x1360 $9350 65 0C                    ;
sta      $0C                           ; 0x1362 $9352 85 0C                    ;
lda      $0D                           ; 0x1364 $9354 A5 0D                    ;
adc      #$00                          ; 0x1366 $9356 69 00                    ;
sta      $0D                           ; 0x1368 $9358 85 0D                    ;
jsr      L9636                         ; 0x136a $935A 20 36 96                 ;
ldx      #$08                          ; 0x136d $935D A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x136f $935F 20 74 95               ;
dec      $04                           ; 0x1372 $9362 C6 04                    ;
beq      L9379                         ; 0x1374 $9364 F0 13                    ;
lda      #$9A                          ; 0x1376 $9366 A9 9A                    ;;A = #$9a 1001_1010
sta      $0D                           ; 0x1378 $9368 85 0D                    ;
lda      #$21                          ; 0x137a $936A A9 21                    ;;A = #$21 0010_0001
sta      $0C                           ; 0x137c $936C 85 0C                    ;
jsr      L9636                         ; 0x137e $936E 20 36 96                 ;
ldx      #$06                          ; 0x1381 $9371 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x1383 $9373 20 74 95               ;
jmp      L9326                         ; 0x1386 $9376 4C 26 93                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9379                                                                          ;
rts                                    ; 0x1389 $9379 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GetItem_Or_GetFairy_Maybe                                                      ;
tax                                    ; 0x138a $937A AA                       ;
dex                                    ; 0x138b $937B CA                       ;
clc                                    ; 0x138c $937C 18                       ;
adc      #$09                          ; 0x138d $937D 69 09                    ;
sta      $7B                           ; 0x138f $937F 85 7B                    ;;0E=ruby got???
lda      L9816,x                       ; 0x1391 $9381 BD 16 98                 ;
sta      $AA                           ; 0x1394 $9384 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
jsr      L96E4                         ; 0x1396 $9386 20 E4 96                 ;
lda      #$97                          ; 0x1399 $9389 A9 97                    ;;A = #$97 1001_0111
sta      $A9                           ; 0x139b $938B 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$C8                          ; 0x139d $938D A9 C8                    ;;A = #$c8 1100_1000
sta      $A8                           ; 0x139f $938F 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      #$DF                          ; 0x13a1 $9391 A9 DF                    ;;A = #$df 1101_1111
sta      $AB                           ; 0x13a3 $9393 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldx      #$D0                          ; 0x13a5 $9395 A2 D0                    ;;X = #$d0 1101_0000
jsr      DrawSprite__useVariables_A8_to_AB__200indexWithX; 0x13a7 $9397 20 A6 94;
jsr      L92E8                         ; 0x13aa $939A 20 E8 92                 ;
lda      $64                           ; 0x13ad $939D A5 64                    ;;FF=got fairy 1 (appears in ITEM)
and      $65                           ; 0x13af $939F 25 65                    ;;FF=got fairy 2 (appears in ITEM)
and      $66                           ; 0x13b1 $93A1 25 66                    ;;FF=got fairy 3 (appears in ITEM)
sta      $67                           ; 0x13b3 $93A3 85 67                    ;;all fairys got
bne      AllThreeFairysGot__FlyIntoTheSky; 0x13b5 $93A5 D0 01                  ;
rts                                    ; 0x13b7 $93A7 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
AllThreeFairysGot__FlyIntoTheSky                                               ;
;convert player meta pos XY to sprite screen position??? or something          ;
lda      $36                           ; 0x13b8 $93A8 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x13ba $93AA 0A                       ;
asl                                    ; 0x13bb $93AB 0A                       ;
asl                                    ; 0x13bc $93AC 0A                       ;
adc      #$08                          ; 0x13bd $93AD 69 08                    ;
sta      $36                           ; 0x13bf $93AF 85 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      $37                           ; 0x13c1 $93B1 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x13c3 $93B3 0A                       ;
asl                                    ; 0x13c4 $93B4 0A                       ;
asl                                    ; 0x13c5 $93B5 0A                       ;
adc      #$0F                          ; 0x13c6 $93B6 69 0F                    ;
sta      $37                           ; 0x13c8 $93B8 85 37                    ;;player PosY, 0-14 (small meta-tile size)
;reset $3E pointer?? to #$00                                                   ;
;also reset $83, the controller presses variable?                              ;
lda      #$00                          ; 0x13ca $93BA A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x13cc $93BC 85 3F                    ;
sta      $3E                           ; 0x13ce $93BE 85 3E                    ;
sta      $83                           ; 0x13d0 $93C0 85 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
;something, possibly prepare sprites data??                                    ;
ldx      #$20                          ; 0x13d2 $93C2 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x13d4 $93C4 20 74 95               ;
jsr      ClearAll200__set200toF0__setA7to00; 0x13d7 $93C7 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x13da $93CA 20 34 95 ;
;do palette change now                                                         ;
lda      #$0D                          ; 0x13dd $93CD A9 0D                    ;;A = #$0d 0000_1101
jsr      DF11_load_palette_and_implement__index_with_A; 0x13df $93CF 20 11 DF  ;
;something                                                                     ;
lda      #$00                          ; 0x13e2 $93D2 A9 00                    ;;A = #$00 0000_0000
sta      $04                           ; 0x13e4 $93D4 85 04                    ;
L93D6                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x13e6 $93D6 20 7D 96             ;
jsr      LB4DD                         ; 0x13e9 $93D9 20 DD B4                 ;
;convert our converted player meta pos XY to ...something                      ;
;maybe the fairys sprite positions                                             ;
;then maybe setup sprite?                                                      ;
lda      $36                           ; 0x13ec $93DC A5 36                    ;;player PosX, 0-14 (small meta-tile size)
tax                                    ; 0x13ee $93DE AA                       ;
lda      $37                           ; 0x13ef $93DF A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0x13f1 $93E1 38                       ;
sbc      #$10                          ; 0x13f2 $93E2 E9 10                    ;
tay                                    ; 0x13f4 $93E4 A8                       ;
lda      #$01                          ; 0x13f5 $93E5 A9 01                    ;;A = #$01 0000_0001
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x13f7 $93E7 20 F7 AB;
;                                                                              ;
lda      $36                           ; 0x13fa $93EA A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sec                                    ; 0x13fc $93EC 38                       ;
sbc      #$10                          ; 0x13fd $93ED E9 10                    ;
tax                                    ; 0x13ff $93EF AA                       ;
lda      $37                           ; 0x1400 $93F0 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x1402 $93F2 18                       ;
adc      #$08                          ; 0x1403 $93F3 69 08                    ;
tay                                    ; 0x1405 $93F5 A8                       ;
lda      #$03                          ; 0x1406 $93F6 A9 03                    ;;A = #$03 0000_0011
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x1408 $93F8 20 F7 AB;
;                                                                              ;
lda      $36                           ; 0x140b $93FB A5 36                    ;;player PosX, 0-14 (small meta-tile size)
clc                                    ; 0x140d $93FD 18                       ;
adc      #$10                          ; 0x140e $93FE 69 10                    ;
tax                                    ; 0x1410 $9400 AA                       ;
lda      $37                           ; 0x1411 $9401 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x1413 $9403 18                       ;
adc      #$08                          ; 0x1414 $9404 69 08                    ;
tay                                    ; 0x1416 $9406 A8                       ;
lda      #$02                          ; 0x1417 $9407 A9 02                    ;;A = #$02 0000_0010
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x1419 $9409 20 F7 AB;
;something                                                                     ;
ldx      #$06                          ; 0x141c $940C A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x141e $940E 20 74 95               ;
jsr      LA82E                         ; 0x1421 $9411 20 2E A8                 ;
dec      $04                           ; 0x1424 $9414 C6 04                    ;
dec      $37                           ; 0x1426 $9416 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
dec      $37                           ; 0x1428 $9418 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
lda      $37                           ; 0x142a $941A A5 37                    ;;player PosY, 0-14 (small meta-tile size)
cmp      #$FF                          ; 0x142c $941C C9 FF                    ;
bne      L93D6                         ; 0x142e $941E D0 B6                    ;
lda      #$11                          ; 0x1430 $9420 A9 11                    ;;A = #$11 0001_0001
sta      $47                           ; 0x1432 $9422 85 47                    ;;player CurrentArea       
lda      #$02                          ; 0x1434 $9424 A9 02                    ;;A = #$02 0000_0010
sta      $48                           ; 0x1436 $9426 85 48                    ;;player Screen X (0 to 4)
lda      #$03                          ; 0x1438 $9428 A9 03                    ;;A = #$03 0000_0011
sta      $49                           ; 0x143a $942A 85 49                    ;;player Screen Y (0 to 4)
lda      #$FF                          ; 0x143c $942C A9 FF                    ;;A = #$ff 1111_1111
sta      $4A                           ; 0x143e $942E 85 4A                    ;
jsr      LoadScreenCurrent_LoadAndDraw__Sprites__Something; 0x1440 $9430 20 BB D4;
jsr      ClearAll200__set200toF0__setA7to00; 0x1443 $9433 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x1446 $9436 20 34 95 ;
lda      #$0D                          ; 0x1449 $9439 A9 0D                    ;;A = #$0d 0000_1101
jsr      DF11_load_palette_and_implement__index_with_A; 0x144b $943B 20 11 DF  ;
ldx      #$50                          ; 0x144e $943E A2 50                    ;;X = #$50 0101_0000
stx      $36                           ; 0x1450 $9440 86 36                    ;;player PosX, 0-14 (small meta-tile size)
ldy      #$E7                          ; 0x1452 $9442 A0 E7                    ;;Y = #$e7 1110_0111
sty      $37                           ; 0x1454 $9444 84 37                    ;;player PosY, 0-14 (small meta-tile size)
L9446                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x1456 $9446 20 7D 96             ;
jsr      LB4DD                         ; 0x1459 $9449 20 DD B4                 ;
lda      $36                           ; 0x145c $944C A5 36                    ;;player PosX, 0-14 (small meta-tile size)
tax                                    ; 0x145e $944E AA                       ;
lda      $37                           ; 0x145f $944F A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0x1461 $9451 38                       ;
sbc      #$10                          ; 0x1462 $9452 E9 10                    ;
tay                                    ; 0x1464 $9454 A8                       ;
lda      #$01                          ; 0x1465 $9455 A9 01                    ;;A = #$01 0000_0001
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x1467 $9457 20 F7 AB;
lda      $36                           ; 0x146a $945A A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sec                                    ; 0x146c $945C 38                       ;
sbc      #$10                          ; 0x146d $945D E9 10                    ;
tax                                    ; 0x146f $945F AA                       ;
lda      $37                           ; 0x1470 $9460 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x1472 $9462 18                       ;
adc      #$08                          ; 0x1473 $9463 69 08                    ;
tay                                    ; 0x1475 $9465 A8                       ;
lda      #$03                          ; 0x1476 $9466 A9 03                    ;;A = #$03 0000_0011
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x1478 $9468 20 F7 AB;
lda      $36                           ; 0x147b $946B A5 36                    ;;player PosX, 0-14 (small meta-tile size)
clc                                    ; 0x147d $946D 18                       ;
adc      #$10                          ; 0x147e $946E 69 10                    ;
tax                                    ; 0x1480 $9470 AA                       ;
lda      $37                           ; 0x1481 $9471 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x1483 $9473 18                       ;
adc      #$08                          ; 0x1484 $9474 69 08                    ;
tay                                    ; 0x1486 $9476 A8                       ;
lda      #$02                          ; 0x1487 $9477 A9 02                    ;;A = #$02 0000_0010
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x1489 $9479 20 F7 AB;
ldx      #$06                          ; 0x148c $947C A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x148e $947E 20 74 95               ;
jsr      LA82E                         ; 0x1491 $9481 20 2E A8                 ;
dec      $04                           ; 0x1494 $9484 C6 04                    ;
dec      $37                           ; 0x1496 $9486 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
dec      $37                           ; 0x1498 $9488 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
lda      $37                           ; 0x149a $948A A5 37                    ;;player PosY, 0-14 (small meta-tile size)
cmp      #$5F                          ; 0x149c $948C C9 5F                    ;
bne      L9446                         ; 0x149e $948E D0 B6                    ;
ldx      #$09                          ; 0x14a0 $9490 A2 09                    ;;X = #$09 0000_1001
stx      $36                           ; 0x14a2 $9492 86 36                    ;;player PosX, 0-14 (small meta-tile size)
ldy      #$0A                          ; 0x14a4 $9494 A0 0A                    ;;Y = #$0a 0000_1010
sty      $37                           ; 0x14a6 $9496 84 37                    ;;player PosY, 0-14 (small meta-tile size)
jsr      ClearAll200__set200toF0__setA7to00; 0x14a8 $9498 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x14ab $949B 20 34 95 ;
lda      #$01                          ; 0x14ae $949E A9 01                    ;;A = #$01 0000_0001
jsr      DF11_load_palette_and_implement__index_with_A; 0x14b0 $94A0 20 11 DF  ;
jmp      L86B4                         ; 0x14b3 $94A3 4C B4 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
DrawSprite__useVariables_A8_to_AB__200indexWithX                               ;
lda      $A9                           ; 0x14b6 $94A6 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x14b8 $94A8 9D 00 02                 ;
inx                                    ; 0x14bb $94AB E8                       ;
lda      $AB                           ; 0x14bc $94AC A5 AB                    ;;Sprite Data 4 Bytes: tile index ??
inc      $AB                           ; 0x14be $94AE E6 AB                    ;;Sprite Data 4 Bytes: tile index ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x14c0 $94B0 9D 00 02                 ;
inx                                    ; 0x14c3 $94B3 E8                       ;
lda      $AA                           ; 0x14c4 $94B4 A5 AA                    ;;Sprite Data 4 Bytes: Attributes ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x14c6 $94B6 9D 00 02                 ;
inx                                    ; 0x14c9 $94B9 E8                       ;
lda      $A8                           ; 0x14ca $94BA A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x14cc $94BC 9D 00 02                 ;
inx                                    ; 0x14cf $94BF E8                       ;
lda      $A9                           ; 0x14d0 $94C0 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x14d2 $94C2 9D 00 02                 ;
inx                                    ; 0x14d5 $94C5 E8                       ;
lda      $AB                           ; 0x14d6 $94C6 A5 AB                    ;;Sprite Data 4 Bytes: tile index ??
inc      $AB                           ; 0x14d8 $94C8 E6 AB                    ;;Sprite Data 4 Bytes: tile index ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x14da $94CA 9D 00 02                 ;
inx                                    ; 0x14dd $94CD E8                       ;
lda      $AA                           ; 0x14de $94CE A5 AA                    ;;Sprite Data 4 Bytes: Attributes ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x14e0 $94D0 9D 00 02                 ;
inx                                    ; 0x14e3 $94D3 E8                       ;
lda      $A8                           ; 0x14e4 $94D4 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x14e6 $94D6 18                       ;
adc      #$08                          ; 0x14e7 $94D7 69 08                    ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x14e9 $94D9 9D 00 02                 ;
inx                                    ; 0x14ec $94DC E8                       ;
lda      $A9                           ; 0x14ed $94DD A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x14ef $94DF 18                       ;
adc      #$08                          ; 0x14f0 $94E0 69 08                    ;
sta      $A9                           ; 0x14f2 $94E2 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x14f4 $94E4 9D 00 02                 ;
inx                                    ; 0x14f7 $94E7 E8                       ;
lda      $AB                           ; 0x14f8 $94E8 A5 AB                    ;;Sprite Data 4 Bytes: tile index ??
inc      $AB                           ; 0x14fa $94EA E6 AB                    ;;Sprite Data 4 Bytes: tile index ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x14fc $94EC 9D 00 02                 ;
inx                                    ; 0x14ff $94EF E8                       ;
lda      $AA                           ; 0x1500 $94F0 A5 AA                    ;;Sprite Data 4 Bytes: Attributes ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x1502 $94F2 9D 00 02                 ;
inx                                    ; 0x1505 $94F5 E8                       ;
lda      $A8                           ; 0x1506 $94F6 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x1508 $94F8 9D 00 02                 ;
inx                                    ; 0x150b $94FB E8                       ;
lda      $A9                           ; 0x150c $94FC A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;1 - Y Position - vertical position of the sprite on screen. $00 is the top of the screen. Anything above $EF is off the bottom of the screen. ;
sta      $0200,x                       ; 0x150e $94FE 9D 00 02                 ;
inx                                    ; 0x1511 $9501 E8                       ;
lda      $AB                           ; 0x1512 $9502 A5 AB                    ;;Sprite Data 4 Bytes: tile index ??
inc      $AB                           ; 0x1514 $9504 E6 AB                    ;;Sprite Data 4 Bytes: tile index ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;2 - Tile Number - this is the tile number (0 to 256) for the graphic to be taken from a Pattern Table. ;
sta      $0200,x                       ; 0x1516 $9506 9D 00 02                 ;
inx                                    ; 0x1519 $9509 E8                       ;
lda      $AA                           ; 0x151a $950A A5 AA                    ;;Sprite Data 4 Bytes: Attributes ??
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;3 - Attributes - this byte holds color and displaying information:            ;
;                                                                              ;
;  76543210                                                                    ;
;  |||   ||                                                                    ;
;  |||   ++- Color Palette of sprite.  Choose which set of 4 from the 16 colors to use;
;  |||                                                                         ;
;  ||+------ Priority (0: in front of background                               ; 1: behind background)
;  |+------- Flip sprite horizontally                                          ;
;  +-------- Flip sprite vertically                                            ;
sta      $0200,x                       ; 0x151c $950C 9D 00 02                 ;
inx                                    ; 0x151f $950F E8                       ;
lda      $A8                           ; 0x1520 $9510 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x1522 $9512 18                       ;
adc      #$08                          ; 0x1523 $9513 69 08                    ;
;SpriteData4Bytes  	(sta      $0200,x)                                         ;
;4 - X Position - horizontal position on the screen. $00 is the left side, anything above $F9 is off screen. ;
sta      $0200,x                       ; 0x1525 $9515 9D 00 02                 ;
inx                                    ; 0x1528 $9518 E8                       ;
rts                                    ; 0x1529 $9519 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L951A                                                                          ;
lda      $25                           ; 0x152a $951A A5 25                    ;
beq      L9521                         ; 0x152c $951C F0 03                    ;
jsr      Music_related__during_screen_transitions; 0x152e $951E 20 C2 E1       ;
L9521                                                                          ;
lda      $26                           ; 0x1531 $9521 A5 26                    ;
beq      L952B                         ; 0x1533 $9523 F0 06                    ;
lda      #$00                          ; 0x1535 $9525 A9 00                    ;;A = #$00 0000_0000
sta      $26                           ; 0x1537 $9527 85 26                    ;
beq      L951A                         ; 0x1539 $9529 F0 EF                    ;
L952B                                                                          ;
lda      $26                           ; 0x153b $952B A5 26                    ;
beq      L952B                         ; 0x153d $952D F0 FC                    ;
lda      #$00                          ; 0x153f $952F A9 00                    ;;A = #$00 0000_0000
sta      $26                           ; 0x1541 $9531 85 26                    ;
rts                                    ; 0x1543 $9533 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data                                 ;
inc      $86                           ; 0x1544 $9534 E6 86                    ;;COUNTER (1 bit boolean counter) for changing sprite priority
lda      $86                           ; 0x1546 $9536 A5 86                    ;;COUNTER (1 bit boolean counter) for changing sprite priority
and      #$01                          ; 0x1548 $9538 29 01                    ;;Keep Bits:0000_0001
beq      OAM_DMA_WRITE__draw_sprites__flip_all_sprite_order_then_draw; 0x154a $953A F0 09;
jsr      L951A                         ; 0x154c $953C 20 1A 95                 ;every other frame JSR $951A ?
lda      #$02                          ; 0x154f $953F A9 02                    ;;A = #$02 0000_0010
sta      $4014                         ; 0x1551 $9541 8D 14 40                 ;;OAM DMA ($4014) > write
;OAM DMA ($4014) > write                                                       ;
;    Common name: OAMDMA                                                       ;
;    Description: OAM DMA register (high byte)                                 ;
;    Access: write                                                             ;
;This port is located on the CPU. Writing $XX will upload 256 bytes of data from CPU page $XX00-$XXFF to the internal PPU OAM. This page is typically located in internal RAM, commonly $0200-$02FF, but cartridge RAM or ROM can be used as well.;
;    The CPU is suspended during the transfer, which will take 513 or 514 cycles after the $4014 write tick. (1 dummy read cycle while waiting for writes to complete, +1 if on an odd CPU cycle, then 256 alternating read/write cycles.);
;    The OAM DMA is the only effective method for initializing all 256 bytes of OAM. Because of the decay of OAM's dynamic RAM when rendering is disabled, the initialization should take place within vblank. Writes through OAMDATA are generally too slow for this task.;
;    The DMA transfer will begin at the current OAM write address. It is common practice to initialize it to 0 with a write to OAMADDR before the DMA transfer. Different starting addresses can be used for a simple OAM cycling technique, to alleviate sprite priority conflicts by flickering. If using this technique, after the DMA OAMADDR should be set to 0 before the end of vblank to prevent potential OAM corruption (See: Errata). However, due to OAMADDR writes also having a "corruption" effect[5] this technique is not recommended.;
rts                                    ; 0x1554 $9544 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
OAM_DMA_WRITE__draw_sprites__flip_all_sprite_order_then_draw                   ;
;copy current 4 byte  ppu sprite data from $200 to $300                        ;
;	flip the order                                                               ;
;this is needed for flashing effects (for example, when player is hurt and the red damage square flashes );
ldx      #$00                          ; 0x1555 $9545 A2 00                    ;;X = #$00 0000_0000
ldy      #$FC                          ; 0x1557 $9547 A0 FC                    ;;Y = #$fc 1111_1100
L9549                                                                          ;
lda      $0200,x                       ; 0x1559 $9549 BD 00 02                 ;
sta      $0300,y                       ; 0x155c $954C 99 00 03                 ;
lda      $0201,x                       ; 0x155f $954F BD 01 02                 ;
sta      $0301,y                       ; 0x1562 $9552 99 01 03                 ;
lda      $0202,x                       ; 0x1565 $9555 BD 02 02                 ;
sta      $0302,y                       ; 0x1568 $9558 99 02 03                 ;
lda      $0203,x                       ; 0x156b $955B BD 03 02                 ;
sta      $0303,y                       ; 0x156e $955E 99 03 03                 ;
dey                                    ; 0x1571 $9561 88                       ;
dey                                    ; 0x1572 $9562 88                       ;
dey                                    ; 0x1573 $9563 88                       ;
dey                                    ; 0x1574 $9564 88                       ;
inx                                    ; 0x1575 $9565 E8                       ;
inx                                    ; 0x1576 $9566 E8                       ;
inx                                    ; 0x1577 $9567 E8                       ;
inx                                    ; 0x1578 $9568 E8                       ;
bne      L9549                         ; 0x1579 $9569 D0 DE                    ;
jsr      L951A                         ; 0x157b $956B 20 1A 95                 ;
lda      #$03                          ; 0x157e $956E A9 03                    ;;A = #$03 0000_0011
sta      $4014                         ; 0x1580 $9570 8D 14 40                 ;;OAM DMA ($4014) > write
;OAM DMA ($4014) > write                                                       ;
;    Common name: OAMDMA                                                       ;
;    Description: OAM DMA register (high byte)                                 ;
;    Access: write                                                             ;
;This port is located on the CPU. Writing $XX will upload 256 bytes of data from CPU page $XX00-$XXFF to the internal PPU OAM. This page is typically located in internal RAM, commonly $0200-$02FF, but cartridge RAM or ROM can be used as well.;
;    The CPU is suspended during the transfer, which will take 513 or 514 cycles after the $4014 write tick. (1 dummy read cycle while waiting for writes to complete, +1 if on an odd CPU cycle, then 256 alternating read/write cycles.);
;    The OAM DMA is the only effective method for initializing all 256 bytes of OAM. Because of the decay of OAM's dynamic RAM when rendering is disabled, the initialization should take place within vblank. Writes through OAMDATA are generally too slow for this task.;
;    The DMA transfer will begin at the current OAM write address. It is common practice to initialize it to 0 with a write to OAMADDR before the DMA transfer. Different starting addresses can be used for a simple OAM cycling technique, to alleviate sprite priority conflicts by flickering. If using this technique, after the DMA OAMADDR should be set to 0 before the end of vblank to prevent potential OAM corruption (See: Errata). However, due to OAMADDR writes also having a "corruption" effect[5] this technique is not recommended.;
rts                                    ; 0x1583 $9573 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameSpeed__TimerDelay__MenuDelay                                               ;
;rts here and game speed is faster , FPS is 60 instead of 30, menus are too fast to use;
stx      $99                           ; 0x1584 $9574 86 99                    ;;COUNTER:intro animation delays,display text flashing delay("you get..."), sound effect??
L9576                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x1586 $9576 20 34 95 ;
dec      $99                           ; 0x1589 $9579 C6 99                    ;;COUNTER:intro animation delays,display text flashing delay("you get..."), sound effect??
bne      L9576                         ; 0x158b $957B D0 F9                    ;
rts                                    ; 0x158d $957D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Controller_ReadAndSaveTo_B4_to_BB                                              ;
lda      #$01                          ; 0x158e $957E A9 01                    ;;A = #$01 0000_0001
sta      $4016                         ; 0x1590 $9580 8D 16 40                 ;;controllers register (write 01 , 00, then read buttons bits)
lda      #$00                          ; 0x1593 $9583 A9 00                    ;;A = #$00 0000_0000
sta      $4016                         ; 0x1595 $9585 8D 16 40                 ;;controllers register (write 01 , 00, then read buttons bits)
ldx      #$00                          ; 0x1598 $9588 A2 00                    ;;X = #$00 0000_0000
L958A                                                                          ;
lda      $4016                         ; 0x159a $958A AD 16 40                 ;;controllers register (write 01 , 00, then read buttons bits)
sta      $9D                           ; 0x159d $958D 85 9D                    ;
lsr                                    ; 0x159f $958F 4A                       ;
ora      $9D                           ; 0x15a0 $9590 05 9D                    ;
ldy      #$00                          ; 0x15a2 $9592 A0 00                    ;;Y = #$00 0000_0000
lsr                                    ; 0x15a4 $9594 4A                       ;
bcc      L9598                         ; 0x15a5 $9595 90 01                    ;
dey                                    ; 0x15a7 $9597 88                       ;
L9598                                                                          ;
tya                                    ; 0x15a8 $9598 98                       ;
sta      $B4,x                         ; 0x15a9 $9599 95 B4                    ;
;reads in order deliver this:                                                  ;
;  LDA $4016      player 1 - A         	B4 = FF=button A      pressed          ;
;  LDA $4016      player 1 - B         	B5 = FF=button B      pressed          ;
;  LDA $4016      player 1 - Select    	B6 = FF=button Select pressed          ;
;  LDA $4016      player 1 - Start     	B7 = FF=button Start  pressed          ;
;  LDA $4016      player 1 - Up        	B8 = FF=button Up     pressed          ;
;  LDA $4016      player 1 - Down      	B9 = FF=button Down   pressed          ;
;  LDA $4016      player 1 - Left      	BA = FF=button Left   pressed          ;
;  LDA $4016      player 1 - Right     	BB = FF=button Right  pressed          ;
inx                                    ; 0x15ab $959B E8                       ;
cpx      #$08                          ; 0x15ac $959C E0 08                    ;
bne      L958A                         ; 0x15ae $959E D0 EA                    ;
rts                                    ; 0x15b0 $95A0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L95A1                                                                          ;
stx      $9E                           ; 0x15b1 $95A1 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sty      $9F                           ; 0x15b3 $95A3 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $A1                           ; 0x15b5 $95A5 85 A1                    ;
lda      #$03                          ; 0x15b7 $95A7 A9 03                    ;;A = #$03 0000_0011
sta      $A2                           ; 0x15b9 $95A9 85 A2                    ;
lda      $9F                           ; 0x15bb $95AB A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
and      #$FC                          ; 0x15bd $95AD 29 FC                    ;;Keep Bits:1111_1100
sta      $08                           ; 0x15bf $95AF 85 08                    ;;save calc'd attack strength to $08 ?
lsr                                    ; 0x15c1 $95B1 4A                       ;
clc                                    ; 0x15c2 $95B2 18                       ;
adc      $08                           ; 0x15c3 $95B3 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x15c5 $95B5 85 08                    ;;save calc'd attack strength to $08 ?
lda      $9E                           ; 0x15c7 $95B7 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lsr                                    ; 0x15c9 $95B9 4A                       ;
lsr                                    ; 0x15ca $95BA 4A                       ;
clc                                    ; 0x15cb $95BB 18                       ;
adc      $08                           ; 0x15cc $95BC 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x15ce $95BE 85 08                    ;;save calc'd attack strength to $08 ?
tax                                    ; 0x15d0 $95C0 AA                       ;
lda      $9F                           ; 0x15d1 $95C1 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
and      #$02                          ; 0x15d3 $95C3 29 02                    ;;Keep Bits:0000_0010
beq      L95D7                         ; 0x15d5 $95C5 F0 10                    ;
asl      $A1                           ; 0x15d7 $95C7 06 A1                    ;
asl      $A1                           ; 0x15d9 $95C9 06 A1                    ;
asl      $A1                           ; 0x15db $95CB 06 A1                    ;
asl      $A1                           ; 0x15dd $95CD 06 A1                    ;
asl      $A2                           ; 0x15df $95CF 06 A2                    ;
asl      $A2                           ; 0x15e1 $95D1 06 A2                    ;
asl      $A2                           ; 0x15e3 $95D3 06 A2                    ;
asl      $A2                           ; 0x15e5 $95D5 06 A2                    ;
L95D7                                                                          ;
lda      $9E                           ; 0x15e7 $95D7 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
and      #$02                          ; 0x15e9 $95D9 29 02                    ;;Keep Bits:0000_0010
beq      L95E5                         ; 0x15eb $95DB F0 08                    ;
asl      $A1                           ; 0x15ed $95DD 06 A1                    ;
asl      $A1                           ; 0x15ef $95DF 06 A1                    ;
asl      $A2                           ; 0x15f1 $95E1 06 A2                    ;
asl      $A2                           ; 0x15f3 $95E3 06 A2                    ;
L95E5                                                                          ;
lda      $A2                           ; 0x15f5 $95E5 A5 A2                    ;
eor      #$FF                          ; 0x15f7 $95E7 49 FF                    ;;Flip Bits:1111_1111
and      $06C8,x                       ; 0x15f9 $95E9 3D C8 06                 ;
ora      $A1                           ; 0x15fc $95EC 05 A1                    ;
sta      $06C8,x                       ; 0x15fe $95EE 9D C8 06                 ;
sta      $A1                           ; 0x1601 $95F1 85 A1                    ;
rts                                    ; 0x1603 $95F3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L95F4                                                                          ;
jsr      L961F                         ; 0x1604 $95F4 20 1F 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x1607 $95F7 20 5D 96  ;
lda      $A1                           ; 0x160a $95FA A5 A1                    ;
sta      $2007                         ; 0x160c $95FC 8D 07 20                 ;;Data ($2007) <> read/write
rts                                    ; 0x160f $95FF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9600                                                                          ;
ldx      $9E                           ; 0x1610 $9600 A6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      $9F                           ; 0x1612 $9602 A4 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
L9604                                                                          ;
lda      #$00                          ; 0x1614 $9604 A9 00                    ;;A = #$00 0000_0000
sta      $01                           ; 0x1616 $9606 85 01                    ;
stx      L0000                         ; 0x1618 $9608 86 00                    ;
tya                                    ; 0x161a $960A 98                       ;
asl                                    ; 0x161b $960B 0A                       ;
asl                                    ; 0x161c $960C 0A                       ;
asl                                    ; 0x161d $960D 0A                       ;
asl                                    ; 0x161e $960E 0A                       ;
rol      $01                           ; 0x161f $960F 26 01                    ;
asl                                    ; 0x1621 $9611 0A                       ;
rol      $01                           ; 0x1622 $9612 26 01                    ;
adc      L0000                         ; 0x1624 $9614 65 00                    ;
sta      L0000                         ; 0x1626 $9616 85 00                    ;
lda      $01                           ; 0x1628 $9618 A5 01                    ;
adc      #$20                          ; 0x162a $961A 69 20                    ;
sta      $01                           ; 0x162c $961C 85 01                    ;
rts                                    ; 0x162e $961E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L961F                                                                          ;
lda      $9E                           ; 0x162f $961F A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lsr                                    ; 0x1631 $9621 4A                       ;
lsr                                    ; 0x1632 $9622 4A                       ;
sta      L0000                         ; 0x1633 $9623 85 00                    ;
lda      $9F                           ; 0x1635 $9625 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
and      #$FC                          ; 0x1637 $9627 29 FC                    ;;Keep Bits:1111_1100
asl                                    ; 0x1639 $9629 0A                       ;
clc                                    ; 0x163a $962A 18                       ;
adc      L0000                         ; 0x163b $962B 65 00                    ;
adc      #$C0                          ; 0x163d $962D 69 C0                    ;
sta      L0000                         ; 0x163f $962F 85 00                    ;
lda      #$23                          ; 0x1641 $9631 A9 23                    ;;A = #$23 0010_0011
sta      $01                           ; 0x1643 $9633 85 01                    ;
rts                                    ; 0x1645 $9635 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9636                                                                          ;
jsr      L951A                         ; 0x1646 $9636 20 1A 95                 ;
L9639                                                                          ;
jsr      L9600                         ; 0x1649 $9639 20 00 96                 ;
L963C                                                                          ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x164c $963C 20 5D 96  ;
ldy      #$00                          ; 0x164f $963F A0 00                    ;;Y = #$00 0000_0000
ldx      $A0                           ; 0x1651 $9641 A6 A0                    ;
L9643                                                                          ;
;draw text with this loop here                                                 ;
;for example on death, the "Game over"                                         ;
;	or the Hydlidetm at intro                                                    ;
lda      ($0C),y                       ; 0x1653 $9643 B1 0C                    ;
sta      $2007                         ; 0x1655 $9645 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x1658 $9648 C8                       ;
dex                                    ; 0x1659 $9649 CA                       ;
bne      L9643                         ; 0x165a $964A D0 F7                    ;
lda      $0C                           ; 0x165c $964C A5 0C                    ;
clc                                    ; 0x165e $964E 18                       ;
adc      $A0                           ; 0x165f $964F 65 A0                    ;
sta      $0C                           ; 0x1661 $9651 85 0C                    ;
lda      $0D                           ; 0x1663 $9653 A5 0D                    ;
adc      #$00                          ; 0x1665 $9655 69 00                    ;
sta      $0D                           ; 0x1667 $9657 85 0D                    ;
rts                                    ; 0x1669 $9659 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L965A                                                                          ;
jsr      L951A                         ; 0x166a $965A 20 1A 95                 ;
PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft                                  ;
lda      $01                           ; 0x166d $965D A5 01                    ;
sta      $2006                         ; 0x166f $965F 8D 06 20                 ;;PPU address port $2006
lda      L0000                         ; 0x1672 $9662 A5 00                    ;
sta      $2006                         ; 0x1674 $9664 8D 06 20                 ;;PPU address port $2006
lda      #$08                          ; 0x1677 $9667 A9 08                    ;;A = #$08 0000_1000
sta      $2005                         ; 0x1679 $9669 8D 05 20                 ;
lda      #$00                          ; 0x167c $966C A9 00                    ;;A = #$00 0000_0000
sta      $2005                         ; 0x167e $966E 8D 05 20                 ;
rts                                    ; 0x1681 $9671 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Copy_PlayerPosXY_To_9E_9F__and_Point_0E__based_on_9E_9F                        ;
lda      $36                           ; 0x1682 $9672 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $9E                           ; 0x1684 $9674 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $37                           ; 0x1686 $9676 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $9F                           ; 0x1688 $9678 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      Point_0E__based_on_9E_9F      ; 0x168a $967A 4C B9 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ClearAll200__set200toF0__setA7to00                                             ;
ldy      #$00                          ; 0x168d $967D A0 00                    ;;Y = #$00 0000_0000
lda      #$F0                          ; 0x168f $967F A9 F0                    ;;A = #$f0 1111_0000
L9681                                                                          ;
sta      $0200,y                       ; 0x1691 $9681 99 00 02                 ;
iny                                    ; 0x1694 $9684 C8                       ;
cpy      #$CC                          ; 0x1695 $9685 C0 CC                    ;
bcc      L9681                         ; 0x1697 $9687 90 F8                    ;
ldy      #$00                          ; 0x1699 $9689 A0 00                    ;;Y = #$00 0000_0000
sty      $A7                           ; 0x169b $968B 84 A7                    ;
rts                                    ; 0x169d $968D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
RNG_get_random_number__A_is_max                                                ;
sta      $32                           ; 0x169e $968E 85 32                    ;
inc      $32                           ; 0x16a0 $9690 E6 32                    ;
lda      $2E                           ; 0x16a2 $9692 A5 2E                    ;;RNG1              ?
sta      $30                           ; 0x16a4 $9694 85 30                    ;
lda      $2F                           ; 0x16a6 $9696 A5 2F                    ;;RNG2              ?
sta      $31                           ; 0x16a8 $9698 85 31                    ;
asl      $2F                           ; 0x16aa $969A 06 2F                    ;;RNG2              ?
rol      $2E                           ; 0x16ac $969C 26 2E                    ;;RNG1              ?
asl      $2F                           ; 0x16ae $969E 06 2F                    ;;RNG2              ?
rol      $2E                           ; 0x16b0 $96A0 26 2E                    ;;RNG1              ?
asl      $2F                           ; 0x16b2 $96A2 06 2F                    ;;RNG2              ?
rol      $2E                           ; 0x16b4 $96A4 26 2E                    ;;RNG1              ?
lda      $2F                           ; 0x16b6 $96A6 A5 2F                    ;;RNG2              ?
clc                                    ; 0x16b8 $96A8 18                       ;
adc      $31                           ; 0x16b9 $96A9 65 31                    ;
sta      $2F                           ; 0x16bb $96AB 85 2F                    ;;RNG2              ?
lda      $2E                           ; 0x16bd $96AD A5 2E                    ;;RNG1              ?
adc      $30                           ; 0x16bf $96AF 65 30                    ;
sta      $2E                           ; 0x16c1 $96B1 85 2E                    ;;RNG1              ?
lda      $2F                           ; 0x16c3 $96B3 A5 2F                    ;;RNG2              ?
clc                                    ; 0x16c5 $96B5 18                       ;
adc      #$61                          ; 0x16c6 $96B6 69 61                    ;
sta      $2F                           ; 0x16c8 $96B8 85 2F                    ;;RNG2              ?
lda      $2E                           ; 0x16ca $96BA A5 2E                    ;;RNG1              ?
adc      #$00                          ; 0x16cc $96BC 69 00                    ;
sta      $2E                           ; 0x16ce $96BE 85 2E                    ;;RNG1              ?
L96C0                                                                          ;
cmp      $32                           ; 0x16d0 $96C0 C5 32                    ;
bcc      L96C9                         ; 0x16d2 $96C2 90 05                    ;
sbc      $32                           ; 0x16d4 $96C4 E5 32                    ;
jmp      L96C0                         ; 0x16d6 $96C6 4C C0 96                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96C9                                                                          ;
rts                                    ; 0x16d9 $96C9 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96CA                                                                          ;
jsr      L96E4                         ; 0x16da $96CA 20 E4 96                 ;
lda      #$9A                          ; 0x16dd $96CD A9 9A                    ;;A = #$9a 1001_1010
sta      $0D                           ; 0x16df $96CF 85 0D                    ;
lda      #$58                          ; 0x16e1 $96D1 A9 58                    ;;A = #$58 0101_1000
sta      $0C                           ; 0x16e3 $96D3 85 0C                    ;
lda      #$07                          ; 0x16e5 $96D5 A9 07                    ;;A = #$07 0000_0111
sta      $A0                           ; 0x16e7 $96D7 85 A0                    ;
ldx      #$19                          ; 0x16e9 $96D9 A2 19                    ;;X = #$19 0001_1001
stx      $9E                           ; 0x16eb $96DB 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$15                          ; 0x16ed $96DD A0 15                    ;;Y = #$15 0001_0101
sty      $9F                           ; 0x16ef $96DF 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      L9639                         ; 0x16f1 $96E1 4C 39 96                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96E4                                                                          ;
ldx      #$D0                          ; 0x16f4 $96E4 A2 D0                    ;;X = #$d0 1101_0000
lda      #$F0                          ; 0x16f6 $96E6 A9 F0                    ;;A = #$f0 1111_0000
L96E8                                                                          ;
sta      $0200,x                       ; 0x16f8 $96E8 9D 00 02                 ;
inx                                    ; 0x16fb $96EB E8                       ;
cpx      #$E8                          ; 0x16fc $96EC E0 E8                    ;
bne      L96E8                         ; 0x16fe $96EE D0 F8                    ;
sta      $02FC                         ; 0x1700 $96F0 8D FC 02                 ;
ldx      #$19                          ; 0x1703 $96F3 A2 19                    ;;X = #$19 0001_1001
ldy      #$13                          ; 0x1705 $96F5 A0 13                    ;;Y = #$13 0001_0011
jsr      L9604                         ; 0x1707 $96F7 20 04 96                 ;
jsr      L951A                         ; 0x170a $96FA 20 1A 95                 ;
ldy      #$05                          ; 0x170d $96FD A0 05                    ;;Y = #$05 0000_0101
L96FF                                                                          ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x170f $96FF 20 5D 96  ;
lda      #$40                          ; 0x1712 $9702 A9 40                    ;;A = #$40 0100_0000
ldx      #$07                          ; 0x1714 $9704 A2 07                    ;;X = #$07 0000_0111
L9706                                                                          ;
sta      $2007                         ; 0x1716 $9706 8D 07 20                 ;;Data ($2007) <> read/write
dex                                    ; 0x1719 $9709 CA                       ;
bne      L9706                         ; 0x171a $970A D0 FA                    ;
lda      L0000                         ; 0x171c $970C A5 00                    ;
clc                                    ; 0x171e $970E 18                       ;
adc      #$20                          ; 0x171f $970F 69 20                    ;
sta      L0000                         ; 0x1721 $9711 85 00                    ;
lda      $01                           ; 0x1723 $9713 A5 01                    ;
adc      #$00                          ; 0x1725 $9715 69 00                    ;
sta      $01                           ; 0x1727 $9717 85 01                    ;
dey                                    ; 0x1729 $9719 88                       ;
bne      L96FF                         ; 0x172a $971A D0 E3                    ;
lda      $9A                           ; 0x172c $971C A5 9A                    ;
bne      L972B                         ; 0x172e $971E D0 0B                    ;
lda      #$9A                          ; 0x1730 $9720 A9 9A                    ;;A = #$9a 1001_1010
sta      $0D                           ; 0x1732 $9722 85 0D                    ;
lda      #$38                          ; 0x1734 $9724 A9 38                    ;;A = #$38 0011_1000
sta      $0C                           ; 0x1736 $9726 85 0C                    ;
jmp      L9733                         ; 0x1738 $9728 4C 33 97                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L972B                                                                          ;
lda      #$9A                          ; 0x173b $972B A9 9A                    ;;A = #$9a 1001_1010
sta      $0D                           ; 0x173d $972D 85 0D                    ;
lda      #$5F                          ; 0x173f $972F A9 5F                    ;;A = #$5f 0101_1111
sta      $0C                           ; 0x1741 $9731 85 0C                    ;
L9733                                                                          ;
lda      #$17                          ; 0x1743 $9733 A9 17                    ;;A = #$17 0001_0111
sta      $A0                           ; 0x1745 $9735 85 A0                    ;
ldx      #$02                          ; 0x1747 $9737 A2 02                    ;;X = #$02 0000_0010
stx      $9E                           ; 0x1749 $9739 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$1B                          ; 0x174b $973B A0 1B                    ;;Y = #$1b 0001_1011
sty      $9F                           ; 0x174d $973D 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      L9639                         ; 0x174f $973F 4C 39 96                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
DrawGraphicBar_for_HP                                                          ;
;set up the pointer ($00) to point to our address of the first "bar" of hp/mp/str/exp/etc;
;load the value which is to be converted to the bar visual representation      ;
lda      $41                           ; 0x1752 $9742 A5 41                    ;;player max hp
lsr                                    ; 0x1754 $9744 4A                       ;
clc                                    ; 0x1755 $9745 18                       ;
adc      #$BF                          ; 0x1756 $9746 69 BF                    ;
sta      $02FB                         ; 0x1758 $9748 8D FB 02                 ;does this draw the max hp line (as a sprite) ??
lda      $38                           ; 0x175b $974B A5 38                    ;;player hp
ldy      #$C6                          ; 0x175d $974D A0 C6                    ;;Y = #$c6 1100_0110
bne      DrawGraphicBar_Done_SetupLowAddressForPointer00__provide_Y; 0x175f $974F D0 19;
DrawGraphicBar_for_STR                                                         ;
lda      $39                           ; 0x1761 $9751 A5 39                    ;;player str
ldy      #$CD                          ; 0x1763 $9753 A0 CD                    ;;Y = #$cd 1100_1101
bne      DrawGraphicBar_Done_SetupLowAddressForPointer00__provide_Y; 0x1765 $9755 D0 13;
DrawGraphicBar_for_EXP                                                         ;
lda      $3A                           ; 0x1767 $9757 A5 3A                    ;;player CurrentExperience 
ldy      #$D4                          ; 0x1769 $9759 A0 D4                    ;;Y = #$d4 1101_0100
bne      DrawGraphicBar_Done_SetupLowAddressForPointer00__provide_Y; 0x176b $975B D0 0D;
DrawGraphicBar_for_MP                                                          ;
lda      $42                           ; 0x176d $975D A5 42                    ;;player max mp
lsr                                    ; 0x176f $975F 4A                       ;
clc                                    ; 0x1770 $9760 18                       ;
adc      #$BF                          ; 0x1771 $9761 69 BF                    ;
sta      $02CF                         ; 0x1773 $9763 8D CF 02                 ;does this draw the max mp line (as a sprite) ??
lda      $3B                           ; 0x1776 $9766 A5 3B                    ;;player mp
ldy      #$DB                          ; 0x1778 $9768 A0 DB                    ;;Y = #$db 1101_1011
DrawGraphicBar_Done_SetupLowAddressForPointer00__provide_Y                     ;
sty      L0000                         ; 0x177a $976A 84 00                    ;
ldy      #$00                          ; 0x177c $976C A0 00                    ;;Y = #$00 0000_0000
sty      $01                           ; 0x177e $976E 84 01                    ;
lsr                                    ; 0x1780 $9770 4A                       ;
tax                                    ; 0x1781 $9771 AA                       ;
;using x register for the size of value to draw (i.e. hp/mp/str)               ;
;"draw" by copying the tile index to the ram position already setup in ($00)   ;
;subtract 8 each time (per square/tile of the measurement bar)                 ;
L9772                                                                          ;
;if value is < 8, then goto calculate the proper tile tile (80-86), to represent smaller values;
txa                                    ; 0x1782 $9772 8A                       ;
cpx      #$08                          ; 0x1783 $9773 E0 08                    ;
bmi      L977F                         ; 0x1785 $9775 30 08                    ;
sec                                    ; 0x1787 $9777 38                       ;
sbc      #$08                          ; 0x1788 $9778 E9 08                    ;
tax                                    ; 0x178a $977A AA                       ;
lda      #$86                          ; 0x178b $977B A9 86                    ;;A = #$86 1000_0110
bne      L978A                         ; 0x178d $977D D0 0B                    ;
L977F                                                                          ;
;calculate the proper tile tile (80-86), to represent smaller values           ;
clc                                    ; 0x178f $977F 18                       ;
adc      #$7E                          ; 0x1790 $9780 69 7E                    ;
cmp      #$7E                          ; 0x1792 $9782 C9 7E                    ;
bne      L9788                         ; 0x1794 $9784 D0 02                    ;
;if value + #$7E == #$7E, then we need to draw ("no tile", background ppu tile index=40);
lda      #$40                          ; 0x1796 $9786 A9 40                    ;;A = #$40 0100_0000
L9788                                                                          ;
ldx      #$00                          ; 0x1798 $9788 A2 00                    ;;X = #$00 0000_0000
L978A                                                                          ;
sta      (L0000),y                     ; 0x179a $978A 91 00                    ;write to $C6 (the hp bar) is done here
iny                                    ; 0x179c $978C C8                       ;
cpy      #$07                          ; 0x179d $978D C0 07                    ;
bne      L9772                         ; 0x179f $978F D0 E1                    ;
rts                                    ; 0x17a1 $9791 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Setup_Pointer_9E_and_C__and_Increment9F_andSomething                           ;
;setup pointer ($9E) to $819                                                   ;
ldx      #$19                          ; 0x17a2 $9792 A2 19                    ;;X = #$19 0001_1001
stx      $9E                           ; 0x17a4 $9794 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$08                          ; 0x17a6 $9796 A0 08                    ;;Y = #$08 0000_1000
sty      $9F                           ; 0x17a8 $9798 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
;setup pointer ($C) to $C6                                                     ;
lda      #$00                          ; 0x17aa $979A A9 00                    ;;A = #$00 0000_0000
sta      $0D                           ; 0x17ac $979C 85 0D                    ;
lda      #$C6                          ; 0x17ae $979E A9 C6                    ;;A = #$c6 1100_0110
sta      $0C                           ; 0x17b0 $97A0 85 0C                    ;
;something                                                                     ;
lda      #$07                          ; 0x17b2 $97A2 A9 07                    ;;A = #$07 0000_0111
sta      $A0                           ; 0x17b4 $97A4 85 A0                    ;
jsr      L9636                         ; 0x17b6 $97A6 20 36 96                 ;
inc      $9F                           ; 0x17b9 $97A9 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x17bb $97AB E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x17bd $97AD E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x17bf $97AF 20 39 96                 ;
inc      $9F                           ; 0x17c2 $97B2 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x17c4 $97B4 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x17c6 $97B6 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x17c8 $97B8 20 39 96                 ;
inc      $9F                           ; 0x17cb $97BB E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x17cd $97BD E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x17cf $97BF E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      L9639                         ; 0x17d1 $97C1 4C 39 96                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L97C4                                                                          ;
.byt    $00,$FA,$00,$FA,$0C,$00,$F9,$F3; 0x17d4 $97C4 00 FA 00 FA 0C 00 F9 F3  ;;
.byt    $00,$FC,$00,$00,$00,$00,$F9,$F6; 0x17dc $97CC 00 FC 00 00 00 00 F9 F6  ;;
.byt    $FC,$F9                        ; 0x17e4 $97D4 FC F9                    ;;
L97D6                                                                          ;
.byt    $02                            ; 0x17e6 $97D6 02                       ;;
L97D7                                                                          ;
.byt    $02,$02,$02,$02,$02,$02,$02,$02; 0x17e7 $97D7 02 02 02 02 02 02 02 02  ;;
.byt    $02,$02,$02,$02,$02,$02,$01,$01; 0x17ef $97DF 02 02 02 02 02 02 01 01  ;;
.byt    $02,$02,$02,$01,$02,$02,$02,$02; 0x17f7 $97E7 02 02 02 01 02 02 02 02  ;;
.byt    $02,$02,$02,$02,$01,$01,$01,$02; 0x17ff $97EF 02 02 02 02 01 01 01 02  ;;
.byt    $02,$01,$01,$03,$02,$03,$03,$02; 0x1807 $97F7 02 01 01 03 02 03 03 02  ;;
.byt    $02,$02,$02                    ; 0x180f $97FF 02 02 02                 ;;
Screen5_Location_Of_Trees_Which_Spawn_Bees                                     ;
;2 bytes per table entry: [y pos][x pos]                                       ;
;the code refers to "table index 0" as "x register = 1"                        ;
.byt    $04,$0A                        ; 0x1812 $9802 04 0A                    ;;
registerX_2                                                                    ;
.byt    $05,$10                        ; 0x1814 $9804 05 10                    ;;
registerX_3                                                                    ;
.byt    $07,$0B                        ; 0x1816 $9806 07 0B                    ;;
registerX_4                                                                    ;
.byt    $08,$0F                        ; 0x1818 $9808 08 0F                    ;;
registerX_5                                                                    ;
.byt    $0A,$09                        ; 0x181a $980A 0A 09                    ;;
registerX_6                                                                    ;
.byt    $0B,$05                        ; 0x181c $980C 0B 05                    ;;
registerX_7                                                                    ;
.byt    $0D,$11                        ; 0x181e $980E 0D 11                    ;;
registerX_8                                                                    ;
.byt    $0E,$00                        ; 0x1820 $9810 0E 00                    ;;
registerX_9                                                                    ;
.byt    $10,$07                        ; 0x1822 $9812 10 07                    ;;
registerX_A                                                                    ;
.byt    $13,$0D                        ; 0x1824 $9814 13 0D                    ;;
L9816                                                                          ;
.byt    $01,$03,$02                    ; 0x1826 $9816 01 03 02                 ;;
L9819                                                                          ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x1829 $9819 00 00 01 00 02 00 03 00  ;tile mappings for player
.byt    $04,$00,$05,$00,$06,$00,$07,$00; 0x1831 $9821 04 00 05 00 06 00 07 00  ;;
.byt    $08,$00,$09,$00,$0A,$00,$0B,$00; 0x1839 $9829 08 00 09 00 0A 00 0B 00  ;;
.byt    $05,$40,$04,$40,$07,$40,$06,$40; 0x1841 $9831 05 40 04 40 07 40 06 40  ;;@@@@
.byt    $0C,$00,$0D,$00,$0E,$00,$0F,$00; 0x1849 $9839 0C 00 0D 00 0E 00 0F 00  ;;
.byt    $10,$00,$11,$00,$12,$00,$13,$00; 0x1851 $9841 10 00 11 00 12 00 13 00  ;;
.byt    $14,$00,$15,$00,$16,$00,$17,$00; 0x1859 $9849 14 00 15 00 16 00 17 00  ;;
.byt    $11,$40,$10,$40,$13,$40,$12,$40; 0x1861 $9851 11 40 10 40 13 40 12 40  ;;@@@@
.byt    $EA,$00,$EB,$00,$EC,$00,$ED,$00; 0x1869 $9859 EA 00 EB 00 EC 00 ED 00  ;;
                                                                               ;
.byt    $53,$57,$4F,$52,$44,$40,$40    ; 0x1871 $9861 53 57 4F 52 44 40 40     ;;SWORD@@
                                                                               ;
.byt    $53,$48,$49,$45,$4C,$44,$40    ; 0x1878 $9868 53 48 49 45 4C 44 40     ;;SHIELD@
                                                                               ;
.byt    $4C,$41,$4D,$50,$40,$40,$40    ; 0x187f $986F 4C 41 4D 50 40 40 40     ;;LAMP@@@
                                                                               ;
.byt    $43,$52,$4F,$53,$53,$40,$40    ; 0x1886 $9876 43 52 4F 53 53 40 40     ;;CROSS@@
                                                                               ;
.byt    $4D,$45,$44,$49,$43,$49,$4E    ; 0x188d $987D 4D 45 44 49 43 49 4E     ;;MEDICIN
                                                                               ;
.byt    $50,$4F,$54,$40,$40,$40,$40    ; 0x1894 $9884 50 4F 54 40 40 40 40     ;;POT@@@@
                                                                               ;
.byt    $4B,$45,$59,$40,$40,$40,$40    ; 0x189b $988B 4B 45 59 40 40 40 40     ;;KEY@@@@
                                                                               ;
.byt    $4A,$45,$57,$45,$4C,$40,$40    ; 0x18a2 $9892 4A 45 57 45 4C 40 40     ;;JEWEL@@
                                                                               ;
.byt    $52,$49,$4E,$47,$40,$40,$40    ; 0x18a9 $9899 52 49 4E 47 40 40 40     ;;RING@@@
                                                                               ;
.byt    $52,$55,$42,$59,$40,$40,$40    ; 0x18b0 $98A0 52 55 42 59 40 40 40     ;;RUBY@@@
                                                                               ;
.byt    $46,$41,$49,$52,$59,$40,$31    ; 0x18b7 $98A7 46 41 49 52 59 40 31     ;;FAIRY@1
                                                                               ;
.byt    $46,$41,$49,$52,$59,$40,$32    ; 0x18be $98AE 46 41 49 52 59 40 32     ;;FAIRY@2
                                                                               ;
.byt    $46,$41,$49,$52,$59,$40,$33    ; 0x18c5 $98B5 46 41 49 52 59 40 33     ;;FAIRY@3
                                                                               ;
.byt    $59,$4F,$55,$40,$47,$45,$54,$40; 0x18cc $98BC 59 4F 55 40 47 45 54 40  ;;YOU@GET@
.byt    $41,$40,$53,$57,$4F,$52,$44,$40; 0x18d4 $98C4 41 40 53 57 4F 52 44 40  ;;A@SWORD@
.byt    $40,$40,$40,$40,$40,$40,$40,$59; 0x18dc $98CC 40 40 40 40 40 40 40 59  ;;@@@@@@@Y
.byt    $4F,$55,$40,$47,$45,$54,$40,$41; 0x18e4 $98D4 4F 55 40 47 45 54 40 41  ;;OU@GET@A
.byt    $40,$53,$48,$49,$45,$4C,$44,$40; 0x18ec $98DC 40 53 48 49 45 4C 44 40  ;;@SHIELD@
.byt    $40,$40,$40,$40,$40,$40,$59,$4F; 0x18f4 $98E4 40 40 40 40 40 40 59 4F  ;;@@@@@@YO
.byt    $55,$40,$47,$45,$54,$40,$41,$40; 0x18fc $98EC 55 40 47 45 54 40 41 40  ;;U@GET@A@
.byt    $4C,$41,$4D,$50,$40,$40,$40,$40; 0x1904 $98F4 4C 41 4D 50 40 40 40 40  ;;LAMP@@@@
.byt    $40,$40,$40,$40,$40,$59,$4F,$55; 0x190c $98FC 40 40 40 40 40 59 4F 55  ;;@@@@@YOU
.byt    $40,$47,$45,$54,$40,$41,$40,$43; 0x1914 $9904 40 47 45 54 40 41 40 43  ;;@GET@A@C
.byt    $52,$4F,$53,$53,$40,$40,$40,$40; 0x191c $990C 52 4F 53 53 40 40 40 40  ;;ROSS@@@@
.byt    $40,$40,$40,$40,$59,$4F,$55,$40; 0x1924 $9914 40 40 40 40 59 4F 55 40  ;;@@@@YOU@
.byt    $47,$45,$54,$40,$41,$40,$4D,$45; 0x192c $991C 47 45 54 40 41 40 4D 45  ;;GET@A@ME
.byt    $44,$49,$43,$49,$4E,$45,$40,$40; 0x1934 $9924 44 49 43 49 4E 45 40 40  ;;DICINE@@
.byt    $40,$40,$40,$59,$4F,$55,$40,$47; 0x193c $992C 40 40 40 59 4F 55 40 47  ;;@@@YOU@G
.byt    $45,$54,$40,$41,$40,$50,$4F,$54; 0x1944 $9934 45 54 40 41 40 50 4F 54  ;;ET@A@POT
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x194c $993C 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$59,$4F,$55,$40,$47,$45; 0x1954 $9944 40 40 59 4F 55 40 47 45  ;;@@YOU@GE
.byt    $54,$40,$41,$40,$4B,$45,$59,$40; 0x195c $994C 54 40 41 40 4B 45 59 40  ;;T@A@KEY@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x1964 $9954 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$59,$4F,$55,$40,$47,$45,$54; 0x196c $995C 40 59 4F 55 40 47 45 54  ;;@YOU@GET
.byt    $40,$41,$40,$4A,$45,$57,$45,$4C; 0x1974 $9964 40 41 40 4A 45 57 45 4C  ;;@A@JEWEL
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x197c $996C 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $59,$4F,$55,$40,$47,$45,$54,$40; 0x1984 $9974 59 4F 55 40 47 45 54 40  ;;YOU@GET@
.byt    $41,$40,$52,$49,$4E,$47,$40,$40; 0x198c $997C 41 40 52 49 4E 47 40 40  ;;A@RING@@
.byt    $40,$40,$40,$40,$40,$40,$40,$59; 0x1994 $9984 40 40 40 40 40 40 40 59  ;;@@@@@@@Y
.byt    $4F,$55,$40,$47,$45,$54,$40,$41; 0x199c $998C 4F 55 40 47 45 54 40 41  ;;OU@GET@A
.byt    $40,$52,$55,$42,$59,$40,$40,$40; 0x19a4 $9994 40 52 55 42 59 40 40 40  ;;@RUBY@@@
.byt    $40,$40,$40,$40,$40,$40,$59,$4F; 0x19ac $999C 40 40 40 40 40 40 59 4F  ;;@@@@@@YO
.byt    $55,$40,$53,$41,$56,$45,$40,$46; 0x19b4 $99A4 55 40 53 41 56 45 40 46  ;;U@SAVE@F
.byt    $41,$49,$52,$59,$40,$31,$40,$40; 0x19bc $99AC 41 49 52 59 40 31 40 40  ;;AIRY@1@@
.byt    $40,$40,$40,$40,$40,$59,$4F,$55; 0x19c4 $99B4 40 40 40 40 40 59 4F 55  ;;@@@@@YOU
.byt    $40,$53,$41,$56,$45,$40,$46,$41; 0x19cc $99BC 40 53 41 56 45 40 46 41  ;;@SAVE@FA
.byt    $49,$52,$59,$40,$32,$40,$40,$40; 0x19d4 $99C4 49 52 59 40 32 40 40 40  ;;IRY@2@@@
.byt    $40,$40,$40,$40,$59,$4F,$55,$40; 0x19dc $99CC 40 40 40 40 59 4F 55 40  ;;@@@@YOU@
.byt    $53,$41,$56,$45,$40,$46,$41,$49; 0x19e4 $99D4 53 41 56 45 40 46 41 49  ;;SAVE@FAI
.byt    $52,$59,$40,$33,$40,$40,$40,$40; 0x19ec $99DC 52 59 40 33 40 40 40 40  ;;RY@3@@@@
.byt    $40,$40,$40,$59,$4F,$55,$40,$55; 0x19f4 $99E4 40 40 40 59 4F 55 40 55  ;;@@@YOU@U
.byt    $53,$45,$40,$41,$40,$4D,$45,$44; 0x19fc $99EC 53 45 40 41 40 4D 45 44  ;;SE@A@MED
.byt    $49,$43,$49,$4E,$45,$40,$40,$40; 0x1a04 $99F4 49 43 49 4E 45 40 40 40  ;;ICINE@@@
.byt    $40,$40,$54,$48,$45,$40,$47,$52; 0x1a0c $99FC 40 40 54 48 45 40 47 52  ;;@@THE@GR
.byt    $41,$56,$45,$40,$49,$53,$40,$42; 0x1a14 $9A04 41 56 45 40 49 53 40 42  ;;AVE@IS@B
.byt    $52,$4F,$4B,$45,$4E,$40,$40,$40; 0x1a1c $9A0C 52 4F 4B 45 4E 40 40 40  ;;ROKEN@@@
.byt    $40,$41,$54,$54,$41,$43,$4B,$44; 0x1a24 $9A14 40 41 54 54 41 43 4B 44  ;;@ATTACKD
.byt    $45,$46,$45,$4E,$44,$40,$40,$40; 0x1a2c $9A1C 45 46 45 4E 44 40 40 40  ;;EFEND@@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x1a34 $9A24 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x1a3c $9A2C 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x1a44 $9A34 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$48,$40,$59,$40,$44,$40,$4C; 0x1a4c $9A3C 40 48 40 59 40 44 40 4C  ;;@H@Y@D@L
.byt    $40,$49,$40,$44,$40,$45,$40,$40; 0x1a54 $9A44 40 49 40 44 40 45 40 40  ;;@I@D@E@@
.byt    $40,$40,$40,$50,$41,$53,$53,$57; 0x1a5c $9A4C 40 40 40 50 41 53 53 57  ;;@@@PASSW
.byt    $4F,$52,$44,$3A,$4D,$4F,$4E,$53; 0x1a64 $9A54 4F 52 44 3A 4D 4F 4E 53  ;;ORD:MONS
.byt    $54,$45,$52,$40,$40,$40,$40,$40; 0x1a6c $9A5C 54 45 52 40 40 40 40 40  ;;TER@@@@@
.byt    $44,$45,$4D,$4F,$4E,$53,$54,$52; 0x1a74 $9A64 44 45 4D 4F 4E 53 54 52  ;;DEMONSTR
.byt    $41,$54,$49,$4F,$4E,$40,$40,$40; 0x1a7c $9A6C 41 54 49 4F 4E 40 40 40  ;;ATION@@@
.byt    $40,$40                        ; 0x1a84 $9A74 40 40                    ;;@@
; ---------------------------------------------------------------------------- ;
PlayerMP_Regen__Palette__UpdateGraphicBarForMP                                 ;
;MP Regen timer delay implementation                                           ;
lda      $43                           ; 0x1a86 $9A76 A5 43                    ;;COUNTER: incremented by #$20 each frame:	00 20 40 60 80 A0 C0 E0 
clc                                    ; 0x1a88 $9A78 18                       ;
adc      #$20                          ; 0x1a89 $9A79 69 20                    ;
sta      $43                           ; 0x1a8b $9A7B 85 43                    ;;COUNTER: incremented by #$20 each frame:	00 20 40 60 80 A0 C0 E0 
bne      L9A81                         ; 0x1a8d $9A7D D0 02                    ;
;regen mp (increment mp)                                                       ;
;	but only every 8 frames                                                      ;
inc      $3B                           ; 0x1a8f $9A7F E6 3B                    ;;player mp
L9A81                                                                          ;
lda      $42                           ; 0x1a91 $9A81 A5 42                    ;;player max mp
cmp      $3B                           ; 0x1a93 $9A83 C5 3B                    ;;player mp
bpl      L9A89                         ; 0x1a95 $9A85 10 02                    ;if player max mp >= player mp then skip
sta      $3B                           ; 0x1a97 $9A87 85 3B                    ;otherwise, set player mp to player max mp
L9A89                                                                          ;
;if $81 > 00, then decrease until $81=00 and flash palette to white ,then change back to normal palette;
lda      $81                           ; 0x1a99 $9A89 A5 81                    ;;COUNTER? flash palette to white when reach =0
beq      L9AB0                         ; 0x1a9b $9A8B F0 23                    ;
lda      #$64                          ; 0x1a9d $9A8D A9 64                    ;;A = #$64 0110_0100
sta      $3B                           ; 0x1a9f $9A8F 85 3B                    ;;player mp
dec      $81                           ; 0x1aa1 $9A91 C6 81                    ;;COUNTER? flash palette to white when reach =0
bne      L9AB0                         ; 0x1aa3 $9A93 D0 1B                    ;
lda      #$01                          ; 0x1aa5 $9A95 A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x1aa7 $9A97 20 51 DF  ;
ldx      #$20                          ; 0x1aaa $9A9A A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x1aac $9A9C 20 74 95               ;
lda      #$00                          ; 0x1aaf $9A9F A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x1ab1 $9AA1 20 51 DF  ;
lda      #$00                          ; 0x1ab4 $9AA4 A9 00                    ;;A = #$00 0000_0000
sta      $7D                           ; 0x1ab6 $9AA6 85 7D                    ;
jsr      LA196                         ; 0x1ab8 $9AA8 20 96 A1                 ;
lda      #$04                          ; 0x1abb $9AAB A9 04                    ;;A = #$04 0000_0100
jsr      LE142                         ; 0x1abd $9AAD 20 42 E1                 ;
L9AB0                                                                          ;
;update/draw graphic bar for mp because we regen'd mp                          ;
jsr      DrawGraphicBar_for_MP         ; 0x1ac0 $9AB0 20 5D 97                 ;
lda      $B5                           ; 0x1ac3 $9AB3 A5 B5                    ;;FF=button B      pressed
bne      L9ABC                         ; 0x1ac5 $9AB5 D0 05                    ;
lda      #$00                          ; 0x1ac7 $9AB7 A9 00                    ;;A = #$00 0000_0000
sta      $7E                           ; 0x1ac9 $9AB9 85 7E                    ;
rts                                    ; 0x1acb $9ABB 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9ABC                                                                          ;
lda      $B4                           ; 0x1acc $9ABC A5 B4                    ;;FF=button A      pressed
;007 inefficient code                                                          ;
beq      L9AC2                         ; 0x1ace $9ABE F0 02                    ;if button A is NOT pressed then check if $7E=0
bne      L9B0D                         ; 0x1ad0 $9AC0 D0 4B                    ;if button A is pressed goto $9B0D
L9AC2                                                                          ;
lda      $7E                           ; 0x1ad2 $9AC2 A5 7E                    ;
beq      L9AC9                         ; 0x1ad4 $9AC4 F0 03                    ;if $7E=0 then goto $9B0D (same goto for: if button A is pressed)
dec      $7E                           ; 0x1ad6 $9AC6 C6 7E                    ;
rts                                    ; 0x1ad8 $9AC8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9AC9                                                                          ;
inc      $7D                           ; 0x1ad9 $9AC9 E6 7D                    ;
lda      $7D                           ; 0x1adb $9ACB A5 7D                    ;
cmp      #$06                          ; 0x1add $9ACD C9 06                    ;
bne      L9AD5                         ; 0x1adf $9ACF D0 04                    ;
lda      #$01                          ; 0x1ae1 $9AD1 A9 01                    ;;A = #$01 0000_0001
sta      $7D                           ; 0x1ae3 $9AD3 85 7D                    ;
L9AD5                                                                          ;
ldx      #$00                          ; 0x1ae5 $9AD5 A2 00                    ;;X = #$00 0000_0000
lda      $3B                           ; 0x1ae7 $9AD7 A5 3B                    ;;player mp
cmp      #$14                          ; 0x1ae9 $9AD9 C9 14                    ;
bmi      L9AF2                         ; 0x1aeb $9ADB 30 15                    ;
inx                                    ; 0x1aed $9ADD E8                       ;
cmp      #$1E                          ; 0x1aee $9ADE C9 1E                    ;
bmi      L9AF2                         ; 0x1af0 $9AE0 30 10                    ;
inx                                    ; 0x1af2 $9AE2 E8                       ;
cmp      #$28                          ; 0x1af3 $9AE3 C9 28                    ;
bmi      L9AF2                         ; 0x1af5 $9AE5 30 0B                    ;
inx                                    ; 0x1af7 $9AE7 E8                       ;
cmp      #$32                          ; 0x1af8 $9AE8 C9 32                    ;
bmi      L9AF2                         ; 0x1afa $9AEA 30 06                    ;
inx                                    ; 0x1afc $9AEC E8                       ;
cmp      #$3C                          ; 0x1afd $9AED C9 3C                    ;
bmi      L9AF2                         ; 0x1aff $9AEF 30 01                    ;
inx                                    ; 0x1b01 $9AF1 E8                       ;
L9AF2                                                                          ;
txa                                    ; 0x1b02 $9AF2 8A                       ;
cmp      $7D                           ; 0x1b03 $9AF3 C5 7D                    ;
bpl      L9AFB                         ; 0x1b05 $9AF5 10 04                    ;
lda      #$01                          ; 0x1b07 $9AF7 A9 01                    ;;A = #$01 0000_0001
sta      $7D                           ; 0x1b09 $9AF9 85 7D                    ;
L9AFB                                                                          ;
lda      $3B                           ; 0x1b0b $9AFB A5 3B                    ;;player mp
cmp      #$14                          ; 0x1b0d $9AFD C9 14                    ;
bpl      L9B05                         ; 0x1b0f $9AFF 10 04                    ;
lda      #$00                          ; 0x1b11 $9B01 A9 00                    ;;A = #$00 0000_0000
sta      $7D                           ; 0x1b13 $9B03 85 7D                    ;
L9B05                                                                          ;
jsr      LA196                         ; 0x1b15 $9B05 20 96 A1                 ;
lda      #$03                          ; 0x1b18 $9B08 A9 03                    ;;A = #$03 0000_0011
sta      $7E                           ; 0x1b1a $9B0A 85 7E                    ;
rts                                    ; 0x1b1c $9B0C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B0D                                                                          ;
lda      #$01                          ; 0x1b1d $9B0D A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x1b1f $9B0F 20 93 E2     ;
ldx      $7D                           ; 0x1b22 $9B12 A6 7D                    ;
dex                                    ; 0x1b24 $9B14 CA                       ;
bne      L9B1A                         ; 0x1b25 $9B15 D0 03                    ;
jmp      L9B35                         ; 0x1b27 $9B17 4C 35 9B                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B1A                                                                          ;
dex                                    ; 0x1b2a $9B1A CA                       ;
bne      L9B20                         ; 0x1b2b $9B1B D0 03                    ;
jmp      L9BB0                         ; 0x1b2d $9B1D 4C B0 9B                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B20                                                                          ;
dex                                    ; 0x1b30 $9B20 CA                       ;
bne      L9B26                         ; 0x1b31 $9B21 D0 03                    ;
jmp      L9D64                         ; 0x1b33 $9B23 4C 64 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B26                                                                          ;
dex                                    ; 0x1b36 $9B26 CA                       ;
bne      L9B2C                         ; 0x1b37 $9B27 D0 03                    ;
jmp      L9EA7                         ; 0x1b39 $9B29 4C A7 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B2C                                                                          ;
dex                                    ; 0x1b3c $9B2C CA                       ;
bne      L9B32                         ; 0x1b3d $9B2D D0 03                    ;
jmp      LA0A6                         ; 0x1b3f $9B2F 4C A6 A0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B32                                                                          ;
jmp      LA177                         ; 0x1b42 $9B32 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B35                                                                          ;
lda      $3B                           ; 0x1b45 $9B35 A5 3B                    ;;player mp
sec                                    ; 0x1b47 $9B37 38                       ;
sbc      #$14                          ; 0x1b48 $9B38 E9 14                    ;
sta      $3B                           ; 0x1b4a $9B3A 85 3B                    ;;player mp
lda      #$0A                          ; 0x1b4c $9B3C A9 0A                    ;;A = #$0a 0000_1010
sta      $04                           ; 0x1b4e $9B3E 85 04                    ;
L9B40                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x1b50 $9B40 20 7D 96             ;
lda      #$00                          ; 0x1b53 $9B43 A9 00                    ;;A = #$00 0000_0000
sta      $83                           ; 0x1b55 $9B45 85 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
jsr      L919D                         ; 0x1b57 $9B47 20 9D 91                 ;
lda      #$06                          ; 0x1b5a $9B4A A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x1b5c $9B4C 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x1b5e $9B4E A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x1b60 $9B50 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0x1b62 $9B52 A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x1b64 $9B54 85 89                    ;
L9B56                                                                          ;
ldy      #$00                          ; 0x1b66 $9B56 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x1b68 $9B58 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x1b6a $9B5A 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
ldy      #$04                          ; 0x1b6c $9B5C A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x1b6e $9B5E B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      L9B85                         ; 0x1b70 $9B60 D0 23                    ;
lda      $88                           ; 0x1b72 $9B62 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$12                          ; 0x1b74 $9B64 C9 12                    ;
beq      L9B77                         ; 0x1b76 $9B66 F0 0F                    ;
cmp      #$13                          ; 0x1b78 $9B68 C9 13                    ;
beq      L9B77                         ; 0x1b7a $9B6A F0 0B                    ;
ldy      #$05                          ; 0x1b7c $9B6C A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x1b7e $9B6E B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x1b80 $9B70 18                       ;
adc      #$01                          ; 0x1b81 $9B71 69 01                    ;
and      #$03                          ; 0x1b83 $9B73 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x1b85 $9B75 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
L9B77                                                                          ;
ldy      #$07                          ; 0x1b87 $9B77 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x1b89 $9B79 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x1b8b $9B7B 18                       ;
adc      #$01                          ; 0x1b8c $9B7C 69 01                    ;
and      #$03                          ; 0x1b8e $9B7E 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x1b90 $9B80 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LCC7B                         ; 0x1b92 $9B82 20 7B CC                 ;
L9B85                                                                          ;
lda      $8B                           ; 0x1b95 $9B85 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x1b97 $9B87 18                       ;
adc      #$0A                          ; 0x1b98 $9B88 69 0A                    ;
sta      $8B                           ; 0x1b9a $9B8A 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x1b9c $9B8C A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x1b9e $9B8E 69 00                    ;
sta      $8C                           ; 0x1ba0 $9B90 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0x1ba2 $9B92 E6 89                    ;
lda      $89                           ; 0x1ba4 $9B94 A5 89                    ;
cmp      $8A                           ; 0x1ba6 $9B96 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      L9B56                         ; 0x1ba8 $9B98 30 BC                    ;
ldx      #$0C                          ; 0x1baa $9B9A A2 0C                    ;;X = #$0c 0000_1100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x1bac $9B9C 20 74 95               ;
jsr      LA82E                         ; 0x1baf $9B9F 20 2E A8                 ;
bcc      L9BA9                         ; 0x1bb2 $9BA2 90 05                    ;
lda      #$01                          ; 0x1bb4 $9BA4 A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x1bb6 $9BA6 20 93 E2     ;
L9BA9                                                                          ;
dec      $04                           ; 0x1bb9 $9BA9 C6 04                    ;
bne      L9B40                         ; 0x1bbb $9BAB D0 93                    ;
jmp      LA177                         ; 0x1bbd $9BAD 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BB0                                                                          ;
lda      $3B                           ; 0x1bc0 $9BB0 A5 3B                    ;;player mp
sec                                    ; 0x1bc2 $9BB2 38                       ;
sbc      #$1E                          ; 0x1bc3 $9BB3 E9 1E                    ;
sta      $3B                           ; 0x1bc5 $9BB5 85 3B                    ;;player mp
lda      $36                           ; 0x1bc7 $9BB7 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x1bc9 $9BB9 0A                       ;
asl                                    ; 0x1bca $9BBA 0A                       ;
asl                                    ; 0x1bcb $9BBB 0A                       ;
sta      $44                           ; 0x1bcc $9BBC 85 44                    ;
lda      $37                           ; 0x1bce $9BBE A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x1bd0 $9BC0 0A                       ;
asl                                    ; 0x1bd1 $9BC1 0A                       ;
asl                                    ; 0x1bd2 $9BC2 0A                       ;
sta      $45                           ; 0x1bd3 $9BC3 85 45                    ;
lda      $3F                           ; 0x1bd5 $9BC5 A5 3F                    ;
sta      $46                           ; 0x1bd7 $9BC7 85 46                    ;
ldx      $46                           ; 0x1bd9 $9BC9 A6 46                    ;
bne      L9BD4                         ; 0x1bdb $9BCB D0 07                    ;
lda      $45                           ; 0x1bdd $9BCD A5 45                    ;
clc                                    ; 0x1bdf $9BCF 18                       ;
adc      #$08                          ; 0x1be0 $9BD0 69 08                    ;
sta      $45                           ; 0x1be2 $9BD2 85 45                    ;
L9BD4                                                                          ;
cpx      #$03                          ; 0x1be4 $9BD4 E0 03                    ;
bne      L9BDF                         ; 0x1be6 $9BD6 D0 07                    ;
lda      $44                           ; 0x1be8 $9BD8 A5 44                    ;
clc                                    ; 0x1bea $9BDA 18                       ;
adc      #$08                          ; 0x1beb $9BDB 69 08                    ;
sta      $44                           ; 0x1bed $9BDD 85 44                    ;
L9BDF                                                                          ;
ldx      $46                           ; 0x1bef $9BDF A6 46                    ;
beq      L9BEB                         ; 0x1bf1 $9BE1 F0 08                    ;
dex                                    ; 0x1bf3 $9BE3 CA                       ;
beq      L9BF9                         ; 0x1bf4 $9BE4 F0 13                    ;
dex                                    ; 0x1bf6 $9BE6 CA                       ;
beq      L9C07                         ; 0x1bf7 $9BE7 F0 1E                    ;
bne      L9C15                         ; 0x1bf9 $9BE9 D0 2A                    ;
L9BEB                                                                          ;
lda      $45                           ; 0x1bfb $9BEB A5 45                    ;
clc                                    ; 0x1bfd $9BED 18                       ;
adc      #$02                          ; 0x1bfe $9BEE 69 02                    ;
sta      $45                           ; 0x1c00 $9BF0 85 45                    ;
cmp      #$AA                          ; 0x1c02 $9BF2 C9 AA                    ;
bcc      L9C23                         ; 0x1c04 $9BF4 90 2D                    ;
jmp      L9D61                         ; 0x1c06 $9BF6 4C 61 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BF9                                                                          ;
lda      $44                           ; 0x1c09 $9BF9 A5 44                    ;
sec                                    ; 0x1c0b $9BFB 38                       ;
sbc      #$02                          ; 0x1c0c $9BFC E9 02                    ;
sta      $44                           ; 0x1c0e $9BFE 85 44                    ;
cmp      #$AA                          ; 0x1c10 $9C00 C9 AA                    ;
bcc      L9C23                         ; 0x1c12 $9C02 90 1F                    ;
jmp      L9D61                         ; 0x1c14 $9C04 4C 61 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C07                                                                          ;
lda      $45                           ; 0x1c17 $9C07 A5 45                    ;
sec                                    ; 0x1c19 $9C09 38                       ;
sbc      #$02                          ; 0x1c1a $9C0A E9 02                    ;
sta      $45                           ; 0x1c1c $9C0C 85 45                    ;
cmp      #$AA                          ; 0x1c1e $9C0E C9 AA                    ;
bcc      L9C23                         ; 0x1c20 $9C10 90 11                    ;
jmp      L9D61                         ; 0x1c22 $9C12 4C 61 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C15                                                                          ;
lda      $44                           ; 0x1c25 $9C15 A5 44                    ;
clc                                    ; 0x1c27 $9C17 18                       ;
adc      #$02                          ; 0x1c28 $9C18 69 02                    ;
sta      $44                           ; 0x1c2a $9C1A 85 44                    ;
cmp      #$AA                          ; 0x1c2c $9C1C C9 AA                    ;
bcc      L9C23                         ; 0x1c2e $9C1E 90 03                    ;
jmp      L9D61                         ; 0x1c30 $9C20 4C 61 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C23                                                                          ;
lda      $44                           ; 0x1c33 $9C23 A5 44                    ;
clc                                    ; 0x1c35 $9C25 18                       ;
adc      #$08                          ; 0x1c36 $9C26 69 08                    ;
sta      $02EB                         ; 0x1c38 $9C28 8D EB 02                 ;
lda      $45                           ; 0x1c3b $9C2B A5 45                    ;
clc                                    ; 0x1c3d $9C2D 18                       ;
adc      #$0F                          ; 0x1c3e $9C2E 69 0F                    ;
sta      $02E8                         ; 0x1c40 $9C30 8D E8 02                 ;
lda      $44                           ; 0x1c43 $9C33 A5 44                    ;
clc                                    ; 0x1c45 $9C35 18                       ;
adc      $45                           ; 0x1c46 $9C36 65 45                    ;
and      #$01                          ; 0x1c48 $9C38 29 01                    ;;Keep Bits:0000_0001
clc                                    ; 0x1c4a $9C3A 18                       ;
adc      #$A9                          ; 0x1c4b $9C3B 69 A9                    ;
sta      $02E9                         ; 0x1c4d $9C3D 8D E9 02                 ;
lda      #$00                          ; 0x1c50 $9C40 A9 00                    ;;A = #$00 0000_0000
sta      $02EA                         ; 0x1c52 $9C42 8D EA 02                 ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x1c55 $9C45 20 34 95 ;
jsr      LA82E                         ; 0x1c58 $9C48 20 2E A8                 ;
bcc      L9C52                         ; 0x1c5b $9C4B 90 05                    ;
lda      #$01                          ; 0x1c5d $9C4D A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x1c5f $9C4F 20 93 E2     ;
L9C52                                                                          ;
lda      $44                           ; 0x1c62 $9C52 A5 44                    ;
and      #$07                          ; 0x1c64 $9C54 29 07                    ;;Keep Bits:0000_0111
bne      L9C5E                         ; 0x1c66 $9C56 D0 06                    ;
lda      $45                           ; 0x1c68 $9C58 A5 45                    ;
and      #$07                          ; 0x1c6a $9C5A 29 07                    ;;Keep Bits:0000_0111
beq      L9C61                         ; 0x1c6c $9C5C F0 03                    ;
L9C5E                                                                          ;
jmp      L9BDF                         ; 0x1c6e $9C5E 4C DF 9B                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C61                                                                          ;
lda      $44                           ; 0x1c71 $9C61 A5 44                    ;
lsr                                    ; 0x1c73 $9C63 4A                       ;
lsr                                    ; 0x1c74 $9C64 4A                       ;
lsr                                    ; 0x1c75 $9C65 4A                       ;
sta      $9E                           ; 0x1c76 $9C66 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $45                           ; 0x1c78 $9C68 A5 45                    ;
lsr                                    ; 0x1c7a $9C6A 4A                       ;
lsr                                    ; 0x1c7b $9C6B 4A                       ;
lsr                                    ; 0x1c7c $9C6C 4A                       ;
sta      $9F                           ; 0x1c7d $9C6D 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x1c7f $9C6F 20 B9 DE                 ;
ldy      #$00                          ; 0x1c82 $9C72 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x1c84 $9C74 B1 0E                    ;
and      #$C0                          ; 0x1c86 $9C76 29 C0                    ;;Keep Bits:1100_0000
bne      L9C7D                         ; 0x1c88 $9C78 D0 03                    ;
jmp      L9BDF                         ; 0x1c8a $9C7A 4C DF 9B                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C7D                                                                          ;
and      #$40                          ; 0x1c8d $9C7D 29 40                    ;;Keep Bits:0100_0000
bne      L9C84                         ; 0x1c8f $9C7F D0 03                    ;
jmp      L9D07                         ; 0x1c91 $9C81 4C 07 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C84                                                                          ;
lda      #$06                          ; 0x1c94 $9C84 A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x1c96 $9C86 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x1c98 $9C88 A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x1c9a $9C8A 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0x1c9c $9C8C A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x1c9e $9C8E 85 89                    ;
L9C90                                                                          ;
ldy      #$00                          ; 0x1ca0 $9C90 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x1ca2 $9C92 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x1ca4 $9C94 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
ldy      #$04                          ; 0x1ca6 $9C96 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x1ca8 $9C98 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      L9CB1                         ; 0x1caa $9C9A D0 15                    ;
lda      $88                           ; 0x1cac $9C9C A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$0C                          ; 0x1cae $9C9E C9 0C                    ;
beq      L9CB1                         ; 0x1cb0 $9CA0 F0 0F                    ;
cmp      #$0D                          ; 0x1cb2 $9CA2 C9 0D                    ;
beq      L9CB1                         ; 0x1cb4 $9CA4 F0 0B                    ;
lda      #$01                          ; 0x1cb6 $9CA6 A9 01                    ;;A = #$01 0000_0001
sta      $08                           ; 0x1cb8 $9CA8 85 08                    ;;save calc'd attack strength to $08 ?
sta      $09                           ; 0x1cba $9CAA 85 09                    ;
jsr      Spell_Wave__Monsters_Collision_And_Damage0; 0x1cbc $9CAC 20 EE A1     ;
bcs      L9CC9                         ; 0x1cbf $9CAF B0 18                    ;
L9CB1                                                                          ;
lda      $8B                           ; 0x1cc1 $9CB1 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x1cc3 $9CB3 18                       ;
adc      #$0A                          ; 0x1cc4 $9CB4 69 0A                    ;
sta      $8B                           ; 0x1cc6 $9CB6 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x1cc8 $9CB8 A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x1cca $9CBA 69 00                    ;
sta      $8C                           ; 0x1ccc $9CBC 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0x1cce $9CBE E6 89                    ;
lda      $89                           ; 0x1cd0 $9CC0 A5 89                    ;
cmp      $8A                           ; 0x1cd2 $9CC2 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      L9C90                         ; 0x1cd4 $9CC4 30 CA                    ;
jmp      L9D61                         ; 0x1cd6 $9CC6 4C 61 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9CC9                                                                          ;
;something                                                                     ;
jsr      LA255                         ; 0x1cd9 $9CC9 20 55 A2                 ;
;load monster type                                                             ;
lda      $88                           ; 0x1cdc $9CCC A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;monster 06:	VAMPIRE                                                           ;
cmp      #$06                          ; 0x1cde $9CCE C9 06                    ;
beq      L9CEA                         ; 0x1ce0 $9CD0 F0 18                    ;
;monster 0B:	WIZARD@                                                           ;
cmp      #$0B                          ; 0x1ce2 $9CD2 C9 0B                    ;
beq      L9CEA                         ; 0x1ce4 $9CD4 F0 14                    ;
;monster 10:	WISP@@@                                                           ;
cmp      #$10                          ; 0x1ce6 $9CD6 C9 10                    ;
beq      L9CEA                         ; 0x1ce8 $9CD8 F0 10                    ;
;monster 11:	FIREBAL                                                           ;
cmp      #$11                          ; 0x1cea $9CDA C9 11                    ;
beq      L9CEA                         ; 0x1cec $9CDC F0 0C                    ;
;monster 12:	DRAGON@                                                           ;
cmp      #$12                          ; 0x1cee $9CDE C9 12                    ;
beq      L9CEA                         ; 0x1cf0 $9CE0 F0 08                    ;
;monster 13:	VARALYS                                                           ;
cmp      #$13                          ; 0x1cf2 $9CE2 C9 13                    ;
beq      L9CEA                         ; 0x1cf4 $9CE4 F0 04                    ;
;if it's any of the monsters listed above, set player str to #$00              ;
lda      $39                           ; 0x1cf6 $9CE6 A5 39                    ;;player str
bne      L9CEC                         ; 0x1cf8 $9CE8 D0 02                    ;
L9CEA                                                                          ;
lda      #$00                          ; 0x1cfa $9CEA A9 00                    ;;A = #$00 0000_0000
;save player attack strength (calculated) to $08                               ;
;monster variable index 8: 6F4 	                                               ;Enemy 0 - HPOffset                8
L9CEC                                                                          ;
ldy      #$08                          ; 0x1cfc $9CEC A0 08                    ;;Y = #$08 0000_1000
sta      $08                           ; 0x1cfe $9CEE 85 08                    ;;save calc'd attack strength to $08 ?
;load monster HP                                                               ;
lda      ($8B),y                       ; 0x1d00 $9CF0 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;subtract player attack strength (calculated)                                  ;
sec                                    ; 0x1d02 $9CF2 38                       ;
sbc      $08                           ; 0x1d03 $9CF3 E5 08                    ;;save calc'd attack strength to $08 ?
;update monster HP                                                             ;
sta      ($8B),y                       ; 0x1d05 $9CF5 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;if monster hp is ==0 goto $9CFB                                               ;
beq      L9CFB                         ; 0x1d07 $9CF7 F0 02                    ;
;if monster hp is <0  goto $9D04                                               ;
bpl      L9D04                         ; 0x1d09 $9CF9 10 09                    ;
L9CFB                                                                          ;
jsr      Monster__PickAndSetRND_OffscreenTimer; 0x1d0b $9CFB 20 75 C8          ;
jsr      L96CA                         ; 0x1d0e $9CFE 20 CA 96                 ;
jmp      L9D61                         ; 0x1d11 $9D01 4C 61 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9D04                                                                          ;
jsr      LCF77                         ; 0x1d14 $9D04 20 77 CF                 ;
L9D07                                                                          ;
lda      $47                           ; 0x1d17 $9D07 A5 47                    ;;player CurrentArea       
cmp      #$11                          ; 0x1d19 $9D09 C9 11                    ;
bne      L9D61                         ; 0x1d1b $9D0B D0 54                    ;
lda      $9E                           ; 0x1d1d $9D0D A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$0A                          ; 0x1d1f $9D0F C9 0A                    ;
bne      L9D61                         ; 0x1d21 $9D11 D0 4E                    ;
lda      $9F                           ; 0x1d23 $9D13 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$06                          ; 0x1d25 $9D15 C9 06                    ;
bne      L9D61                         ; 0x1d27 $9D17 D0 48                    ;
lda      #$0C                          ; 0x1d29 $9D19 A9 0C                    ;;A = #$0c 0000_1100
sta      $04                           ; 0x1d2b $9D1B 85 04                    ;
L9D1D                                                                          ;
lda      $44                           ; 0x1d2d $9D1D A5 44                    ;
clc                                    ; 0x1d2f $9D1F 18                       ;
adc      #$08                          ; 0x1d30 $9D20 69 08                    ;
sta      $A8                           ; 0x1d32 $9D22 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $45                           ; 0x1d34 $9D24 A5 45                    ;
clc                                    ; 0x1d36 $9D26 18                       ;
adc      #$0F                          ; 0x1d37 $9D27 69 0F                    ;
sta      $A9                           ; 0x1d39 $9D29 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$02                          ; 0x1d3b $9D2B A9 02                    ;;A = #$02 0000_0010
sta      $AA                           ; 0x1d3d $9D2D 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      $04                           ; 0x1d3f $9D2F A5 04                    ;
and      #$01                          ; 0x1d41 $9D31 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x1d43 $9D33 0A                       ;
asl                                    ; 0x1d44 $9D34 0A                       ;
adc      #$A1                          ; 0x1d45 $9D35 69 A1                    ;
sta      $AB                           ; 0x1d47 $9D37 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      #$D4                          ; 0x1d49 $9D39 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x1d4b $9D3B 85 AD                    ;
lda      #$23                          ; 0x1d4d $9D3D A9 23                    ;;A = #$23 0010_0011
sta      $AC                           ; 0x1d4f $9D3F 85 AC                    ;
ldy      #$00                          ; 0x1d51 $9D41 A0 00                    ;;Y = #$00 0000_0000
ldx      #$E8                          ; 0x1d53 $9D43 A2 E8                    ;;X = #$e8 1110_1000
jsr      L9F34                         ; 0x1d55 $9D45 20 34 9F                 ;
jsr      L9F34                         ; 0x1d58 $9D48 20 34 9F                 ;
ldx      #$0C                          ; 0x1d5b $9D4B A2 0C                    ;;X = #$0c 0000_1100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x1d5d $9D4D 20 74 95               ;
dec      $04                           ; 0x1d60 $9D50 C6 04                    ;
bne      L9D1D                         ; 0x1d62 $9D52 D0 C9                    ;
lda      #$FF                          ; 0x1d64 $9D54 A9 FF                    ;;A = #$ff 1111_1111
sta      $74                           ; 0x1d66 $9D56 85 74                    ;;FF=castle's tree has been burned and is now a hole 
ldx      #$0A                          ; 0x1d68 $9D58 A2 0A                    ;;X = #$0a 0000_1010
ldy      #$06                          ; 0x1d6a $9D5A A0 06                    ;;Y = #$06 0000_0110
lda      #$15                          ; 0x1d6c $9D5C A9 15                    ;;A = #$15 0001_0101
jsr      L8E41                         ; 0x1d6e $9D5E 20 41 8E                 ;
L9D61                                                                          ;
jmp      LA177                         ; 0x1d71 $9D61 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9D64                                                                          ;
lda      $3B                           ; 0x1d74 $9D64 A5 3B                    ;;player mp
sec                                    ; 0x1d76 $9D66 38                       ;
sbc      #$28                          ; 0x1d77 $9D67 E9 28                    ;
sta      $3B                           ; 0x1d79 $9D69 85 3B                    ;;player mp
lda      $36                           ; 0x1d7b $9D6B A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x1d7d $9D6D 0A                       ;
asl                                    ; 0x1d7e $9D6E 0A                       ;
asl                                    ; 0x1d7f $9D6F 0A                       ;
sta      $44                           ; 0x1d80 $9D70 85 44                    ;
lda      $37                           ; 0x1d82 $9D72 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x1d84 $9D74 0A                       ;
asl                                    ; 0x1d85 $9D75 0A                       ;
asl                                    ; 0x1d86 $9D76 0A                       ;
sta      $45                           ; 0x1d87 $9D77 85 45                    ;
lda      $3F                           ; 0x1d89 $9D79 A5 3F                    ;
sta      $46                           ; 0x1d8b $9D7B 85 46                    ;
ldx      $46                           ; 0x1d8d $9D7D A6 46                    ;
bne      L9D88                         ; 0x1d8f $9D7F D0 07                    ;
lda      $45                           ; 0x1d91 $9D81 A5 45                    ;
clc                                    ; 0x1d93 $9D83 18                       ;
adc      #$08                          ; 0x1d94 $9D84 69 08                    ;
sta      $45                           ; 0x1d96 $9D86 85 45                    ;
L9D88                                                                          ;
cpx      #$03                          ; 0x1d98 $9D88 E0 03                    ;
bne      L9D93                         ; 0x1d9a $9D8A D0 07                    ;
lda      $44                           ; 0x1d9c $9D8C A5 44                    ;
clc                                    ; 0x1d9e $9D8E 18                       ;
adc      #$08                          ; 0x1d9f $9D8F 69 08                    ;
sta      $44                           ; 0x1da1 $9D91 85 44                    ;
L9D93                                                                          ;
ldx      $46                           ; 0x1da3 $9D93 A6 46                    ;
beq      L9D9F                         ; 0x1da5 $9D95 F0 08                    ;
dex                                    ; 0x1da7 $9D97 CA                       ;
beq      L9DAD                         ; 0x1da8 $9D98 F0 13                    ;
dex                                    ; 0x1daa $9D9A CA                       ;
beq      L9DBB                         ; 0x1dab $9D9B F0 1E                    ;
bne      L9DC9                         ; 0x1dad $9D9D D0 2A                    ;
L9D9F                                                                          ;
lda      $45                           ; 0x1daf $9D9F A5 45                    ;
clc                                    ; 0x1db1 $9DA1 18                       ;
adc      #$02                          ; 0x1db2 $9DA2 69 02                    ;
sta      $45                           ; 0x1db4 $9DA4 85 45                    ;
cmp      #$AA                          ; 0x1db6 $9DA6 C9 AA                    ;
bcc      L9DD7                         ; 0x1db8 $9DA8 90 2D                    ;
jmp      L9EA4                         ; 0x1dba $9DAA 4C A4 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9DAD                                                                          ;
lda      $44                           ; 0x1dbd $9DAD A5 44                    ;
sec                                    ; 0x1dbf $9DAF 38                       ;
sbc      #$02                          ; 0x1dc0 $9DB0 E9 02                    ;
sta      $44                           ; 0x1dc2 $9DB2 85 44                    ;
cmp      #$AA                          ; 0x1dc4 $9DB4 C9 AA                    ;
bcc      L9DD7                         ; 0x1dc6 $9DB6 90 1F                    ;
jmp      L9EA4                         ; 0x1dc8 $9DB8 4C A4 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9DBB                                                                          ;
lda      $45                           ; 0x1dcb $9DBB A5 45                    ;
sec                                    ; 0x1dcd $9DBD 38                       ;
sbc      #$02                          ; 0x1dce $9DBE E9 02                    ;
sta      $45                           ; 0x1dd0 $9DC0 85 45                    ;
cmp      #$AA                          ; 0x1dd2 $9DC2 C9 AA                    ;
bcc      L9DD7                         ; 0x1dd4 $9DC4 90 11                    ;
jmp      L9EA4                         ; 0x1dd6 $9DC6 4C A4 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9DC9                                                                          ;
lda      $44                           ; 0x1dd9 $9DC9 A5 44                    ;
clc                                    ; 0x1ddb $9DCB 18                       ;
adc      #$02                          ; 0x1ddc $9DCC 69 02                    ;
sta      $44                           ; 0x1dde $9DCE 85 44                    ;
cmp      #$AA                          ; 0x1de0 $9DD0 C9 AA                    ;
bcc      L9DD7                         ; 0x1de2 $9DD2 90 03                    ;
jmp      L9EA4                         ; 0x1de4 $9DD4 4C A4 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9DD7                                                                          ;
lda      $44                           ; 0x1de7 $9DD7 A5 44                    ;
clc                                    ; 0x1de9 $9DD9 18                       ;
adc      #$08                          ; 0x1dea $9DDA 69 08                    ;
sta      $02EB                         ; 0x1dec $9DDC 8D EB 02                 ;
lda      $45                           ; 0x1def $9DDF A5 45                    ;
clc                                    ; 0x1df1 $9DE1 18                       ;
adc      #$0F                          ; 0x1df2 $9DE2 69 0F                    ;
sta      $02E8                         ; 0x1df4 $9DE4 8D E8 02                 ;
lda      #$F2                          ; 0x1df7 $9DE7 A9 F2                    ;;A = #$f2 1111_0010
sta      $02E9                         ; 0x1df9 $9DE9 8D E9 02                 ;
lda      #$00                          ; 0x1dfc $9DEC A9 00                    ;;A = #$00 0000_0000
sta      $02EA                         ; 0x1dfe $9DEE 8D EA 02                 ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x1e01 $9DF1 20 34 95 ;
jsr      LA82E                         ; 0x1e04 $9DF4 20 2E A8                 ;
bcc      L9DFE                         ; 0x1e07 $9DF7 90 05                    ;
lda      #$01                          ; 0x1e09 $9DF9 A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x1e0b $9DFB 20 93 E2     ;
L9DFE                                                                          ;
lda      $44                           ; 0x1e0e $9DFE A5 44                    ;
and      #$07                          ; 0x1e10 $9E00 29 07                    ;;Keep Bits:0000_0111
bne      L9E0A                         ; 0x1e12 $9E02 D0 06                    ;
L9E04                                                                          ;
lda      $45                           ; 0x1e14 $9E04 A5 45                    ;
and      #$07                          ; 0x1e16 $9E06 29 07                    ;;Keep Bits:0000_0111
beq      L9E0D                         ; 0x1e18 $9E08 F0 03                    ;
L9E0A                                                                          ;
jmp      L9D93                         ; 0x1e1a $9E0A 4C 93 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E0D                                                                          ;
lda      $44                           ; 0x1e1d $9E0D A5 44                    ;
lsr                                    ; 0x1e1f $9E0F 4A                       ;
lsr                                    ; 0x1e20 $9E10 4A                       ;
lsr                                    ; 0x1e21 $9E11 4A                       ;
sta      $9E                           ; 0x1e22 $9E12 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $45                           ; 0x1e24 $9E14 A5 45                    ;
lsr                                    ; 0x1e26 $9E16 4A                       ;
lsr                                    ; 0x1e27 $9E17 4A                       ;
lsr                                    ; 0x1e28 $9E18 4A                       ;
sta      $9F                           ; 0x1e29 $9E19 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x1e2b $9E1B 20 B9 DE                 ;
ldy      #$00                          ; 0x1e2e $9E1E A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x1e30 $9E20 B1 0E                    ;
and      #$40                          ; 0x1e32 $9E22 29 40                    ;;Keep Bits:0100_0000
bne      L9E29                         ; 0x1e34 $9E24 D0 03                    ;
jmp      L9D93                         ; 0x1e36 $9E26 4C 93 9D                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E29                                                                          ;
lda      #$06                          ; 0x1e39 $9E29 A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x1e3b $9E2B 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x1e3d $9E2D A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x1e3f $9E2F 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0x1e41 $9E31 A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x1e43 $9E33 85 89                    ;
L9E35                                                                          ;
ldy      #$00                          ; 0x1e45 $9E35 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x1e47 $9E37 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x1e49 $9E39 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
ldy      #$04                          ; 0x1e4b $9E3B A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x1e4d $9E3D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      L9E56                         ; 0x1e4f $9E3F D0 15                    ;
lda      $88                           ; 0x1e51 $9E41 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$0C                          ; 0x1e53 $9E43 C9 0C                    ;
beq      L9E56                         ; 0x1e55 $9E45 F0 0F                    ;
cmp      #$0D                          ; 0x1e57 $9E47 C9 0D                    ;
beq      L9E56                         ; 0x1e59 $9E49 F0 0B                    ;
lda      #$01                          ; 0x1e5b $9E4B A9 01                    ;;A = #$01 0000_0001
sta      $08                           ; 0x1e5d $9E4D 85 08                    ;;save calc'd attack strength to $08 ?
sta      $09                           ; 0x1e5f $9E4F 85 09                    ;
jsr      Spell_Wave__Monsters_Collision_And_Damage0; 0x1e61 $9E51 20 EE A1     ;
bcs      L9E6E                         ; 0x1e64 $9E54 B0 18                    ;
L9E56                                                                          ;
lda      $8B                           ; 0x1e66 $9E56 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x1e68 $9E58 18                       ;
adc      #$0A                          ; 0x1e69 $9E59 69 0A                    ;
sta      $8B                           ; 0x1e6b $9E5B 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x1e6d $9E5D A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x1e6f $9E5F 69 00                    ;
sta      $8C                           ; 0x1e71 $9E61 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0x1e73 $9E63 E6 89                    ;
lda      $89                           ; 0x1e75 $9E65 A5 89                    ;
cmp      $8A                           ; 0x1e77 $9E67 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      L9E35                         ; 0x1e79 $9E69 30 CA                    ;
jmp      L9EA4                         ; 0x1e7b $9E6B 4C A4 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E6E                                                                          ;
jsr      LA255                         ; 0x1e7e $9E6E 20 55 A2                 ;
lda      $88                           ; 0x1e81 $9E71 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$06                          ; 0x1e83 $9E73 C9 06                    ;
beq      L9E87                         ; 0x1e85 $9E75 F0 10                    ;
cmp      #$0B                          ; 0x1e87 $9E77 C9 0B                    ;
beq      L9E87                         ; 0x1e89 $9E79 F0 0C                    ;
cmp      #$12                          ; 0x1e8b $9E7B C9 12                    ;
beq      L9E87                         ; 0x1e8d $9E7D F0 08                    ;
cmp      #$13                          ; 0x1e8f $9E7F C9 13                    ;
beq      L9E87                         ; 0x1e91 $9E81 F0 04                    ;
lda      $39                           ; 0x1e93 $9E83 A5 39                    ;;player str
bne      L9E89                         ; 0x1e95 $9E85 D0 02                    ;
L9E87                                                                          ;
lda      #$00                          ; 0x1e97 $9E87 A9 00                    ;;A = #$00 0000_0000
L9E89                                                                          ;
ldy      #$08                          ; 0x1e99 $9E89 A0 08                    ;;Y = #$08 0000_1000
sta      $08                           ; 0x1e9b $9E8B 85 08                    ;;save calc'd attack strength to $08 ?
lda      ($8B),y                       ; 0x1e9d $9E8D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x1e9f $9E8F 38                       ;
sbc      $08                           ; 0x1ea0 $9E90 E5 08                    ;;save calc'd attack strength to $08 ?
sta      ($8B),y                       ; 0x1ea2 $9E92 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      L9E98                         ; 0x1ea4 $9E94 F0 02                    ;
bpl      L9EA1                         ; 0x1ea6 $9E96 10 09                    ;
L9E98                                                                          ;
jsr      Monster__PickAndSetRND_OffscreenTimer; 0x1ea8 $9E98 20 75 C8          ;
jsr      L96CA                         ; 0x1eab $9E9B 20 CA 96                 ;
jmp      L9EA4                         ; 0x1eae $9E9E 4C A4 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9EA1                                                                          ;
jsr      LCF77                         ; 0x1eb1 $9EA1 20 77 CF                 ;
L9EA4                                                                          ;
jmp      LA177                         ; 0x1eb4 $9EA4 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9EA7                                                                          ;
lda      $3F                           ; 0x1eb7 $9EA7 A5 3F                    ;
and      #$01                          ; 0x1eb9 $9EA9 29 01                    ;;Keep Bits:0000_0001
bne      L9EB0                         ; 0x1ebb $9EAB D0 03                    ;
jmp      LA177                         ; 0x1ebd $9EAD 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9EB0                                                                          ;
lda      $3B                           ; 0x1ec0 $9EB0 A5 3B                    ;;player mp
sec                                    ; 0x1ec2 $9EB2 38                       ;
sbc      #$32                          ; 0x1ec3 $9EB3 E9 32                    ;
sta      $3B                           ; 0x1ec5 $9EB5 85 3B                    ;;player mp
lda      #$00                          ; 0x1ec7 $9EB7 A9 00                    ;;A = #$00 0000_0000
sta      $78                           ; 0x1ec9 $9EB9 85 78                    ;
sta      $79                           ; 0x1ecb $9EBB 85 79                    ;
lda      $36                           ; 0x1ecd $9EBD A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x1ecf $9EBF 0A                       ;
asl                                    ; 0x1ed0 $9EC0 0A                       ;
asl                                    ; 0x1ed1 $9EC1 0A                       ;
sta      $44                           ; 0x1ed2 $9EC2 85 44                    ;
lda      $37                           ; 0x1ed4 $9EC4 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x1ed6 $9EC6 0A                       ;
asl                                    ; 0x1ed7 $9EC7 0A                       ;
asl                                    ; 0x1ed8 $9EC8 0A                       ;
sta      $45                           ; 0x1ed9 $9EC9 85 45                    ;
lda      $3F                           ; 0x1edb $9ECB A5 3F                    ;
sta      $46                           ; 0x1edd $9ECD 85 46                    ;
ldx      $46                           ; 0x1edf $9ECF A6 46                    ;
cpx      #$01                          ; 0x1ee1 $9ED1 E0 01                    ;
bne      L9ED9                         ; 0x1ee3 $9ED3 D0 04                    ;
dec      $44                           ; 0x1ee5 $9ED5 C6 44                    ;
dec      $44                           ; 0x1ee7 $9ED7 C6 44                    ;
L9ED9                                                                          ;
cpx      #$03                          ; 0x1ee9 $9ED9 E0 03                    ;
bne      L9EE1                         ; 0x1eeb $9EDB D0 04                    ;
inc      $44                           ; 0x1eed $9EDD E6 44                    ;
inc      $44                           ; 0x1eef $9EDF E6 44                    ;
L9EE1                                                                          ;
ldx      $46                           ; 0x1ef1 $9EE1 A6 46                    ;
dex                                    ; 0x1ef3 $9EE3 CA                       ;
beq      L9EE8                         ; 0x1ef4 $9EE4 F0 02                    ;
bne      L9EF6                         ; 0x1ef6 $9EE6 D0 0E                    ;
L9EE8                                                                          ;
lda      $44                           ; 0x1ef8 $9EE8 A5 44                    ;
sec                                    ; 0x1efa $9EEA 38                       ;
sbc      #$02                          ; 0x1efb $9EEB E9 02                    ;
sta      $44                           ; 0x1efd $9EED 85 44                    ;
cmp      #$A2                          ; 0x1eff $9EEF C9 A2                    ;
bcc      L9F04                         ; 0x1f01 $9EF1 90 11                    ;
jmp      LA070                         ; 0x1f03 $9EF3 4C 70 A0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9EF6                                                                          ;
lda      $44                           ; 0x1f06 $9EF6 A5 44                    ;
clc                                    ; 0x1f08 $9EF8 18                       ;
adc      #$02                          ; 0x1f09 $9EF9 69 02                    ;
sta      $44                           ; 0x1f0b $9EFB 85 44                    ;
cmp      #$A2                          ; 0x1f0d $9EFD C9 A2                    ;
bcc      L9F04                         ; 0x1f0f $9EFF 90 03                    ;
jmp      LA070                         ; 0x1f11 $9F01 4C 70 A0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9F04                                                                          ;
lda      $44                           ; 0x1f14 $9F04 A5 44                    ;
clc                                    ; 0x1f16 $9F06 18                       ;
adc      #$08                          ; 0x1f17 $9F07 69 08                    ;
sta      $A8                           ; 0x1f19 $9F09 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $45                           ; 0x1f1b $9F0B A5 45                    ;
clc                                    ; 0x1f1d $9F0D 18                       ;
adc      #$0F                          ; 0x1f1e $9F0E 69 0F                    ;
sta      $A9                           ; 0x1f20 $9F10 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$EE                          ; 0x1f22 $9F12 A9 EE                    ;;A = #$ee 1110_1110
sta      $AB                           ; 0x1f24 $9F14 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      #$00                          ; 0x1f26 $9F16 A9 00                    ;;A = #$00 0000_0000
sta      $AA                           ; 0x1f28 $9F18 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$D4                          ; 0x1f2a $9F1A A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x1f2c $9F1C 85 AD                    ;
lda      #$23                          ; 0x1f2e $9F1E A9 23                    ;;A = #$23 0010_0011
sta      $AC                           ; 0x1f30 $9F20 85 AC                    ;
lda      $46                           ; 0x1f32 $9F22 A5 46                    ;
and      #$02                          ; 0x1f34 $9F24 29 02                    ;;Keep Bits:0000_0010
asl                                    ; 0x1f36 $9F26 0A                       ;
asl                                    ; 0x1f37 $9F27 0A                       ;
tay                                    ; 0x1f38 $9F28 A8                       ;
ldx      #$E8                          ; 0x1f39 $9F29 A2 E8                    ;;X = #$e8 1110_1000
jsr      L9F34                         ; 0x1f3b $9F2B 20 34 9F                 ;
jsr      L9F34                         ; 0x1f3e $9F2E 20 34 9F                 ;
jmp      L9F7F                         ; 0x1f41 $9F31 4C 7F 9F                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9F34                                                                          ;
lda      $A9                           ; 0x1f44 $9F34 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x1f46 $9F36 9D 00 02                 ;
inx                                    ; 0x1f49 $9F39 E8                       ;
lda      ($AC),y                       ; 0x1f4a $9F3A B1 AC                    ;
iny                                    ; 0x1f4c $9F3C C8                       ;
clc                                    ; 0x1f4d $9F3D 18                       ;
adc      $AB                           ; 0x1f4e $9F3E 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x1f50 $9F40 9D 00 02                 ;
inx                                    ; 0x1f53 $9F43 E8                       ;
lda      ($AC),y                       ; 0x1f54 $9F44 B1 AC                    ;
iny                                    ; 0x1f56 $9F46 C8                       ;
clc                                    ; 0x1f57 $9F47 18                       ;
adc      $AA                           ; 0x1f58 $9F48 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x1f5a $9F4A 9D 00 02                 ;
inx                                    ; 0x1f5d $9F4D E8                       ;
lda      $A8                           ; 0x1f5e $9F4E A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x1f60 $9F50 9D 00 02                 ;
inx                                    ; 0x1f63 $9F53 E8                       ;
lda      $A9                           ; 0x1f64 $9F54 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x1f66 $9F56 9D 00 02                 ;
inx                                    ; 0x1f69 $9F59 E8                       ;
lda      ($AC),y                       ; 0x1f6a $9F5A B1 AC                    ;
iny                                    ; 0x1f6c $9F5C C8                       ;
clc                                    ; 0x1f6d $9F5D 18                       ;
adc      $AB                           ; 0x1f6e $9F5E 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x1f70 $9F60 9D 00 02                 ;
inx                                    ; 0x1f73 $9F63 E8                       ;
lda      ($AC),y                       ; 0x1f74 $9F64 B1 AC                    ;
iny                                    ; 0x1f76 $9F66 C8                       ;
clc                                    ; 0x1f77 $9F67 18                       ;
adc      $AA                           ; 0x1f78 $9F68 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x1f7a $9F6A 9D 00 02                 ;
inx                                    ; 0x1f7d $9F6D E8                       ;
lda      $A8                           ; 0x1f7e $9F6E A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x1f80 $9F70 18                       ;
adc      #$08                          ; 0x1f81 $9F71 69 08                    ;
sta      $0200,x                       ; 0x1f83 $9F73 9D 00 02                 ;
inx                                    ; 0x1f86 $9F76 E8                       ;
lda      $A9                           ; 0x1f87 $9F77 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x1f89 $9F79 18                       ;
adc      #$08                          ; 0x1f8a $9F7A 69 08                    ;
sta      $A9                           ; 0x1f8c $9F7C 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x1f8e $9F7E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9F7F                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x1f8f $9F7F 20 34 95 ;
jsr      LA82E                         ; 0x1f92 $9F82 20 2E A8                 ;
bcc      L9F8C                         ; 0x1f95 $9F85 90 05                    ;
lda      #$01                          ; 0x1f97 $9F87 A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x1f99 $9F89 20 93 E2     ;
L9F8C                                                                          ;
lda      $44                           ; 0x1f9c $9F8C A5 44                    ;
and      #$07                          ; 0x1f9e $9F8E 29 07                    ;;Keep Bits:0000_0111
bne      L9F98                         ; 0x1fa0 $9F90 D0 06                    ;
lda      $45                           ; 0x1fa2 $9F92 A5 45                    ;
and      #$07                          ; 0x1fa4 $9F94 29 07                    ;;Keep Bits:0000_0111
beq      L9F9B                         ; 0x1fa6 $9F96 F0 03                    ;
L9F98                                                                          ;
jmp      L9EE1                         ; 0x1fa8 $9F98 4C E1 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9F9B                                                                          ;
lda      $44                           ; 0x1fab $9F9B A5 44                    ;
lsr                                    ; 0x1fad $9F9D 4A                       ;
lsr                                    ; 0x1fae $9F9E 4A                       ;
lsr                                    ; 0x1faf $9F9F 4A                       ;
sta      $9E                           ; 0x1fb0 $9FA0 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $45                           ; 0x1fb2 $9FA2 A5 45                    ;
lsr                                    ; 0x1fb4 $9FA4 4A                       ;
lsr                                    ; 0x1fb5 $9FA5 4A                       ;
lsr                                    ; 0x1fb6 $9FA6 4A                       ;
sta      $9F                           ; 0x1fb7 $9FA7 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x1fb9 $9FA9 20 B9 DE                 ;
ldy      #$00                          ; 0x1fbc $9FAC A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x1fbe $9FAE B1 0E                    ;
iny                                    ; 0x1fc0 $9FB0 C8                       ;
ora      ($0E),y                       ; 0x1fc1 $9FB1 11 0E                    ;
ldy      #$16                          ; 0x1fc3 $9FB3 A0 16                    ;;Y = #$16 0001_0110
ora      ($0E),y                       ; 0x1fc5 $9FB5 11 0E                    ;
iny                                    ; 0x1fc7 $9FB7 C8                       ;
ora      ($0E),y                       ; 0x1fc8 $9FB8 11 0E                    ;
and      #$40                          ; 0x1fca $9FBA 29 40                    ;;Keep Bits:0100_0000
bne      L9FC1                         ; 0x1fcc $9FBC D0 03                    ;
jmp      L9EE1                         ; 0x1fce $9FBE 4C E1 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9FC1                                                                          ;
;setup 		$96 (high addy) ->$8C                                                 ;
;	and 	$95 (low addy)  ->$8B                                                   ;
;	as addy for pointer ($8B)                                                    ;
;address $6EC is monster 0 variables (with the other monsters following)       ;
;each monsters has 0xA bytes of data                                           ;
lda      #$06                          ; 0x1fd1 $9FC1 A9 06                    ;$6EC 	;Enemy 0 - TypeOffset              0				
sta      $96                           ; 0x1fd3 $9FC3 85 96                    ;96->8C (high addy)
lda      #$EC                          ; 0x1fd5 $9FC5 A9 EC                    ;;A = #$ec 1110_1100
sta      $95                           ; 0x1fd7 $9FC7 85 95                    ;95->8B (low addy)
lda      #$00                          ; 0x1fd9 $9FC9 A9 00                    ;;A = #$00 0000_0000
sta      $94                           ; 0x1fdb $9FCB 85 94                    ;
L9FCD                                                                          ;
;point ($8B) with the values in $95 and $96                                    ;
lda      $96                           ; 0x1fdd $9FCD A5 96                    ;#$06 
sta      $8C                           ; 0x1fdf $9FCF 85 8C                    ;high addy
lda      $95                           ; 0x1fe1 $9FD1 A5 95                    ;#$EC
sta      $8B                           ; 0x1fe3 $9FD3 85 8B                    ;low addy
;start reading from monsterVariables                                           ;
;load monster's typeOffset		save to $88                                        ;
ldy      #$00                          ; 0x1fe5 $9FD5 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x1fe7 $9FD7 B1 8B                    ;load from $6EC 	(Enemy 0 TypeOffset ,  Y)
sta      $88                           ; 0x1fe9 $9FD9 85 88                    ;save monster's "typeOffset"(?) to $88
;load monster's OffscreenTimerOffset from monsterVariables                     ;
;monster variable index 4 = OffscreenTimerOffset                               ;
ldy      #$04                          ; 0x1feb $9FDB A0 04                    ;monster variable index 4 = OffscreenTimerOffset    
lda      ($8B),y                       ; 0x1fed $9FDD B1 8B                    ;load monster's "OffscreenTimerOffset"
bne      L9FF9                         ; 0x1fef $9FDF D0 18                    ;if OffscreenTimerOffset is set (not-zero), goto $9FF9
;if monster's "typeOffset"(?) is equal to #$0C or #$0D, goto $9FF9             ;
lda      $88                           ; 0x1ff1 $9FE1 A5 88                    ;otherwise load monster's "typeOffset"(?)
cmp      #$0C                          ; 0x1ff3 $9FE3 C9 0C                    ;if monster's "typeOffset"(?) is equal to #$0C or #$0D, goto $9FF9
beq      L9FF9                         ; 0x1ff5 $9FE5 F0 12                    ;
cmp      #$0D                          ; 0x1ff7 $9FE7 C9 0D                    ;
beq      L9FF9                         ; 0x1ff9 $9FE9 F0 0E                    ;
;set $08 and $09 to #$02                                                       ;;Keep Bits:0000_0000
lda      #$02                          ; 0x1ffb $9FEB A9 02                    ;;A = #$02 0000_0010
sta      $08                           ; 0x1ffd $9FED 85 08                    ;set $08=#$02
sta      $09                           ; 0x1fff $9FEF 85 09                    ;set $09=#$02
;do something probably related to spell wave collision and damage distribution ;
jsr      Spell_Wave__Monsters_Collision_And_Damage0; 0x2001 $9FF1 20 EE A1     ;
bcc      L9FF9                         ; 0x2004 $9FF4 90 03                    ;
jsr      Spell_Wave__Monsters_Collision_And_Damage1; 0x2006 $9FF6 20 11 A0     ;
;skip/goto point if timer was set (not=0)                                      ;
L9FF9                                                                          ;
;increment to the next monster (that's 0xA bytes away),  and update our saved-address-for-pointer;
lda      $95                           ; 0x2009 $9FF9 A5 95                    ;possibly is still #$EC
clc                                    ; 0x200b $9FFB 18                       ;
adc      #$0A                          ; 0x200c $9FFC 69 0A                    ;add #$0A , going to Enemy 1   TypeOffset (index=0)
sta      $95                           ; 0x200e $9FFE 85 95                    ;;(low addy)  ->$8B			;used to setup ;pointer used for address $6EC (is monster 0 variables )
lda      $96                           ; 0x2010 $A000 A5 96                    ;;(high addy) ->$8C			;used to setup ;pointer used for address $6EC (is monster 0 variables )
adc      #$00                          ; 0x2012 $A002 69 00                    ;add carry value to high addy??
sta      $96                           ; 0x2014 $A004 85 96                    ;;(high addy) ->$8C			;used to setup ;pointer used for address $6EC (is monster 0 variables )
;something                                                                     ;
;loop counter maybe? or number of monsters existing?                           ;
inc      $94                           ; 0x2016 $A006 E6 94                    ;increase $94, it was #$00? 
lda      $94                           ; 0x2018 $A008 A5 94                    ;
cmp      $8A                           ; 0x201a $A00A C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      L9FCD                         ; 0x201c $A00C 30 BF                    ;loop while $94 < $8A
jmp      L9EE1                         ; 0x201e $A00E 4C E1 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Spell_Wave__Monsters_Collision_And_Damage1                                     ;
jsr      LA255                         ; 0x2021 $A011 20 55 A2                 ;
lda      $88                           ; 0x2024 $A014 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$06                          ; 0x2026 $A016 C9 06                    ;
beq      LA026                         ; 0x2028 $A018 F0 0C                    ;
cmp      #$12                          ; 0x202a $A01A C9 12                    ;
beq      LA026                         ; 0x202c $A01C F0 08                    ;
cmp      #$13                          ; 0x202e $A01E C9 13                    ;
beq      LA026                         ; 0x2030 $A020 F0 04                    ;
lda      $39                           ; 0x2032 $A022 A5 39                    ;;player str
bne      LA028                         ; 0x2034 $A024 D0 02                    ;
LA026                                                                          ;
lda      #$00                          ; 0x2036 $A026 A9 00                    ;;A = #$00 0000_0000
LA028                                                                          ;
ldy      #$08                          ; 0x2038 $A028 A0 08                    ;;Y = #$08 0000_1000
sta      $08                           ; 0x203a $A02A 85 08                    ;;save calc'd attack strength to $08 ?
lda      ($8B),y                       ; 0x203c $A02C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x203e $A02E 38                       ;
sbc      $08                           ; 0x203f $A02F E5 08                    ;;save calc'd attack strength to $08 ?
sta      ($8B),y                       ; 0x2041 $A031 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LA037                         ; 0x2043 $A033 F0 02                    ;
bpl      LA050                         ; 0x2045 $A035 10 19                    ;
LA037                                                                          ;
jsr      Monster__PickAndSetRND_OffscreenTimer; 0x2047 $A037 20 75 C8          ;
jsr      L96CA                         ; 0x204a $A03A 20 CA 96                 ;
lda      $88                           ; 0x204d $A03D A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$0B                          ; 0x204f $A03F C9 0B                    ;
bne      LA045                         ; 0x2051 $A041 D0 02                    ;
inc      $78                           ; 0x2053 $A043 E6 78                    ;
LA045                                                                          ;
lda      $88                           ; 0x2055 $A045 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$09                          ; 0x2057 $A047 C9 09                    ;
bne      LA04D                         ; 0x2059 $A049 D0 02                    ;
inc      $79                           ; 0x205b $A04B E6 79                    ;
LA04D                                                                          ;
jmp      LA053                         ; 0x205d $A04D 4C 53 A0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA050                                                                          ;
jsr      LCF77                         ; 0x2060 $A050 20 77 CF                 ;
LA053                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2063 $A053 20 7D 96             ;
lda      $36                           ; 0x2066 $A056 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x2068 $A058 0A                       ;
asl                                    ; 0x2069 $A059 0A                       ;
asl                                    ; 0x206a $A05A 0A                       ;
clc                                    ; 0x206b $A05B 18                       ;
adc      #$08                          ; 0x206c $A05C 69 08                    ;
sta      $A8                           ; 0x206e $A05E 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0x2070 $A060 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x2072 $A062 0A                       ;
asl                                    ; 0x2073 $A063 0A                       ;
asl                                    ; 0x2074 $A064 0A                       ;
adc      #$0F                          ; 0x2075 $A065 69 0F                    ;
sta      $A9                           ; 0x2077 $A067 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
jsr      L91BF                         ; 0x2079 $A069 20 BF 91                 ;
jsr      LCF46                         ; 0x207c $A06C 20 46 CF                 ;
rts                                    ; 0x207f $A06F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA070                                                                          ;
ldy      #$E8                          ; 0x2080 $A070 A0 E8                    ;;Y = #$e8 1110_1000
lda      #$F8                          ; 0x2082 $A072 A9 F8                    ;;A = #$f8 1111_1000
LA074                                                                          ;
sta      $0200,y                       ; 0x2084 $A074 99 00 02                 ;
iny                                    ; 0x2087 $A077 C8                       ;
cpy      #$F8                          ; 0x2088 $A078 C0 F8                    ;
bne      LA074                         ; 0x208a $A07A D0 F8                    ;
lda      #$00                          ; 0x208c $A07C A9 00                    ;;A = #$00 0000_0000
sta      $7D                           ; 0x208e $A07E 85 7D                    ;
jsr      DrawGraphicBar_for_MP         ; 0x2090 $A080 20 5D 97                 ;
jsr      LA196                         ; 0x2093 $A083 20 96 A1                 ;
lda      #$00                          ; 0x2096 $A086 A9 00                    ;;A = #$00 0000_0000
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x2098 $A088 20 93 E2     ;
lda      $78                           ; 0x209b $A08B A5 78                    ;
cmp      #$02                          ; 0x209d $A08D C9 02                    ;
bmi      LA09A                         ; 0x209f $A08F 30 09                    ;
lda      #$FF                          ; 0x20a1 $A091 A9 FF                    ;;A = #$ff 1111_1111
sta      $66                           ; 0x20a3 $A093 85 66                    ;;FF=got fairy 3 (appears in ITEM)
lda      #$03                          ; 0x20a5 $A095 A9 03                    ;;A = #$03 0000_0011
jsr      GetItem_Or_GetFairy_Maybe     ; 0x20a7 $A097 20 7A 93                 ;
LA09A                                                                          ;
lda      $79                           ; 0x20aa $A09A A5 79                    ;
cmp      #$03                          ; 0x20ac $A09C C9 03                    ;
bmi      LA0A3                         ; 0x20ae $A09E 30 03                    ;
jsr      LB315                         ; 0x20b0 $A0A0 20 15 B3                 ;
LA0A3                                                                          ;
jmp      LA177                         ; 0x20b3 $A0A3 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA0A6                                                                          ;
lda      $3B                           ; 0x20b6 $A0A6 A5 3B                    ;;player mp
sec                                    ; 0x20b8 $A0A8 38                       ;
sbc      #$3C                          ; 0x20b9 $A0A9 E9 3C                    ;
sta      $3B                           ; 0x20bb $A0AB 85 3B                    ;;player mp
lda      #$0C                          ; 0x20bd $A0AD A9 0C                    ;;A = #$0c 0000_1100
sta      $04                           ; 0x20bf $A0AF 85 04                    ;
LA0B1                                                                          ;
lda      #$01                          ; 0x20c1 $A0B1 A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x20c3 $A0B3 20 51 DF  ;
ldx      #$05                          ; 0x20c6 $A0B6 A2 05                    ;;X = #$05 0000_0101
jsr      GameSpeed__TimerDelay__MenuDelay; 0x20c8 $A0B8 20 74 95               ;
jsr      LA82E                         ; 0x20cb $A0BB 20 2E A8                 ;
bcc      LA0C5                         ; 0x20ce $A0BE 90 05                    ;
lda      #$01                          ; 0x20d0 $A0C0 A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x20d2 $A0C2 20 93 E2     ;
LA0C5                                                                          ;
lda      #$00                          ; 0x20d5 $A0C5 A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x20d7 $A0C7 20 51 DF  ;
ldx      #$05                          ; 0x20da $A0CA A2 05                    ;;X = #$05 0000_0101
jsr      GameSpeed__TimerDelay__MenuDelay; 0x20dc $A0CC 20 74 95               ;
jsr      LA82E                         ; 0x20df $A0CF 20 2E A8                 ;
bcc      LA0D9                         ; 0x20e2 $A0D2 90 05                    ;
lda      #$01                          ; 0x20e4 $A0D4 A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x20e6 $A0D6 20 93 E2     ;
LA0D9                                                                          ;
;loop until $04 == 0                                                           ;
dec      $04                           ; 0x20e9 $A0D9 C6 04                    ;
bne      LA0B1                         ; 0x20eb $A0DB D0 D4                    ;
;setup 		$96 (high addy) ->$8C                                                 ;
;	and 	$95 (low addy)  ->$8B                                                   ;
;	as addy for pointer ($8B)                                                    ;
;address $6EC is monster 0 variables (with the other monsters following)       ;
;each monsters has 0xA bytes of data                                           ;
lda      #$06                          ; 0x20ed $A0DD A9 06                    ;;A = #$06 0000_0110
sta      $96                           ; 0x20ef $A0DF 85 96                    ;;(high addy) ->$8C			;used to setup ;pointer used for address $6EC (is monster 0 variables )
lda      #$EC                          ; 0x20f1 $A0E1 A9 EC                    ;;A = #$ec 1110_1100
sta      $95                           ; 0x20f3 $A0E3 85 95                    ;;(low addy)  ->$8B			;used to setup ;pointer used for address $6EC (is monster 0 variables )
;reset $94 (?) to 0                                                            ;
lda      #$00                          ; 0x20f5 $A0E5 A9 00                    ;;A = #$00 0000_0000
sta      $94                           ; 0x20f7 $A0E7 85 94                    ;
LA0E9                                                                          ;
;point ($8B) with the values in $95 and $96                                    ;
lda      $96                           ; 0x20f9 $A0E9 A5 96                    ;;(high addy) ->$8C			;used to setup ;pointer used for address $6EC (is monster 0 variables )
sta      $8C                           ; 0x20fb $A0EB 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      $95                           ; 0x20fd $A0ED A5 95                    ;;(low addy)  ->$8B			;used to setup ;pointer used for address $6EC (is monster 0 variables )
sta      $8B                           ; 0x20ff $A0EF 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
;start reading from monsterVariables                                           ;
;load monster's (index=0) typeOffset		save to $88                              ;
ldy      #$00                          ; 0x2101 $A0F1 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x2103 $A0F3 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x2105 $A0F5 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;load monster's OffscreenTimerOffset from monsterVariables                     ;
;monster variable index 4 = OffscreenTimerOffset                               ;
ldy      #$04                          ; 0x2107 $A0F7 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x2109 $A0F9 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LA10A                         ; 0x210b $A0FB D0 0D                    ;
;if monster's "typeOffset"(?) is equal to #$0C or #$0D, goto $A10A             ;
lda      $88                           ; 0x210d $A0FD A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$0C                          ; 0x210f $A0FF C9 0C                    ;
beq      LA10A                         ; 0x2111 $A101 F0 07                    ;
cmp      #$0D                          ; 0x2113 $A103 C9 0D                    ;
beq      LA10A                         ; 0x2115 $A105 F0 03                    ;
;something ???                                                                 ;
jsr      LA122                         ; 0x2117 $A107 20 22 A1                 ;
;jump point for (if monster's "typeOffset"(?) is equal to #$0C or #$0D)        ;
LA10A                                                                          ;
;increment to the next monster (that's 0xA bytes away),  and update our saved-address-for-pointer;
lda      $95                           ; 0x211a $A10A A5 95                    ;;(low addy)  ->$8B			;used to setup ;pointer used for address $6EC (is monster 0 variables )
clc                                    ; 0x211c $A10C 18                       ;
adc      #$0A                          ; 0x211d $A10D 69 0A                    ;
sta      $95                           ; 0x211f $A10F 85 95                    ;;(low addy)  ->$8B			;used to setup ;pointer used for address $6EC (is monster 0 variables )
lda      $96                           ; 0x2121 $A111 A5 96                    ;;(high addy) ->$8C			;used to setup ;pointer used for address $6EC (is monster 0 variables )
adc      #$00                          ; 0x2123 $A113 69 00                    ;
sta      $96                           ; 0x2125 $A115 85 96                    ;;(high addy) ->$8C			;used to setup ;pointer used for address $6EC (is monster 0 variables )
;something                                                                     ;
;loop counter maybe? or number of monsters existing?                           ;
inc      $94                           ; 0x2127 $A117 E6 94                    ;
lda      $94                           ; 0x2129 $A119 A5 94                    ;
cmp      $8A                           ; 0x212b $A11B C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
;loop while $94 < $8A                                                          ;
bmi      LA0E9                         ; 0x212d $A11D 30 CA                    ;
jmp      LA174                         ; 0x212f $A11F 4C 74 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA122                                                                          ;
jsr      LA255                         ; 0x2132 $A122 20 55 A2                 ;
lda      $88                           ; 0x2135 $A125 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$06                          ; 0x2137 $A127 C9 06                    ;
beq      LA13B                         ; 0x2139 $A129 F0 10                    ;
cmp      #$0B                          ; 0x213b $A12B C9 0B                    ;
beq      LA13B                         ; 0x213d $A12D F0 0C                    ;
cmp      #$12                          ; 0x213f $A12F C9 12                    ;
beq      LA13B                         ; 0x2141 $A131 F0 08                    ;
cmp      #$13                          ; 0x2143 $A133 C9 13                    ;
beq      LA13B                         ; 0x2145 $A135 F0 04                    ;
lda      $39                           ; 0x2147 $A137 A5 39                    ;;player str
bne      LA13D                         ; 0x2149 $A139 D0 02                    ;
LA13B                                                                          ;
lda      #$00                          ; 0x214b $A13B A9 00                    ;;A = #$00 0000_0000
LA13D                                                                          ;
ldy      #$08                          ; 0x214d $A13D A0 08                    ;;Y = #$08 0000_1000
sta      $08                           ; 0x214f $A13F 85 08                    ;;save calc'd attack strength to $08 ?
lda      ($8B),y                       ; 0x2151 $A141 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x2153 $A143 38                       ;
sbc      $08                           ; 0x2154 $A144 E5 08                    ;;save calc'd attack strength to $08 ?
sta      ($8B),y                       ; 0x2156 $A146 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LA14C                         ; 0x2158 $A148 F0 02                    ;
bpl      LA155                         ; 0x215a $A14A 10 09                    ;
LA14C                                                                          ;
jsr      Monster__PickAndSetRND_OffscreenTimer; 0x215c $A14C 20 75 C8          ;
jsr      L96CA                         ; 0x215f $A14F 20 CA 96                 ;
jmp      LA158                         ; 0x2162 $A152 4C 58 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA155                                                                          ;
jsr      LCF77                         ; 0x2165 $A155 20 77 CF                 ;
LA158                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2168 $A158 20 7D 96             ;
lda      $36                           ; 0x216b $A15B A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x216d $A15D 0A                       ;
asl                                    ; 0x216e $A15E 0A                       ;
asl                                    ; 0x216f $A15F 0A                       ;
adc      #$08                          ; 0x2170 $A160 69 08                    ;
sta      $A8                           ; 0x2172 $A162 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0x2174 $A164 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x2176 $A166 0A                       ;
asl                                    ; 0x2177 $A167 0A                       ;
asl                                    ; 0x2178 $A168 0A                       ;
adc      #$0F                          ; 0x2179 $A169 69 0F                    ;
sta      $A9                           ; 0x217b $A16B 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
jsr      L91BF                         ; 0x217d $A16D 20 BF 91                 ;
jsr      LCF46                         ; 0x2180 $A170 20 46 CF                 ;
rts                                    ; 0x2183 $A173 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA174                                                                          ;
jmp      LA177                         ; 0x2184 $A174 4C 77 A1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA177                                                                          ;
ldy      #$E8                          ; 0x2187 $A177 A0 E8                    ;;Y = #$e8 1110_1000
lda      #$F8                          ; 0x2189 $A179 A9 F8                    ;;A = #$f8 1111_1000
LA17B                                                                          ;
sta      $0200,y                       ; 0x218b $A17B 99 00 02                 ;
iny                                    ; 0x218e $A17E C8                       ;
cpy      #$F8                          ; 0x218f $A17F C0 F8                    ;
bne      LA17B                         ; 0x2191 $A181 D0 F8                    ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2193 $A183 20 34 95 ;
lda      #$00                          ; 0x2196 $A186 A9 00                    ;;A = #$00 0000_0000
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x2198 $A188 20 93 E2     ;
lda      #$00                          ; 0x219b $A18B A9 00                    ;;A = #$00 0000_0000
sta      $7D                           ; 0x219d $A18D 85 7D                    ;
jsr      DrawGraphicBar_for_MP         ; 0x219f $A18F 20 5D 97                 ;
jsr      LA196                         ; 0x21a2 $A192 20 96 A1                 ;
rts                                    ; 0x21a5 $A195 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA196                                                                          ;
lda      #$A8                          ; 0x21a6 $A196 A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x21a8 $A198 85 0D                    ;
lda      #$B7                          ; 0x21aa $A19A A9 B7                    ;;A = #$b7 1011_0111
sta      $0C                           ; 0x21ac $A19C 85 0C                    ;
lda      #$05                          ; 0x21ae $A19E A9 05                    ;;A = #$05 0000_0101
sta      $A0                           ; 0x21b0 $A1A0 85 A0                    ;
ldx      #$02                          ; 0x21b2 $A1A2 A2 02                    ;;X = #$02 0000_0010
stx      $9E                           ; 0x21b4 $A1A4 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$19                          ; 0x21b6 $A1A6 A0 19                    ;;Y = #$19 0001_1001
sty      $9F                           ; 0x21b8 $A1A8 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$01                          ; 0x21ba $A1AA A9 01                    ;;A = #$01 0000_0001
sta      $04                           ; 0x21bc $A1AC 85 04                    ;
jsr      L951A                         ; 0x21be $A1AE 20 1A 95                 ;
jsr      LA1BD                         ; 0x21c1 $A1B1 20 BD A1                 ;
jsr      LA1BD                         ; 0x21c4 $A1B4 20 BD A1                 ;
jsr      LA1BD                         ; 0x21c7 $A1B7 20 BD A1                 ;
jsr      LA1BD                         ; 0x21ca $A1BA 20 BD A1                 ;
LA1BD                                                                          ;
lda      $04                           ; 0x21cd $A1BD A5 04                    ;
cmp      $7D                           ; 0x21cf $A1BF C5 7D                    ;
bne      LA1E1                         ; 0x21d1 $A1C1 D0 1E                    ;
lda      $0C                           ; 0x21d3 $A1C3 A5 0C                    ;
clc                                    ; 0x21d5 $A1C5 18                       ;
adc      #$19                          ; 0x21d6 $A1C6 69 19                    ;
sta      $0C                           ; 0x21d8 $A1C8 85 0C                    ;
lda      $0D                           ; 0x21da $A1CA A5 0D                    ;
adc      #$00                          ; 0x21dc $A1CC 69 00                    ;
sta      $0D                           ; 0x21de $A1CE 85 0D                    ;
jsr      LA1E1                         ; 0x21e0 $A1D0 20 E1 A1                 ;
lda      $0C                           ; 0x21e3 $A1D3 A5 0C                    ;
sec                                    ; 0x21e5 $A1D5 38                       ;
sbc      #$19                          ; 0x21e6 $A1D6 E9 19                    ;
sta      $0C                           ; 0x21e8 $A1D8 85 0C                    ;
lda      $0D                           ; 0x21ea $A1DA A5 0D                    ;
sbc      #$00                          ; 0x21ec $A1DC E9 00                    ;
sta      $0D                           ; 0x21ee $A1DE 85 0D                    ;
rts                                    ; 0x21f0 $A1E0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA1E1                                                                          ;
jsr      L9639                         ; 0x21f1 $A1E1 20 39 96                 ;
lda      $9E                           ; 0x21f4 $A1E4 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x21f6 $A1E6 18                       ;
adc      #$06                          ; 0x21f7 $A1E7 69 06                    ;
sta      $9E                           ; 0x21f9 $A1E9 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $04                           ; 0x21fb $A1EB E6 04                    ;
rts                                    ; 0x21fd $A1ED 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Spell_Wave__Monsters_Collision_And_Damage0                                     ;
lda      $88                           ; 0x21fe $A1EE A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x2200 $A1F0 0A                       ;
tax                                    ; 0x2201 $A1F1 AA                       ;
lda      L97D6,x                       ; 0x2202 $A1F2 BD D6 97                 ;
sta      $97                           ; 0x2205 $A1F5 85 97                    ;
lda      L97D7,x                       ; 0x2207 $A1F7 BD D7 97                 ;
sta      $98                           ; 0x220a $A1FA 85 98                    ;
lda      $44                           ; 0x220c $A1FC A5 44                    ;
lsr                                    ; 0x220e $A1FE 4A                       ;
lsr                                    ; 0x220f $A1FF 4A                       ;
lsr                                    ; 0x2210 $A200 4A                       ;
sta      $44                           ; 0x2211 $A201 85 44                    ;
lda      $45                           ; 0x2213 $A203 A5 45                    ;
lsr                                    ; 0x2215 $A205 4A                       ;
lsr                                    ; 0x2216 $A206 4A                       ;
lsr                                    ; 0x2217 $A207 4A                       ;
sta      $45                           ; 0x2218 $A208 85 45                    ;
ldy      #$01                          ; 0x221a $A20A A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x221c $A20C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x221e $A20E 18                       ;
adc      $97                           ; 0x221f $A20F 65 97                    ;
cmp      $44                           ; 0x2221 $A211 C5 44                    ;
bmi      LA245                         ; 0x2223 $A213 30 30                    ;
beq      LA245                         ; 0x2225 $A215 F0 2E                    ;
lda      ($8B),y                       ; 0x2227 $A217 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x2229 $A219 38                       ;
sbc      $08                           ; 0x222a $A21A E5 08                    ;;save calc'd attack strength to $08 ?
cmp      $44                           ; 0x222c $A21C C5 44                    ;
bpl      LA245                         ; 0x222e $A21E 10 25                    ;
iny                                    ; 0x2230 $A220 C8                       ;
lda      ($8B),y                       ; 0x2231 $A221 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x2233 $A223 18                       ;
adc      $98                           ; 0x2234 $A224 65 98                    ;
cmp      $45                           ; 0x2236 $A226 C5 45                    ;
beq      LA245                         ; 0x2238 $A228 F0 1B                    ;
bmi      LA245                         ; 0x223a $A22A 30 19                    ;
lda      ($8B),y                       ; 0x223c $A22C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x223e $A22E 38                       ;
sbc      $09                           ; 0x223f $A22F E5 09                    ;
cmp      $45                           ; 0x2241 $A231 C5 45                    ;
bpl      LA245                         ; 0x2243 $A233 10 10                    ;
lda      $44                           ; 0x2245 $A235 A5 44                    ;
asl                                    ; 0x2247 $A237 0A                       ;
asl                                    ; 0x2248 $A238 0A                       ;
asl                                    ; 0x2249 $A239 0A                       ;
sta      $44                           ; 0x224a $A23A 85 44                    ;
lda      $45                           ; 0x224c $A23C A5 45                    ;
asl                                    ; 0x224e $A23E 0A                       ;
asl                                    ; 0x224f $A23F 0A                       ;
asl                                    ; 0x2250 $A240 0A                       ;
sta      $45                           ; 0x2251 $A241 85 45                    ;
sec                                    ; 0x2253 $A243 38                       ;
rts                                    ; 0x2254 $A244 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA245                                                                          ;
lda      $44                           ; 0x2255 $A245 A5 44                    ;
asl                                    ; 0x2257 $A247 0A                       ;
asl                                    ; 0x2258 $A248 0A                       ;
asl                                    ; 0x2259 $A249 0A                       ;
sta      $44                           ; 0x225a $A24A 85 44                    ;
lda      $45                           ; 0x225c $A24C A5 45                    ;
asl                                    ; 0x225e $A24E 0A                       ;
asl                                    ; 0x225f $A24F 0A                       ;
asl                                    ; 0x2260 $A250 0A                       ;
sta      $45                           ; 0x2261 $A251 85 45                    ;
clc                                    ; 0x2263 $A253 18                       ;
rts                                    ; 0x2264 $A254 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA255                                                                          ;
jsr      LCF77                         ; 0x2265 $A255 20 77 CF                 ;
lda      #$02                          ; 0x2268 $A258 A9 02                    ;;A = #$02 0000_0010
jsr      LE271                         ; 0x226a $A25A 20 71 E2                 ;
lda      $88                           ; 0x226d $A25D A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x226f $A25F 0A                       ;
tax                                    ; 0x2270 $A260 AA                       ;
lda      L97D6,x                       ; 0x2271 $A261 BD D6 97                 ;
sta      $97                           ; 0x2274 $A264 85 97                    ;
lda      L97D7,x                       ; 0x2276 $A266 BD D7 97                 ;
sta      $98                           ; 0x2279 $A269 85 98                    ;
ldy      #$01                          ; 0x227b $A26B A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x227d $A26D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x227f $A26F 0A                       ;
asl                                    ; 0x2280 $A270 0A                       ;
asl                                    ; 0x2281 $A271 0A                       ;
adc      #$08                          ; 0x2282 $A272 69 08                    ;
sta      $0A                           ; 0x2284 $A274 85 0A                    ;
iny                                    ; 0x2286 $A276 C8                       ;
lda      ($8B),y                       ; 0x2287 $A277 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x2289 $A279 0A                       ;
asl                                    ; 0x228a $A27A 0A                       ;
asl                                    ; 0x228b $A27B 0A                       ;
adc      #$0F                          ; 0x228c $A27C 69 0F                    ;
sta      $0B                           ; 0x228e $A27E 85 0B                    ;
lda      #$05                          ; 0x2290 $A280 A9 05                    ;;A = #$05 0000_0101
sta      $06                           ; 0x2292 $A282 85 06                    ;
LA284                                                                          ;
lda      $98                           ; 0x2294 $A284 A5 98                    ;
sta      $05                           ; 0x2296 $A286 85 05                    ;
lda      $0B                           ; 0x2298 $A288 A5 0B                    ;
sta      $09                           ; 0x229a $A28A 85 09                    ;
ldx      $A7                           ; 0x229c $A28C A6 A7                    ;
LA28E                                                                          ;
lda      $0A                           ; 0x229e $A28E A5 0A                    ;
sta      $08                           ; 0x22a0 $A290 85 08                    ;;save calc'd attack strength to $08 ?
lda      $97                           ; 0x22a2 $A292 A5 97                    ;
sta      $04                           ; 0x22a4 $A294 85 04                    ;
LA296                                                                          ;
lda      $09                           ; 0x22a6 $A296 A5 09                    ;
sta      $0200,x                       ; 0x22a8 $A298 9D 00 02                 ;
inx                                    ; 0x22ab $A29B E8                       ;
lda      #$E8                          ; 0x22ac $A29C A9 E8                    ;;A = #$e8 1110_1000
sta      $0200,x                       ; 0x22ae $A29E 9D 00 02                 ;
inx                                    ; 0x22b1 $A2A1 E8                       ;
lda      #$00                          ; 0x22b2 $A2A2 A9 00                    ;;A = #$00 0000_0000
sta      $0200,x                       ; 0x22b4 $A2A4 9D 00 02                 ;
inx                                    ; 0x22b7 $A2A7 E8                       ;
lda      $08                           ; 0x22b8 $A2A8 A5 08                    ;;save calc'd attack strength to $08 ?
sta      $0200,x                       ; 0x22ba $A2AA 9D 00 02                 ;
inx                                    ; 0x22bd $A2AD E8                       ;
lda      $08                           ; 0x22be $A2AE A5 08                    ;;save calc'd attack strength to $08 ?
clc                                    ; 0x22c0 $A2B0 18                       ;
adc      #$08                          ; 0x22c1 $A2B1 69 08                    ;
sta      $08                           ; 0x22c3 $A2B3 85 08                    ;;save calc'd attack strength to $08 ?
dec      $04                           ; 0x22c5 $A2B5 C6 04                    ;
bne      LA296                         ; 0x22c7 $A2B7 D0 DD                    ;
lda      $09                           ; 0x22c9 $A2B9 A5 09                    ;
clc                                    ; 0x22cb $A2BB 18                       ;
adc      #$08                          ; 0x22cc $A2BC 69 08                    ;
sta      $09                           ; 0x22ce $A2BE 85 09                    ;
dec      $05                           ; 0x22d0 $A2C0 C6 05                    ;
bne      LA28E                         ; 0x22d2 $A2C2 D0 CA                    ;
stx      $08                           ; 0x22d4 $A2C4 86 08                    ;;save calc'd attack strength to $08 ?
ldx      #$06                          ; 0x22d6 $A2C6 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x22d8 $A2C8 20 74 95               ;
ldx      $A7                           ; 0x22db $A2CB A6 A7                    ;
lda      #$F8                          ; 0x22dd $A2CD A9 F8                    ;;A = #$f8 1111_1000
LA2CF                                                                          ;
sta      $0200,x                       ; 0x22df $A2CF 9D 00 02                 ;
inx                                    ; 0x22e2 $A2D2 E8                       ;
cpx      $08                           ; 0x22e3 $A2D3 E4 08                    ;;save calc'd attack strength to $08 ?
bne      LA2CF                         ; 0x22e5 $A2D5 D0 F8                    ;
ldx      #$06                          ; 0x22e7 $A2D7 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x22e9 $A2D9 20 74 95               ;
jsr      LA82E                         ; 0x22ec $A2DC 20 2E A8                 ;
bcc      LA2E6                         ; 0x22ef $A2DF 90 05                    ;
lda      #$01                          ; 0x22f1 $A2E1 A9 01                    ;;A = #$01 0000_0001
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x22f3 $A2E3 20 93 E2     ;
LA2E6                                                                          ;
dec      $06                           ; 0x22f6 $A2E6 C6 06                    ;
bne      LA284                         ; 0x22f8 $A2E8 D0 9A                    ;
rts                                    ; 0x22fa $A2EA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA2EB                                                                          ;
lda      $B6                           ; 0x22fb $A2EB A5 B6                    ;;FF=button Select pressed
bne      LA2F0                         ; 0x22fd $A2ED D0 01                    ;
rts                                    ; 0x22ff $A2EF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA2F0                                                                          ;
jsr      LE265                         ; 0x2300 $A2F0 20 65 E2                 ;
lda      #$04                          ; 0x2303 $A2F3 A9 04                    ;;A = #$04 0000_0100
jsr      LE271                         ; 0x2305 $A2F5 20 71 E2                 ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2308 $A2F8 20 7D 96             ;
jsr      L96E4                         ; 0x230b $A2FB 20 E4 96                 ;
lda      #$A8                          ; 0x230e $A2FE A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x2310 $A300 85 0D                    ;
lda      #$E9                          ; 0x2312 $A302 A9 E9                    ;;A = #$e9 1110_1001
sta      $0C                           ; 0x2314 $A304 85 0C                    ;
ldx      #$19                          ; 0x2316 $A306 A2 19                    ;;X = #$19 0001_1001
stx      $9E                           ; 0x2318 $A308 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$13                          ; 0x231a $A30A A0 13                    ;;Y = #$13 0001_0011
sty      $9F                           ; 0x231c $A30C 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$07                          ; 0x231e $A30E A9 07                    ;;A = #$07 0000_0111
sta      $A0                           ; 0x2320 $A310 85 A0                    ;
jsr      L9636                         ; 0x2322 $A312 20 36 96                 ;
inc      $9F                           ; 0x2325 $A315 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2327 $A317 20 39 96                 ;
lda      #$98                          ; 0x232a $A31A A9 98                    ;;A = #$98 1001_1000
sta      $AD                           ; 0x232c $A31C 85 AD                    ;
lda      #$19                          ; 0x232e $A31E A9 19                    ;;A = #$19 0001_1001
sta      $AC                           ; 0x2330 $A320 85 AC                    ;
lda      #$D0                          ; 0x2332 $A322 A9 D0                    ;;A = #$d0 1101_0000
sta      $A8                           ; 0x2334 $A324 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      #$AF                          ; 0x2336 $A326 A9 AF                    ;;A = #$af 1010_1111
sta      $A9                           ; 0x2338 $A328 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$00                          ; 0x233a $A32A A9 00                    ;;A = #$00 0000_0000
sta      $AA                           ; 0x233c $A32C 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $AB                           ; 0x233e $A32E 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldy      #$00                          ; 0x2340 $A330 A0 00                    ;;Y = #$00 0000_0000
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x2342 $A332 20 8C CE;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2345 $A335 20 34 95 ;
lda      #$0D                          ; 0x2348 $A338 A9 0D                    ;;A = #$0d 0000_1101
jsr      DF11_load_palette_and_implement__index_with_A; 0x234a $A33A 20 11 DF  ;
ldx      #$04                          ; 0x234d $A33D A2 04                    ;;X = #$04 0000_0100
stx      $9E                           ; 0x234f $A33F 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$04                          ; 0x2351 $A341 A0 04                    ;;Y = #$04 0000_0100
sty      $9F                           ; 0x2353 $A343 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      #$0C                          ; 0x2355 $A345 A2 0C                    ;;X = #$0c 0000_1100
ldy      #$08                          ; 0x2357 $A347 A0 08                    ;;Y = #$08 0000_1000
jsr      LA780                         ; 0x2359 $A349 20 80 A7                 ;
lda      #$A8                          ; 0x235c $A34C A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x235e $A34E 85 0D                    ;
lda      #$7F                          ; 0x2360 $A350 A9 7F                    ;;A = #$7f 0111_1111
sta      $0C                           ; 0x2362 $A352 85 0C                    ;
ldx      #$06                          ; 0x2364 $A354 A2 06                    ;;X = #$06 0000_0110
stx      $9E                           ; 0x2366 $A356 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$05                          ; 0x2368 $A358 A0 05                    ;;Y = #$05 0000_0101
sty      $9F                           ; 0x236a $A35A 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$04                          ; 0x236c $A35C A9 04                    ;;A = #$04 0000_0100
sta      $A0                           ; 0x236e $A35E 85 A0                    ;
jsr      L9636                         ; 0x2370 $A360 20 36 96                 ;
inc      $9F                           ; 0x2373 $A363 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2375 $A365 20 39 96                 ;
inc      $9F                           ; 0x2378 $A368 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x237a $A36A 20 39 96                 ;
inc      $9F                           ; 0x237d $A36D E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$08                          ; 0x237f $A36F A9 08                    ;;A = #$08 0000_1000
sta      $A0                           ; 0x2381 $A371 85 A0                    ;
jsr      L9636                         ; 0x2383 $A373 20 36 96                 ;
inc      $9F                           ; 0x2386 $A376 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$05                          ; 0x2388 $A378 A9 05                    ;;A = #$05 0000_0101
sta      $A0                           ; 0x238a $A37A 85 A0                    ;
jsr      L9639                         ; 0x238c $A37C 20 39 96                 ;
inc      $9F                           ; 0x238f $A37F E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$04                          ; 0x2391 $A381 A9 04                    ;;A = #$04 0000_0100
sta      $A0                           ; 0x2393 $A383 85 A0                    ;
jsr      L9639                         ; 0x2395 $A385 20 39 96                 ;
LA388                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2398 $A388 20 7E 95              ;
lda      $B6                           ; 0x239b $A38B A5 B6                    ;;FF=button Select pressed
bne      LA388                         ; 0x239d $A38D D0 F9                    ;
ldx      #$05                          ; 0x239f $A38F A2 05                    ;;X = #$05 0000_0101
stx      $9E                           ; 0x23a1 $A391 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$05                          ; 0x23a3 $A393 A0 05                    ;;Y = #$05 0000_0101
sty      $9F                           ; 0x23a5 $A395 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LA397                                                                          ;
jsr      L9600                         ; 0x23a7 $A397 20 00 96                 ;
jsr      L965A                         ; 0x23aa $A39A 20 5A 96                 ;
lda      #$7E                          ; 0x23ad $A39D A9 7E                    ;;A = #$7e 0111_1110
sta      $2007                         ; 0x23af $A39F 8D 07 20                 ;;Data ($2007) <> read/write
ldx      #$0A                          ; 0x23b2 $A3A2 A2 0A                    ;;X = #$0a 0000_1010
jsr      GameSpeed__TimerDelay__MenuDelay; 0x23b4 $A3A4 20 74 95               ;
LA3A7                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x23b7 $A3A7 20 7E 95              ;
lda      $B8                           ; 0x23ba $A3AA A5 B8                    ;;FF=button Up     pressed
ora      $B9                           ; 0x23bc $A3AC 05 B9                    ;;FF=button Down   pressed
beq      LA3BE                         ; 0x23be $A3AE F0 0E                    ;
jsr      L965A                         ; 0x23c0 $A3B0 20 5A 96                 ;
lda      #$40                          ; 0x23c3 $A3B3 A9 40                    ;;A = #$40 0100_0000
sta      $2007                         ; 0x23c5 $A3B5 8D 07 20                 ;;Data ($2007) <> read/write
lda      $B8                           ; 0x23c8 $A3B8 A5 B8                    ;;FF=button Up     pressed
bne      LA3C8                         ; 0x23ca $A3BA D0 0C                    ;
beq      LA3D7                         ; 0x23cc $A3BC F0 19                    ;
LA3BE                                                                          ;
lda      $B4                           ; 0x23ce $A3BE A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x23d0 $A3C0 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x23d2 $A3C2 05 B6                    ;;FF=button Select pressed
bne      GameMenu_Button_A_B_or_Select_IsPressed__DoAction; 0x23d4 $A3C4 D0 20 ;
beq      LA3A7                         ; 0x23d6 $A3C6 F0 DF                    ;
LA3C8                                                                          ;
;in game menu:                                                                 ;
;move cursor up and do limit check                                             ;
dec      $9F                           ; 0x23d8 $A3C8 C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x23da $A3CA A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$04                          ; 0x23dc $A3CC C9 04                    ;
bne      LA3D4                         ; 0x23de $A3CE D0 04                    ;
lda      #$0A                          ; 0x23e0 $A3D0 A9 0A                    ;;A = #$0a 0000_1010
sta      $9F                           ; 0x23e2 $A3D2 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LA3D4                                                                          ;
jmp      LA397                         ; 0x23e4 $A3D4 4C 97 A3                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3D7                                                                          ;
;in game menu:                                                                 ;
;move cursor down and do limit check                                           ;
inc      $9F                           ; 0x23e7 $A3D7 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x23e9 $A3D9 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$0B                          ; 0x23eb $A3DB C9 0B                    ;
bne      LA3E3                         ; 0x23ed $A3DD D0 04                    ;
lda      #$05                          ; 0x23ef $A3DF A9 05                    ;;A = #$05 0000_0101
sta      $9F                           ; 0x23f1 $A3E1 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LA3E3                                                                          ;
jmp      LA397                         ; 0x23f3 $A3E3 4C 97 A3                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Button_A_B_or_Select_IsPressed__DoAction                              ;
;$9F is the current menu index (although it's actually also a display location);
lda      $9F                           ; 0x23f6 $A3E6 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$05                          ; 0x23f8 $A3E8 C9 05                    ;
bne      LA3EF                         ; 0x23fa $A3EA D0 03                    ;
jmp      GameMenu_Action_Item          ; 0x23fc $A3EC 4C 7E A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3EF                                                                          ;
cmp      #$06                          ; 0x23ff $A3EF C9 06                    ;
bne      LA3F6                         ; 0x2401 $A3F1 D0 03                    ;
jmp      GameMenu_Action_Save          ; 0x2403 $A3F3 4C E3 A4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3F6                                                                          ;
cmp      #$07                          ; 0x2406 $A3F6 C9 07                    ;
bne      LA3FD                         ; 0x2408 $A3F8 D0 03                    ;
jmp      GameMenu_Action_Load          ; 0x240a $A3FA 4C 0E A4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3FD                                                                          ;
cmp      #$08                          ; 0x240d $A3FD C9 08                    ;
bne      LA404                         ; 0x240f $A3FF D0 03                    ;
jmp      GameMenu_Action_Password      ; 0x2411 $A401 4C 0A A5                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA404                                                                          ;
cmp      #$09                          ; 0x2414 $A404 C9 09                    ;
bne      LA40B                         ; 0x2416 $A406 D0 03                    ;
jmp      GameMenu_Action_Speed         ; 0x2418 $A408 4C 7E A5                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA40B                                                                          ;
jmp      GameMenu_Action_Game          ; 0x241b $A40B 4C 0D A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Action_Load                                                           ;
lda      #$00                          ; 0x241e $A40E A9 00                    ;;A = #$00 0000_0000
sta      $9B                           ; 0x2420 $A410 85 9B                    ;
jsr      LA43B                         ; 0x2422 $A412 20 3B A4                 ;
bcc      LA41A                         ; 0x2425 $A415 90 03                    ;
jmp      LA60F                         ; 0x2427 $A417 4C 0F A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA41A                                                                          ;
lda      #$00                          ; 0x242a $A41A A9 00                    ;;A = #$00 0000_0000
jsr      LE142                         ; 0x242c $A41C 20 42 E1                 ;
lda      $29                           ; 0x242f $A41F A5 29                    ;
bne      LA426                         ; 0x2431 $A421 D0 03                    ;
LA423                                                                          ;
jmp      Player_SetUpForNewGame        ; 0x2433 $A423 4C 29 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA426                                                                          ;
ldy      #$00                          ; 0x2436 $A426 A0 00                    ;;Y = #$00 0000_0000
LA428                                                                          ;
lda      $078C,y                       ; 0x2438 $A428 B9 8C 07                 ;
sta      $15,y                         ; 0x243b $A42B 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x243e $A42E C8                       ;
cpy      #$10                          ; 0x243f $A42F C0 10                    ;
bmi      LA428                         ; 0x2441 $A431 30 F5                    ;
jsr      LB694                         ; 0x2443 $A433 20 94 B6                 ;
bcs      LA423                         ; 0x2446 $A436 B0 EB                    ;
jmp      L865D                         ; 0x2448 $A438 4C 5D 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA43B                                                                          ;
lda      #$08                          ; 0x244b $A43B A9 08                    ;;A = #$08 0000_1000
sta      $9E                           ; 0x244d $A43D 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $9F                           ; 0x244f $A43F 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      #$0C                          ; 0x2451 $A441 A2 0C                    ;;X = #$0c 0000_1100
ldy      #$08                          ; 0x2453 $A443 A0 08                    ;;Y = #$08 0000_1000
jsr      LA780                         ; 0x2455 $A445 20 80 A7                 ;
ldx      #$0A                          ; 0x2458 $A448 A2 0A                    ;;X = #$0a 0000_1010
stx      $9E                           ; 0x245a $A44A 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0A                          ; 0x245c $A44C A0 0A                    ;;Y = #$0a 0000_1010
sty      $9F                           ; 0x245e $A44E 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$06                          ; 0x2460 $A450 A9 06                    ;;A = #$06 0000_0110
sta      $A0                           ; 0x2462 $A452 85 A0                    ;
lda      $9B                           ; 0x2464 $A454 A5 9B                    ;
bne      LA463                         ; 0x2466 $A456 D0 0B                    ;
lda      #$A8                          ; 0x2468 $A458 A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x246a $A45A 85 0D                    ;
lda      #$F7                          ; 0x246c $A45C A9 F7                    ;;A = #$f7 1111_0111
sta      $0C                           ; 0x246e $A45E 85 0C                    ;
jmp      LA46B                         ; 0x2470 $A460 4C 6B A4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA463                                                                          ;
lda      #$A8                          ; 0x2473 $A463 A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x2475 $A465 85 0D                    ;
lda      #$FD                          ; 0x2477 $A467 A9 FD                    ;;A = #$fd 1111_1101
sta      $0C                           ; 0x2479 $A469 85 0C                    ;
LA46B                                                                          ;
jsr      L9636                         ; 0x247b $A46B 20 36 96                 ;
ldx      #$0C                          ; 0x247e $A46E A2 0C                    ;;X = #$0c 0000_1100
stx      $9E                           ; 0x2480 $A470 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0C                          ; 0x2482 $A472 A0 0C                    ;;Y = #$0c 0000_1100
sty      $9F                           ; 0x2484 $A474 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$03                          ; 0x2486 $A476 A9 03                    ;;A = #$03 0000_0011
sta      $A0                           ; 0x2488 $A478 85 A0                    ;
lda      #$A9                          ; 0x248a $A47A A9 A9                    ;;A = #$a9 1010_1001
sta      $0D                           ; 0x248c $A47C 85 0D                    ;
lda      #$03                          ; 0x248e $A47E A9 03                    ;;A = #$03 0000_0011
sta      $0C                           ; 0x2490 $A480 85 0C                    ;
jsr      L9639                         ; 0x2492 $A482 20 39 96                 ;
inc      $9F                           ; 0x2495 $A485 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2497 $A487 20 39 96                 ;
LA48A                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x249a $A48A 20 7E 95              ;
lda      $B4                           ; 0x249d $A48D A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x249f $A48F 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x24a1 $A491 05 B6                    ;;FF=button Select pressed
bne      LA48A                         ; 0x24a3 $A493 D0 F5                    ;
ldx      #$0B                          ; 0x24a5 $A495 A2 0B                    ;;X = #$0b 0000_1011
stx      $9E                           ; 0x24a7 $A497 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0C                          ; 0x24a9 $A499 A0 0C                    ;;Y = #$0c 0000_1100
sty      $9F                           ; 0x24ab $A49B 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LA49D                                                                          ;
jsr      L9600                         ; 0x24ad $A49D 20 00 96                 ;
jsr      L965A                         ; 0x24b0 $A4A0 20 5A 96                 ;
lda      #$7E                          ; 0x24b3 $A4A3 A9 7E                    ;;A = #$7e 0111_1110
sta      $2007                         ; 0x24b5 $A4A5 8D 07 20                 ;;Data ($2007) <> read/write
ldx      #$0A                          ; 0x24b8 $A4A8 A2 0A                    ;;X = #$0a 0000_1010
jsr      GameSpeed__TimerDelay__MenuDelay; 0x24ba $A4AA 20 74 95               ;
LA4AD                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x24bd $A4AD 20 7E 95              ;
lda      $B8                           ; 0x24c0 $A4B0 A5 B8                    ;;FF=button Up     pressed
ora      $B9                           ; 0x24c2 $A4B2 05 B9                    ;;FF=button Down   pressed
beq      LA4C1                         ; 0x24c4 $A4B4 F0 0B                    ;
jsr      L965A                         ; 0x24c6 $A4B6 20 5A 96                 ;
lda      #$40                          ; 0x24c9 $A4B9 A9 40                    ;;A = #$40 0100_0000
sta      $2007                         ; 0x24cb $A4BB 8D 07 20                 ;;Data ($2007) <> read/write
jmp      LA4CB                         ; 0x24ce $A4BE 4C CB A4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA4C1                                                                          ;
lda      $B4                           ; 0x24d1 $A4C1 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x24d3 $A4C3 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x24d5 $A4C5 05 B6                    ;;FF=button Select pressed
bne      LA4D9                         ; 0x24d7 $A4C7 D0 10                    ;
beq      LA4AD                         ; 0x24d9 $A4C9 F0 E2                    ;
LA4CB                                                                          ;
ldy      #$0C                          ; 0x24db $A4CB A0 0C                    ;;Y = #$0c 0000_1100
lda      $9F                           ; 0x24dd $A4CD A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$0C                          ; 0x24df $A4CF C9 0C                    ;
bne      LA4D4                         ; 0x24e1 $A4D1 D0 01                    ;
iny                                    ; 0x24e3 $A4D3 C8                       ;
LA4D4                                                                          ;
sty      $9F                           ; 0x24e4 $A4D4 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      LA49D                         ; 0x24e6 $A4D6 4C 9D A4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA4D9                                                                          ;
lda      $9F                           ; 0x24e9 $A4D9 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$0C                          ; 0x24eb $A4DB C9 0C                    ;
bne      LA4E1                         ; 0x24ed $A4DD D0 02                    ;
clc                                    ; 0x24ef $A4DF 18                       ;
rts                                    ; 0x24f0 $A4E0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA4E1                                                                          ;
sec                                    ; 0x24f1 $A4E1 38                       ;
rts                                    ; 0x24f2 $A4E2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Action_Save                                                           ;
lda      #$FF                          ; 0x24f3 $A4E3 A9 FF                    ;;A = #$ff 1111_1111
sta      $9B                           ; 0x24f5 $A4E5 85 9B                    ;
jsr      LA43B                         ; 0x24f7 $A4E7 20 3B A4                 ;
bcc      LA4EF                         ; 0x24fa $A4EA 90 03                    ;
jmp      LA60F                         ; 0x24fc $A4EC 4C 0F A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA4EF                                                                          ;
jsr      Password__Generate_and_Display; 0x24ff $A4EF 20 0B B5                 ;
ldy      #$00                          ; 0x2502 $A4F2 A0 00                    ;;Y = #$00 0000_0000
LA4F4                                                                          ;
lda      $15,y                         ; 0x2504 $A4F4 B9 15 00                 ;;$15 to $24 : current password
sta      $078C,y                       ; 0x2507 $A4F7 99 8C 07                 ;
iny                                    ; 0x250a $A4FA C8                       ;
cpy      #$10                          ; 0x250b $A4FB C0 10                    ;
bmi      LA4F4                         ; 0x250d $A4FD 30 F5                    ;
lda      $3A                           ; 0x250f $A4FF A5 3A                    ;;player CurrentExperience 
sta      $33                           ; 0x2511 $A501 85 33                    ;;backup value for player CurrentExperience 
lda      #$FF                          ; 0x2513 $A503 A9 FF                    ;;A = #$ff 1111_1111
sta      $29                           ; 0x2515 $A505 85 29                    ;
jmp      LA60F                         ; 0x2517 $A507 4C 0F A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Action_Password                                                       ;
jsr      Password__Generate_and_Display; 0x251a $A50A 20 0B B5                 ;
ldx      #$04                          ; 0x251d $A50D A2 04                    ;;X = #$04 0000_0100
stx      $9E                           ; 0x251f $A50F 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$08                          ; 0x2521 $A511 A0 08                    ;;Y = #$08 0000_1000
sty      $9F                           ; 0x2523 $A513 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      #$14                          ; 0x2525 $A515 A2 14                    ;;X = #$14 0001_0100
ldy      #$08                          ; 0x2527 $A517 A0 08                    ;;Y = #$08 0000_1000
jsr      LA780                         ; 0x2529 $A519 20 80 A7                 ;
ldx      #$05                          ; 0x252c $A51C A2 05                    ;;X = #$05 0000_0101
stx      $9E                           ; 0x252e $A51E 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0A                          ; 0x2530 $A520 A0 0A                    ;;Y = #$0a 0000_1010
sty      $9F                           ; 0x2532 $A522 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$A9                          ; 0x2534 $A524 A9 A9                    ;;A = #$a9 1010_1001
sta      $0D                           ; 0x2536 $A526 85 0D                    ;
lda      #$1D                          ; 0x2538 $A528 A9 1D                    ;;A = #$1d 0001_1101
sta      $0C                           ; 0x253a $A52A 85 0C                    ;
lda      #$0A                          ; 0x253c $A52C A9 0A                    ;;A = #$0a 0000_1010
sta      $A0                           ; 0x253e $A52E 85 A0                    ;
jsr      L9636                         ; 0x2540 $A530 20 36 96                 ;
ldx      #$0A                          ; 0x2543 $A533 A2 0A                    ;;X = #$0a 0000_1010
stx      $9E                           ; 0x2545 $A535 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0E                          ; 0x2547 $A537 A0 0E                    ;;Y = #$0e 0000_1110
sty      $9F                           ; 0x2549 $A539 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$A8                          ; 0x254b $A53B A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x254d $A53D 85 0D                    ;
lda      #$A5                          ; 0x254f $A53F A9 A5                    ;;A = #$a5 1010_0101
sta      $0C                           ; 0x2551 $A541 85 0C                    ;
lda      #$0B                          ; 0x2553 $A543 A9 0B                    ;;A = #$0b 0000_1011
sta      $A0                           ; 0x2555 $A545 85 A0                    ;
jsr      L9639                         ; 0x2557 $A547 20 39 96                 ;
ldx      #$06                          ; 0x255a $A54A A2 06                    ;;X = #$06 0000_0110
stx      $9E                           ; 0x255c $A54C 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0C                          ; 0x255e $A54E A0 0C                    ;;Y = #$0c 0000_1100
sty      $9F                           ; 0x2560 $A550 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9600                         ; 0x2562 $A552 20 00 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2565 $A555 20 5D 96  ;
ldy      #$00                          ; 0x2568 $A558 A0 00                    ;;Y = #$00 0000_0000
LA55A                                                                          ;
lda      $15,y                         ; 0x256a $A55A B9 15 00                 ;;$15 to $24 : current password
sta      $2007                         ; 0x256d $A55D 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x2570 $A560 C8                       ;
cpy      #$10                          ; 0x2571 $A561 C0 10                    ;
bmi      LA55A                         ; 0x2573 $A563 30 F5                    ;
;wait for button press (and button release) before closing the current password window which is being displayed now;
LA565                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2575 $A565 20 7E 95              ;
lda      $B4                           ; 0x2578 $A568 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x257a $A56A 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x257c $A56C 05 B6                    ;;FF=button Select pressed
bne      LA565                         ; 0x257e $A56E D0 F5                    ;
LA570                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2580 $A570 20 7E 95              ;
lda      $B4                           ; 0x2583 $A573 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2585 $A575 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x2587 $A577 05 B6                    ;;FF=button Select pressed
beq      LA570                         ; 0x2589 $A579 F0 F5                    ;
jmp      LA60F                         ; 0x258b $A57B 4C 0F A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Action_Speed                                                          ;
ldx      #$04                          ; 0x258e $A57E A2 04                    ;;X = #$04 0000_0100
stx      $9E                           ; 0x2590 $A580 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$10                          ; 0x2592 $A582 A0 10                    ;;Y = #$10 0001_0000
sty      $9F                           ; 0x2594 $A584 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      #$10                          ; 0x2596 $A586 A2 10                    ;;X = #$10 0001_0000
ldy      #$04                          ; 0x2598 $A588 A0 04                    ;;Y = #$04 0000_0100
jsr      LA780                         ; 0x259a $A58A 20 80 A7                 ;
ldx      #$07                          ; 0x259d $A58D A2 07                    ;;X = #$07 0000_0111
stx      $9E                           ; 0x259f $A58F 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$11                          ; 0x25a1 $A591 A0 11                    ;;Y = #$11 0001_0001
sty      $9F                           ; 0x25a3 $A593 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$0A                          ; 0x25a5 $A595 A9 0A                    ;;A = #$0a 0000_1010
sta      $A0                           ; 0x25a7 $A597 85 A0                    ;
lda      #$A9                          ; 0x25a9 $A599 A9 A9                    ;;A = #$a9 1010_1001
sta      $0D                           ; 0x25ab $A59B 85 0D                    ;
lda      #$09                          ; 0x25ad $A59D A9 09                    ;;A = #$09 0000_1001
sta      $0C                           ; 0x25af $A59F 85 0C                    ;
jsr      L9639                         ; 0x25b1 $A5A1 20 39 96                 ;
inc      $9F                           ; 0x25b4 $A5A4 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x25b6 $A5A6 20 39 96                 ;
LA5A9                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x25b9 $A5A9 20 7E 95              ;
lda      $B4                           ; 0x25bc $A5AC A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x25be $A5AE 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x25c0 $A5B0 05 B6                    ;;FF=button Select pressed
bne      LA5A9                         ; 0x25c2 $A5B2 D0 F5                    ;
ldx      #$06                          ; 0x25c4 $A5B4 A2 06                    ;;X = #$06 0000_0110
stx      $9E                           ; 0x25c6 $A5B6 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$11                          ; 0x25c8 $A5B8 A0 11                    ;;Y = #$11 0001_0001
lda      $35                           ; 0x25ca $A5BA A5 35                    ;
beq      LA5BF                         ; 0x25cc $A5BC F0 01                    ;
iny                                    ; 0x25ce $A5BE C8                       ;
LA5BF                                                                          ;
sty      $9F                           ; 0x25cf $A5BF 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LA5C1                                                                          ;
jsr      L9600                         ; 0x25d1 $A5C1 20 00 96                 ;
jsr      L965A                         ; 0x25d4 $A5C4 20 5A 96                 ;
lda      #$7E                          ; 0x25d7 $A5C7 A9 7E                    ;;A = #$7e 0111_1110
sta      $2007                         ; 0x25d9 $A5C9 8D 07 20                 ;;Data ($2007) <> read/write
ldx      #$0A                          ; 0x25dc $A5CC A2 0A                    ;;X = #$0a 0000_1010
jsr      GameSpeed__TimerDelay__MenuDelay; 0x25de $A5CE 20 74 95               ;
LA5D1                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x25e1 $A5D1 20 7E 95              ;
lda      $B8                           ; 0x25e4 $A5D4 A5 B8                    ;;FF=button Up     pressed
ora      $B9                           ; 0x25e6 $A5D6 05 B9                    ;;FF=button Down   pressed
beq      LA5E5                         ; 0x25e8 $A5D8 F0 0B                    ;
jsr      L965A                         ; 0x25ea $A5DA 20 5A 96                 ;
lda      #$40                          ; 0x25ed $A5DD A9 40                    ;;A = #$40 0100_0000
sta      $2007                         ; 0x25ef $A5DF 8D 07 20                 ;;Data ($2007) <> read/write
jmp      LA5EF                         ; 0x25f2 $A5E2 4C EF A5                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA5E5                                                                          ;
lda      $B4                           ; 0x25f5 $A5E5 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x25f7 $A5E7 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x25f9 $A5E9 05 B6                    ;;FF=button Select pressed
bne      LA5FD                         ; 0x25fb $A5EB D0 10                    ;
beq      LA5D1                         ; 0x25fd $A5ED F0 E2                    ;
LA5EF                                                                          ;
ldy      #$11                          ; 0x25ff $A5EF A0 11                    ;;Y = #$11 0001_0001
lda      $9F                           ; 0x2601 $A5F1 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$11                          ; 0x2603 $A5F3 C9 11                    ;
bne      LA5F8                         ; 0x2605 $A5F5 D0 01                    ;
iny                                    ; 0x2607 $A5F7 C8                       ;
LA5F8                                                                          ;
sty      $9F                           ; 0x2608 $A5F8 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jmp      LA5C1                         ; 0x260a $A5FA 4C C1 A5                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA5FD                                                                          ;
ldx      #$00                          ; 0x260d $A5FD A2 00                    ;;X = #$00 0000_0000
lda      $9F                           ; 0x260f $A5FF A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$11                          ; 0x2611 $A601 C9 11                    ;
LA604     = * + $0001                                                          ;
beq      LA606                         ; 0x2613 $A603 F0 01                    ;
dex                                    ; 0x2615 $A605 CA                       ;
LA606                                                                          ;
stx      $34                           ; 0x2616 $A606 86 34                    ;
stx      $35                           ; 0x2618 $A608 86 35                    ;
jmp      LA60F                         ; 0x261a $A60A 4C 0F A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Action_Game                                                           ;
inc      $2C                           ; 0x261d $A60D E6 2C                    ;
LA60F                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x261f $A60F 20 7E 95              ;
lda      $B4                           ; 0x2622 $A612 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2624 $A614 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x2626 $A616 05 B6                    ;;FF=button Select pressed
bne      LA60F                         ; 0x2628 $A618 D0 F5                    ;
jsr      ClearAll200__set200toF0__setA7to00; 0x262a $A61A 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x262d $A61D 20 34 95 ;
ldx      $47                           ; 0x2630 $A620 A6 47                    ;;player CurrentArea       
lda      table_of_palette_index__based_on_player_currentArea,x; 0x2632 $A622 BD 91 DF;
jsr      DF11_load_palette_and_implement__index_with_A; 0x2635 $A625 20 11 DF  ;
ldx      #$00                          ; 0x2638 $A628 A2 00                    ;;X = #$00 0000_0000
LA62A                                                                          ;
lda      $04E4,x                       ; 0x263a $A62A BD E4 04                 ;;the current screen tile data? 	($0E) points here
and      #$3F                          ; 0x263d $A62D 29 3F                    ;;Keep Bits:0011_1111
sta      $04E4,x                       ; 0x263f $A62F 9D E4 04                 ;;the current screen tile data? 	($0E) points here
inx                                    ; 0x2642 $A632 E8                       ;
bne      LA62A                         ; 0x2643 $A633 D0 F5                    ;
LA635                                                                          ;
lda      $05E4,x                       ; 0x2645 $A635 BD E4 05                 ;;the current screen tile data?
and      #$3F                          ; 0x2648 $A638 29 3F                    ;;Keep Bits:0011_1111
sta      $05E4,x                       ; 0x264a $A63A 9D E4 05                 ;;the current screen tile data?
inx                                    ; 0x264d $A63D E8                       ;
cpx      #$E4                          ; 0x264e $A63E E0 E4                    ;
bne      LA635                         ; 0x2650 $A640 D0 F3                    ;
jsr      LDAC4                         ; 0x2652 $A642 20 C4 DA                 ;
jsr      LDE6E                         ; 0x2655 $A645 20 6E DE                 ;
lda      #$06                          ; 0x2658 $A648 A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x265a $A64A 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x265c $A64C A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x265e $A64E 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0x2660 $A650 A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x2662 $A652 85 89                    ;
ldy      #$00                          ; 0x2664 $A654 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x2666 $A656 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x2668 $A658 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
ldy      #$04                          ; 0x266a $A65A A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x266c $A65C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LA663                         ; 0x266e $A65E D0 03                    ;
jsr      LC8F9                         ; 0x2670 $A660 20 F9 C8                 ;
LA663                                                                          ;
lda      $8B                           ; 0x2673 $A663 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x2675 $A665 18                       ;
adc      #$0A                          ; 0x2676 $A666 69 0A                    ;
sta      $8B                           ; 0x2678 $A668 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x267a $A66A A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x267c $A66C 69 00                    ;
sta      $8C                           ; 0x267e $A66E 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0x2680 $A670 E6 89                    ;
lda      $89                           ; 0x2682 $A672 A5 89                    ;
cmp      $8A                           ; 0x2684 $A674 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      LA663                         ; 0x2686 $A676 30 EB                    ;
jsr      LE26B                         ; 0x2688 $A678 20 6B E2                 ;
jmp      L96CA                         ; 0x268b $A67B 4C CA 96                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
GameMenu_Action_Item                                                           ;
ldx      #$08                          ; 0x268e $A67E A2 08                    ;;X = #$08 0000_1000
stx      $9E                           ; 0x2690 $A680 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$08                          ; 0x2692 $A682 A0 08                    ;;Y = #$08 0000_1000
sty      $9F                           ; 0x2694 $A684 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldx      #$10                          ; 0x2696 $A686 A2 10                    ;;X = #$10 0001_0000
ldy      #$0C                          ; 0x2698 $A688 A0 0C                    ;;Y = #$0c 0000_1100
jsr      LA780                         ; 0x269a $A68A 20 80 A7                 ;
ldx      #$09                          ; 0x269d $A68D A2 09                    ;;X = #$09 0000_1001
stx      $9E                           ; 0x269f $A68F 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0A                          ; 0x26a1 $A691 A0 0A                    ;;Y = #$0a 0000_1010
sty      $9F                           ; 0x26a3 $A693 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$00                          ; 0x26a5 $A695 A9 00                    ;;A = #$00 0000_0000
sta      $7B                           ; 0x26a7 $A697 85 7B                    ;;0E=ruby got???
jsr      L951A                         ; 0x26a9 $A699 20 1A 95                 ;
LA69C                                                                          ;
ldy      $7B                           ; 0x26ac $A69C A4 7B                    ;;0E=ruby got???
lda      $59,y                         ; 0x26ae $A69E B9 59 00                 ;
beq      LA6E5                         ; 0x26b1 $A6A1 F0 42                    ;
jsr      L9600                         ; 0x26b3 $A6A3 20 00 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x26b6 $A6A6 20 5D 96  ;
lda      $7B                           ; 0x26b9 $A6A9 A5 7B                    ;;0E=ruby got???
asl                                    ; 0x26bb $A6AB 0A                       ;
asl                                    ; 0x26bc $A6AC 0A                       ;
adc      #$95                          ; 0x26bd $A6AD 69 95                    ;
tax                                    ; 0x26bf $A6AF AA                       ;
stx      $2007                         ; 0x26c0 $A6B0 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x26c3 $A6B3 E8                       ;
stx      $2007                         ; 0x26c4 $A6B4 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x26c7 $A6B7 E8                       ;
lda      L0000                         ; 0x26c8 $A6B8 A5 00                    ;
clc                                    ; 0x26ca $A6BA 18                       ;
adc      #$20                          ; 0x26cb $A6BB 69 20                    ;
sta      L0000                         ; 0x26cd $A6BD 85 00                    ;
lda      $01                           ; 0x26cf $A6BF A5 01                    ;
adc      #$00                          ; 0x26d1 $A6C1 69 00                    ;
sta      $01                           ; 0x26d3 $A6C3 85 01                    ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x26d5 $A6C5 20 5D 96  ;
stx      $2007                         ; 0x26d8 $A6C8 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x26db $A6CB E8                       ;
stx      $2007                         ; 0x26dc $A6CC 8E 07 20                 ;;Data ($2007) <> read/write
lda      $9E                           ; 0x26df $A6CF A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x26e1 $A6D1 18                       ;
adc      #$03                          ; 0x26e2 $A6D2 69 03                    ;
sta      $9E                           ; 0x26e4 $A6D4 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$18                          ; 0x26e6 $A6D6 C9 18                    ;
bmi      LA6E5                         ; 0x26e8 $A6D8 30 0B                    ;
lda      #$09                          ; 0x26ea $A6DA A9 09                    ;;A = #$09 0000_1001
sta      $9E                           ; 0x26ec $A6DC 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$0D                          ; 0x26ee $A6DE A9 0D                    ;;A = #$0d 0000_1101
sta      $9F                           ; 0x26f0 $A6E0 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L951A                         ; 0x26f2 $A6E2 20 1A 95                 ;
LA6E5                                                                          ;
inc      $7B                           ; 0x26f5 $A6E5 E6 7B                    ;;0E=ruby got???
lda      $7B                           ; 0x26f7 $A6E7 A5 7B                    ;;0E=ruby got???
cmp      #$0A                          ; 0x26f9 $A6E9 C9 0A                    ;
bmi      LA69C                         ; 0x26fb $A6EB 30 AF                    ;
lda      $64                           ; 0x26fd $A6ED A5 64                    ;;FF=got fairy 1 (appears in ITEM)
beq      LA6F8                         ; 0x26ff $A6EF F0 07                    ;
ldx      #$48                          ; 0x2701 $A6F1 A2 48                    ;;X = #$48 0100_1000
lda      #$01                          ; 0x2703 $A6F3 A9 01                    ;;A = #$01 0000_0001
jsr      MenuItems_DrawSprite__index_with_A; 0x2705 $A6F5 20 6C A7             ;
LA6F8                                                                          ;
lda      $65                           ; 0x2708 $A6F8 A5 65                    ;;FF=got fairy 2 (appears in ITEM)
beq      LA703                         ; 0x270a $A6FA F0 07                    ;
ldx      #$60                          ; 0x270c $A6FC A2 60                    ;;X = #$60 0110_0000
lda      #$03                          ; 0x270e $A6FE A9 03                    ;;A = #$03 0000_0011
jsr      MenuItems_DrawSprite__index_with_A; 0x2710 $A700 20 6C A7             ;
LA703                                                                          ;
lda      $66                           ; 0x2713 $A703 A5 66                    ;;FF=got fairy 3 (appears in ITEM)
beq      LA70E                         ; 0x2715 $A705 F0 07                    ;
ldx      #$78                          ; 0x2717 $A707 A2 78                    ;;X = #$78 0111_1000
lda      #$02                          ; 0x2719 $A709 A9 02                    ;;A = #$02 0000_0010
jsr      MenuItems_DrawSprite__index_with_A; 0x271b $A70B 20 6C A7             ;
LA70E                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x271e $A70E 20 34 95 ;
lda      #$A8                          ; 0x2721 $A711 A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x2723 $A713 85 0D                    ;
lda      #$A5                          ; 0x2725 $A715 A9 A5                    ;;A = #$a5 1010_0101
sta      $0C                           ; 0x2727 $A717 85 0C                    ;
lda      #$0B                          ; 0x2729 $A719 A9 0B                    ;;A = #$0b 0000_1011
sta      $A0                           ; 0x272b $A71B 85 A0                    ;
ldx      #$0C                          ; 0x272d $A71D A2 0C                    ;;X = #$0c 0000_1100
stx      $9E                           ; 0x272f $A71F 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$12                          ; 0x2731 $A721 A0 12                    ;;Y = #$12 0001_0010
sty      $9F                           ; 0x2733 $A723 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x2735 $A725 20 36 96                 ;
ldy      #$00                          ; 0x2738 $A728 A0 00                    ;;Y = #$00 0000_0000
lda      #$00                          ; 0x273a $A72A A9 00                    ;;A = #$00 0000_0000
LA72C                                                                          ;
ora      $59,y                         ; 0x273c $A72C 19 59 00                 ;
iny                                    ; 0x273f $A72F C8                       ;
cpy      #$0A                          ; 0x2740 $A730 C0 0A                    ;
bmi      LA72C                         ; 0x2742 $A732 30 F8                    ;
ora      $64                           ; 0x2744 $A734 05 64                    ;;FF=got fairy 1 (appears in ITEM)
ora      $65                           ; 0x2746 $A736 05 65                    ;;FF=got fairy 2 (appears in ITEM)
ora      $66                           ; 0x2748 $A738 05 66                    ;;FF=got fairy 3 (appears in ITEM)
bne      LA753                         ; 0x274a $A73A D0 17                    ;
lda      #$A8                          ; 0x274c $A73C A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x274e $A73E 85 0D                    ;
lda      #$9C                          ; 0x2750 $A740 A9 9C                    ;;A = #$9c 1001_1100
sta      $0C                           ; 0x2752 $A742 85 0C                    ;
lda      #$09                          ; 0x2754 $A744 A9 09                    ;;A = #$09 0000_1001
sta      $A0                           ; 0x2756 $A746 85 A0                    ;
ldx      #$0B                          ; 0x2758 $A748 A2 0B                    ;;X = #$0b 0000_1011
stx      $9E                           ; 0x275a $A74A 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$0D                          ; 0x275c $A74C A0 0D                    ;;Y = #$0d 0000_1101
sty      $9F                           ; 0x275e $A74E 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x2760 $A750 20 36 96                 ;
LA753                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2763 $A753 20 7E 95              ;
lda      $B4                           ; 0x2766 $A756 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2768 $A758 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x276a $A75A 05 B6                    ;;FF=button Select pressed
bne      LA753                         ; 0x276c $A75C D0 F5                    ;
LA75E                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x276e $A75E 20 7E 95              ;
lda      $B4                           ; 0x2771 $A761 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2773 $A763 05 B5                    ;;FF=button B      pressed
ora      $B6                           ; 0x2775 $A765 05 B6                    ;;FF=button Select pressed
beq      LA75E                         ; 0x2777 $A767 F0 F5                    ;
jmp      LA60F                         ; 0x2779 $A769 4C 0F A6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
MenuItems_DrawSprite__index_with_A                                             ;
stx      $A8                           ; 0x277c $A76C 86 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $AA                           ; 0x277e $A76E 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$7F                          ; 0x2780 $A770 A9 7F                    ;;A = #$7f 0111_1111
sta      $A9                           ; 0x2782 $A772 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$DF                          ; 0x2784 $A774 A9 DF                    ;;A = #$df 1101_1111
sta      $AB                           ; 0x2786 $A776 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldx      $A7                           ; 0x2788 $A778 A6 A7                    ;
jsr      DrawSprite__useVariables_A8_to_AB__200indexWithX; 0x278a $A77A 20 A6 94;
stx      $A7                           ; 0x278d $A77D 86 A7                    ;
rts                                    ; 0x278f $A77F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA780                                                                          ;
stx      $0A                           ; 0x2790 $A780 86 0A                    ;
sty      $0B                           ; 0x2792 $A782 84 0B                    ;
dex                                    ; 0x2794 $A784 CA                       ;
dex                                    ; 0x2795 $A785 CA                       ;
stx      $04                           ; 0x2796 $A786 86 04                    ;
dey                                    ; 0x2798 $A788 88                       ;
dey                                    ; 0x2799 $A789 88                       ;
sty      $05                           ; 0x279a $A78A 84 05                    ;
ldx      $9E                           ; 0x279c $A78C A6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
stx      $08                           ; 0x279e $A78E 86 08                    ;;save calc'd attack strength to $08 ?
ldy      $9F                           ; 0x27a0 $A790 A4 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sty      $09                           ; 0x27a2 $A792 84 09                    ;
lda      #$04                          ; 0x27a4 $A794 A9 04                    ;;A = #$04 0000_0100
sta      $06                           ; 0x27a6 $A796 85 06                    ;
jsr      L9600                         ; 0x27a8 $A798 20 00 96                 ;
jsr      L965A                         ; 0x27ab $A79B 20 5A 96                 ;
lda      #$5B                          ; 0x27ae $A79E A9 5B                    ;;A = #$5b 0101_1011
sta      $2007                         ; 0x27b0 $A7A0 8D 07 20                 ;;Data ($2007) <> read/write
ldx      $04                           ; 0x27b3 $A7A3 A6 04                    ;
lda      #$5C                          ; 0x27b5 $A7A5 A9 5C                    ;;A = #$5c 0101_1100
LA7A7                                                                          ;
sta      $2007                         ; 0x27b7 $A7A7 8D 07 20                 ;;Data ($2007) <> read/write
dex                                    ; 0x27ba $A7AA CA                       ;
bne      LA7A7                         ; 0x27bb $A7AB D0 FA                    ;
lda      #$5D                          ; 0x27bd $A7AD A9 5D                    ;;A = #$5d 0101_1101
sta      $2007                         ; 0x27bf $A7AF 8D 07 20                 ;;Data ($2007) <> read/write
inc      $9F                           ; 0x27c2 $A7B2 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $06                           ; 0x27c4 $A7B4 C6 06                    ;
LA7B6                                                                          ;
jsr      L9600                         ; 0x27c6 $A7B6 20 00 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x27c9 $A7B9 20 5D 96  ;
lda      #$5E                          ; 0x27cc $A7BC A9 5E                    ;;A = #$5e 0101_1110
sta      $2007                         ; 0x27ce $A7BE 8D 07 20                 ;;Data ($2007) <> read/write
ldx      $04                           ; 0x27d1 $A7C1 A6 04                    ;
lda      #$40                          ; 0x27d3 $A7C3 A9 40                    ;;A = #$40 0100_0000
LA7C5                                                                          ;
sta      $2007                         ; 0x27d5 $A7C5 8D 07 20                 ;;Data ($2007) <> read/write
dex                                    ; 0x27d8 $A7C8 CA                       ;
bne      LA7C5                         ; 0x27d9 $A7C9 D0 FA                    ;
lda      #$5E                          ; 0x27db $A7CB A9 5E                    ;;A = #$5e 0101_1110
sta      $2007                         ; 0x27dd $A7CD 8D 07 20                 ;;Data ($2007) <> read/write
inc      $9F                           ; 0x27e0 $A7D0 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $06                           ; 0x27e2 $A7D2 C6 06                    ;
bne      LA7DD                         ; 0x27e4 $A7D4 D0 07                    ;
lda      #$04                          ; 0x27e6 $A7D6 A9 04                    ;;A = #$04 0000_0100
sta      $06                           ; 0x27e8 $A7D8 85 06                    ;
jsr      L951A                         ; 0x27ea $A7DA 20 1A 95                 ;
LA7DD                                                                          ;
dec      $05                           ; 0x27ed $A7DD C6 05                    ;
bne      LA7B6                         ; 0x27ef $A7DF D0 D5                    ;
jsr      L9600                         ; 0x27f1 $A7E1 20 00 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x27f4 $A7E4 20 5D 96  ;
lda      #$5F                          ; 0x27f7 $A7E7 A9 5F                    ;;A = #$5f 0101_1111
sta      $2007                         ; 0x27f9 $A7E9 8D 07 20                 ;;Data ($2007) <> read/write
ldx      $04                           ; 0x27fc $A7EC A6 04                    ;
lda      #$5C                          ; 0x27fe $A7EE A9 5C                    ;;A = #$5c 0101_1100
LA7F0                                                                          ;
sta      $2007                         ; 0x2800 $A7F0 8D 07 20                 ;;Data ($2007) <> read/write
dex                                    ; 0x2803 $A7F3 CA                       ;
bne      LA7F0                         ; 0x2804 $A7F4 D0 FA                    ;
lda      #$60                          ; 0x2806 $A7F6 A9 60                    ;;A = #$60 0110_0000
sta      $2007                         ; 0x2808 $A7F8 8D 07 20                 ;;Data ($2007) <> read/write
lda      $0A                           ; 0x280b $A7FB A5 0A                    ;
lsr                                    ; 0x280d $A7FD 4A                       ;
lsr                                    ; 0x280e $A7FE 4A                       ;
sta      $04                           ; 0x280f $A7FF 85 04                    ;
lda      $0B                           ; 0x2811 $A801 A5 0B                    ;
lsr                                    ; 0x2813 $A803 4A                       ;
lsr                                    ; 0x2814 $A804 4A                       ;
sta      $05                           ; 0x2815 $A805 85 05                    ;
ldx      $08                           ; 0x2817 $A807 A6 08                    ;;save calc'd attack strength to $08 ?
stx      $9E                           ; 0x2819 $A809 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      $09                           ; 0x281b $A80B A4 09                    ;
sty      $9F                           ; 0x281d $A80D 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L951A                         ; 0x281f $A80F 20 1A 95                 ;
LA812                                                                          ;
jsr      L961F                         ; 0x2822 $A812 20 1F 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2825 $A815 20 5D 96  ;
ldx      $04                           ; 0x2828 $A818 A6 04                    ;
lda      #$55                          ; 0x282a $A81A A9 55                    ;;A = #$55 0101_0101
LA81C                                                                          ;
sta      $2007                         ; 0x282c $A81C 8D 07 20                 ;;Data ($2007) <> read/write
dex                                    ; 0x282f $A81F CA                       ;
bne      LA81C                         ; 0x2830 $A820 D0 FA                    ;
lda      $9F                           ; 0x2832 $A822 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x2834 $A824 18                       ;
adc      #$04                          ; 0x2835 $A825 69 04                    ;
sta      $9F                           ; 0x2837 $A827 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $05                           ; 0x2839 $A829 C6 05                    ;
bne      LA812                         ; 0x283b $A82B D0 E5                    ;
rts                                    ; 0x283d $A82D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA82E                                                                          ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x283e $A82E 20 7E 95              ;
lda      $B7                           ; 0x2841 $A831 A5 B7                    ;;FF=button Start  pressed
bne      LA837                         ; 0x2843 $A833 D0 02                    ;
clc                                    ; 0x2845 $A835 18                       ;
rts                                    ; 0x2846 $A836 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA837                                                                          ;
jsr      LE265                         ; 0x2847 $A837 20 65 E2                 ;
lda      #$05                          ; 0x284a $A83A A9 05                    ;;A = #$05 0000_0101
jsr      LE271                         ; 0x284c $A83C 20 71 E2                 ;
jsr      L96E4                         ; 0x284f $A83F 20 E4 96                 ;
ldx      #$19                          ; 0x2852 $A842 A2 19                    ;;X = #$19 0001_1001
stx      $9E                           ; 0x2854 $A844 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$15                          ; 0x2856 $A846 A0 15                    ;;Y = #$15 0001_0101
sty      $9F                           ; 0x2858 $A848 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$A8                          ; 0x285a $A84A A9 A8                    ;;A = #$a8 1010_1000
sta      $0D                           ; 0x285c $A84C 85 0D                    ;
lda      #$B0                          ; 0x285e $A84E A9 B0                    ;;A = #$b0 1011_0000
sta      $0C                           ; 0x2860 $A850 85 0C                    ;
lda      #$07                          ; 0x2862 $A852 A9 07                    ;;A = #$07 0000_0111
sta      $A0                           ; 0x2864 $A854 85 A0                    ;
jsr      L9639                         ; 0x2866 $A856 20 39 96                 ;
LA859                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2869 $A859 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x286c $A85C 20 7E 95              ;
lda      $B7                           ; 0x286f $A85F A5 B7                    ;;FF=button Start  pressed
bne      LA859                         ; 0x2871 $A861 D0 F6                    ;
LA863                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2873 $A863 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2876 $A866 20 7E 95              ;
lda      $B7                           ; 0x2879 $A869 A5 B7                    ;;FF=button Start  pressed
beq      LA863                         ; 0x287b $A86B F0 F6                    ;
LA86D                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x287d $A86D 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2880 $A870 20 7E 95              ;
lda      $B7                           ; 0x2883 $A873 A5 B7                    ;;FF=button Start  pressed
bne      LA86D                         ; 0x2885 $A875 D0 F6                    ;
jsr      LE26B                         ; 0x2887 $A877 20 6B E2                 ;
jsr      L96CA                         ; 0x288a $A87A 20 CA 96                 ;
sec                                    ; 0x288d $A87D 38                       ;
rts                                    ; 0x288e $A87E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
.byt    $49,$54,$45,$4D,$53,$41,$56,$45; 0x288f $A87F 49 54 45 4D 53 41 56 45  ;;ITEMSAVE
.byt    $4C,$4F,$41,$44,$50,$41,$53,$53; 0x2897 $A887 4C 4F 41 44 50 41 53 53  ;;LOADPASS
.byt    $57,$4F,$52,$44,$53,$50,$45,$45; 0x289f $A88F 57 4F 52 44 53 50 45 45  ;;WORDSPEE
.byt    $44,$47,$41,$4D,$45,$4E,$4F,$54; 0x28a7 $A897 44 47 41 4D 45 4E 4F 54  ;;DGAMENOT
.byt    $48,$49,$4E,$47,$40,$3C,$50,$55; 0x28af $A89F 48 49 4E 47 40 3C 50 55  ;;HING@<PU
.byt    $53,$48,$40,$42,$55,$54,$54,$4F; 0x28b7 $A8A7 53 48 40 42 55 54 54 4F  ;;SH@BUTTO
.byt    $4E,$50,$41,$55,$53,$45,$40,$3C; 0x28bf $A8AF 4E 50 41 55 53 45 40 3C  ;;NPAUSE@<
.byt    $74,$75,$72,$6E,$40,$66,$69,$72; 0x28c7 $A8B7 74 75 72 6E 40 66 69 72  ;;turn@fir
.byt    $65,$40,$69,$63,$65,$40,$40,$77; 0x28cf $A8BF 65 40 69 63 65 40 40 77  ;;e@ice@@w
.byt    $61,$76,$65,$40,$66,$6C,$61,$73; 0x28d7 $A8C7 61 76 65 40 66 6C 61 73  ;;ave@flas
.byt    $68,$54,$55,$52,$4E,$40,$46,$49; 0x28df $A8CF 68 54 55 52 4E 40 46 49  ;;hTURN@FI
.byt    $52,$45,$40,$49,$43,$45,$40,$40; 0x28e7 $A8D7 52 45 40 49 43 45 40 40  ;;RE@ICE@@
.byt    $57,$41,$56,$45,$40,$46,$4C,$41; 0x28ef $A8DF 57 41 56 45 40 46 4C 41  ;;WAVE@FLA
.byt    $53,$48,$57,$49,$4E,$44,$4F,$57; 0x28f7 $A8E7 53 48 57 49 4E 44 4F 57  ;;SHWINDOW
.byt    $40,$40,$4F,$50,$45,$4E,$40,$3C; 0x28ff $A8EF 40 40 4F 50 45 4E 40 3C  ;;@@OPEN@<
.byt    $4C,$4F,$41,$44,$40,$3D,$53,$41; 0x2907 $A8F7 4C 4F 41 44 40 3D 53 41  ;;LOAD@=SA
.byt    $56,$45,$40,$3D,$59,$45,$53,$4E; 0x290f $A8FF 56 45 40 3D 59 45 53 4E  ;;VE@=YESN
.byt    $40,$4F,$4E,$4F,$52,$4D,$41,$4C; 0x2917 $A907 40 4F 4E 4F 52 4D 41 4C  ;;@ONORMAL
.byt    $40,$40,$40,$40,$48,$49,$47,$48; 0x291f $A90F 40 40 40 40 48 49 47 48  ;;@@@@HIGH
.byt    $40,$53,$50,$45,$45,$44,$50,$41; 0x2927 $A917 40 53 50 45 45 44 50 41  ;;@SPEEDPA
.byt    $53,$53,$57,$4F,$52,$44,$40,$3C; 0x292f $A91F 53 53 57 4F 52 44 40 3C  ;;SSWORD@<
; ---------------------------------------------------------------------------- ;
LA927                                                                          ;
jsr      L836C                         ; 0x2937 $A927 20 6C 83                 ;
ldx      #$08                          ; 0x293a $A92A A2 08                    ;;X = #$08 0000_1000
stx      $9E                           ; 0x293c $A92C 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$08                          ; 0x293e $A92E A0 08                    ;;Y = #$08 0000_1000
sty      $9F                           ; 0x2940 $A930 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L961F                         ; 0x2942 $A932 20 1F 96                 ;
jsr      L965A                         ; 0x2945 $A935 20 5A 96                 ;
lda      #$5A                          ; 0x2948 $A938 A9 5A                    ;;A = #$5a 0101_1010
sta      $2007                         ; 0x294a $A93A 8D 07 20                 ;;Data ($2007) <> read/write
sta      $2007                         ; 0x294d $A93D 8D 07 20                 ;;Data ($2007) <> read/write
lda      #$12                          ; 0x2950 $A940 A9 12                    ;;A = #$12 0001_0010
sta      $2007                         ; 0x2952 $A942 8D 07 20                 ;;Data ($2007) <> read/write
lda      #$44                          ; 0x2955 $A945 A9 44                    ;;A = #$44 0100_0100
sta      $2007                         ; 0x2957 $A947 8D 07 20                 ;;Data ($2007) <> read/write
lda      #$02                          ; 0x295a $A94A A9 02                    ;;A = #$02 0000_0010
jsr      DF51_load_palette_and_implement__index_with_A; 0x295c $A94C 20 51 DF  ;
lda      #$0A                          ; 0x295f $A94F A9 0A                    ;;A = #$0a 0000_1010
jsr      DF11_load_palette_and_implement__index_with_A; 0x2961 $A951 20 11 DF  ;
lda      #$B9                          ; 0x2964 $A954 A9 B9                    ;;A = #$b9 1011_1001
sta      $0D                           ; 0x2966 $A956 85 0D                    ;
lda      #$E9                          ; 0x2968 $A958 A9 E9                    ;;A = #$e9 1110_1001
sta      $0C                           ; 0x296a $A95A 85 0C                    ;
lda      #$08                          ; 0x296c $A95C A9 08                    ;;A = #$08 0000_1000
sta      $A0                           ; 0x296e $A95E 85 A0                    ;
ldx      #$09                          ; 0x2970 $A960 A2 09                    ;;X = #$09 0000_1001
stx      $9E                           ; 0x2972 $A962 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$05                          ; 0x2974 $A964 A0 05                    ;;Y = #$05 0000_0101
sty      $9F                           ; 0x2976 $A966 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x2978 $A968 20 36 96                 ;
ldx      #$0A                          ; 0x297b $A96B A2 0A                    ;;X = #$0a 0000_1010
stx      $9E                           ; 0x297d $A96D 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$04                          ; 0x297f $A96F A0 04                    ;;Y = #$04 0000_0100
sty      $9F                           ; 0x2981 $A971 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L961F                         ; 0x2983 $A973 20 1F 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2986 $A976 20 5D 96  ;
lda      #$FF                          ; 0x2989 $A979 A9 FF                    ;;A = #$ff 1111_1111
ldy      #$03                          ; 0x298b $A97B A0 03                    ;;Y = #$03 0000_0011
LA97D                                                                          ;
sta      $2007                         ; 0x298d $A97D 8D 07 20                 ;;Data ($2007) <> read/write
dey                                    ; 0x2990 $A980 88                       ;
bne      LA97D                         ; 0x2991 $A981 D0 FA                    ;
lda      #$0A                          ; 0x2993 $A983 A9 0A                    ;;A = #$0a 0000_1010
sta      $A0                           ; 0x2995 $A985 85 A0                    ;
ldx      #$09                          ; 0x2997 $A987 A2 09                    ;;X = #$09 0000_1001
stx      $9E                           ; 0x2999 $A989 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$11                          ; 0x299b $A98B A0 11                    ;;Y = #$11 0001_0001
sty      $9F                           ; 0x299d $A98D 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x299f $A98F 20 36 96                 ;
lda      #$08                          ; 0x29a2 $A992 A9 08                    ;;A = #$08 0000_1000
sta      $A0                           ; 0x29a4 $A994 85 A0                    ;
inc      $9F                           ; 0x29a6 $A996 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x29a8 $A998 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x29aa $A99A 20 39 96                 ;
lda      #$03                          ; 0x29ad $A99D A9 03                    ;;A = #$03 0000_0011
sta      $A0                           ; 0x29af $A99F 85 A0                    ;
ldx      #$12                          ; 0x29b1 $A9A1 A2 12                    ;;X = #$12 0001_0010
stx      $9E                           ; 0x29b3 $A9A3 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$08                          ; 0x29b5 $A9A5 A0 08                    ;;Y = #$08 0000_1000
sty      $9F                           ; 0x29b7 $A9A7 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x29b9 $A9A9 20 39 96                 ;
inc      $9F                           ; 0x29bc $A9AC E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x29be $A9AE 20 39 96                 ;
inc      $9F                           ; 0x29c1 $A9B1 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x29c3 $A9B3 20 39 96                 ;
ldx      #$07                          ; 0x29c6 $A9B6 A2 07                    ;;X = #$07 0000_0111
stx      $9E                           ; 0x29c8 $A9B8 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$11                          ; 0x29ca $A9BA A0 11                    ;;Y = #$11 0001_0001
sty      $9F                           ; 0x29cc $A9BC 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9600                         ; 0x29ce $A9BE 20 00 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x29d1 $A9C1 20 5D 96  ;
lda      #$7E                          ; 0x29d4 $A9C4 A9 7E                    ;;A = #$7e 0111_1110
sta      $2007                         ; 0x29d6 $A9C6 8D 07 20                 ;;Data ($2007) <> read/write
jsr      ClearAll200__set200toF0__setA7to00; 0x29d9 $A9C9 20 7D 96             ;
lda      #$2C                          ; 0x29dc $A9CC A9 2C                    ;;A = #$2c 0010_1100
sta      $A8                           ; 0x29de $A9CE 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      #$43                          ; 0x29e0 $A9D0 A9 43                    ;;A = #$43 0100_0011
sta      $A9                           ; 0x29e2 $A9D2 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$F3                          ; 0x29e4 $A9D4 A9 F3                    ;;A = #$f3 1111_0011
sta      $AB                           ; 0x29e6 $A9D6 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      #$01                          ; 0x29e8 $A9D8 A9 01                    ;;A = #$01 0000_0001
sta      $AA                           ; 0x29ea $A9DA 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$98                          ; 0x29ec $A9DC A9 98                    ;;A = #$98 1001_1000
sta      $AD                           ; 0x29ee $A9DE 85 AD                    ;
lda      #$19                          ; 0x29f0 $A9E0 A9 19                    ;;A = #$19 0001_1001
sta      $AC                           ; 0x29f2 $A9E2 85 AC                    ;
ldy      #$00                          ; 0x29f4 $A9E4 A0 00                    ;;Y = #$00 0000_0000
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x29f6 $A9E6 20 8C CE;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x29f9 $A9E9 20 34 95 ;
ldy      #$D4                          ; 0x29fc $A9EC A0 D4                    ;;Y = #$d4 1101_0100
sty      $A1                           ; 0x29fe $A9EE 84 A1                    ;
lda      #$10                          ; 0x2a00 $A9F0 A9 10                    ;;A = #$10 0001_0000
sta      $04                           ; 0x2a02 $A9F2 85 04                    ;
LA9F4                                                                          ;
ldy      #$D4                          ; 0x2a04 $A9F4 A0 D4                    ;;Y = #$d4 1101_0100
lda      $A1                           ; 0x2a06 $A9F6 A5 A1                    ;
cmp      #$D4                          ; 0x2a08 $A9F8 C9 D4                    ;
bne      LA9FE                         ; 0x2a0a $A9FA D0 02                    ;
ldy      #$D9                          ; 0x2a0c $A9FC A0 D9                    ;;Y = #$d9 1101_1001
LA9FE                                                                          ;
sty      $A1                           ; 0x2a0e $A9FE 84 A1                    ;
ldx      #$12                          ; 0x2a10 $AA00 A2 12                    ;;X = #$12 0001_0010
ldy      #$09                          ; 0x2a12 $AA02 A0 09                    ;;Y = #$09 0000_1001
jsr      L9604                         ; 0x2a14 $AA04 20 04 96                 ;
jsr      L965A                         ; 0x2a17 $AA07 20 5A 96                 ;
lda      $A1                           ; 0x2a1a $AA0A A5 A1                    ;
sta      $2007                         ; 0x2a1c $AA0C 8D 07 20                 ;;Data ($2007) <> read/write
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2a1f $AA0F 20 14 AC;
ldx      #$08                          ; 0x2a22 $AA12 A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2a24 $AA14 20 74 95               ;
dec      $04                           ; 0x2a27 $AA17 C6 04                    ;
bne      LA9F4                         ; 0x2a29 $AA19 D0 D9                    ;
lda      #$02                          ; 0x2a2b $AA1B A9 02                    ;;A = #$02 0000_0010
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x2a2d $AA1D 20 93 E2     ;
ldx      #$11                          ; 0x2a30 $AA20 A2 11                    ;;X = #$11 0001_0001
stx      $44                           ; 0x2a32 $AA22 86 44                    ;
ldy      #$09                          ; 0x2a34 $AA24 A0 09                    ;;Y = #$09 0000_1001
sty      $45                           ; 0x2a36 $AA26 84 45                    ;
LAA28                                                                          ;
ldx      $44                           ; 0x2a38 $AA28 A6 44                    ;
ldy      $45                           ; 0x2a3a $AA2A A4 45                    ;
jsr      L9604                         ; 0x2a3c $AA2C 20 04 96                 ;
jsr      L965A                         ; 0x2a3f $AA2F 20 5A 96                 ;
ldx      $44                           ; 0x2a42 $AA32 A6 44                    ;
ldy      #$00                          ; 0x2a44 $AA34 A0 00                    ;;Y = #$00 0000_0000
LAA36                                                                          ;
lda      LBA0C,y                       ; 0x2a46 $AA36 B9 0C BA                 ;
sta      $2007                         ; 0x2a49 $AA39 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x2a4c $AA3C C8                       ;
inx                                    ; 0x2a4d $AA3D E8                       ;
cpx      #$12                          ; 0x2a4e $AA3E E0 12                    ;
bne      LAA36                         ; 0x2a50 $AA40 D0 F4                    ;
ldy      #$D4                          ; 0x2a52 $AA42 A0 D4                    ;;Y = #$d4 1101_0100
lda      $A1                           ; 0x2a54 $AA44 A5 A1                    ;
cmp      #$D4                          ; 0x2a56 $AA46 C9 D4                    ;
bne      LAA4C                         ; 0x2a58 $AA48 D0 02                    ;
ldy      #$D9                          ; 0x2a5a $AA4A A0 D9                    ;;Y = #$d9 1101_1001
LAA4C                                                                          ;
sty      $A1                           ; 0x2a5c $AA4C 84 A1                    ;
ldx      #$12                          ; 0x2a5e $AA4E A2 12                    ;;X = #$12 0001_0010
ldy      #$09                          ; 0x2a60 $AA50 A0 09                    ;;Y = #$09 0000_1001
jsr      L9604                         ; 0x2a62 $AA52 20 04 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2a65 $AA55 20 5D 96  ;
lda      $A1                           ; 0x2a68 $AA58 A5 A1                    ;
sta      $2007                         ; 0x2a6a $AA5A 8D 07 20                 ;;Data ($2007) <> read/write
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2a6d $AA5D 20 14 AC;
ldx      #$08                          ; 0x2a70 $AA60 A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2a72 $AA62 20 74 95               ;
dec      $44                           ; 0x2a75 $AA65 C6 44                    ;
lda      $44                           ; 0x2a77 $AA67 A5 44                    ;
cmp      #$08                          ; 0x2a79 $AA69 C9 08                    ;
bne      LAA28                         ; 0x2a7b $AA6B D0 BB                    ;
lda      #$06                          ; 0x2a7d $AA6D A9 06                    ;;A = #$06 0000_0110
sta      $04                           ; 0x2a7f $AA6F 85 04                    ;
LAA71                                                                          ;
ldx      $44                           ; 0x2a81 $AA71 A6 44                    ;
ldy      $45                           ; 0x2a83 $AA73 A4 45                    ;
jsr      L9604                         ; 0x2a85 $AA75 20 04 96                 ;
jsr      L965A                         ; 0x2a88 $AA78 20 5A 96                 ;
ldx      $44                           ; 0x2a8b $AA7B A6 44                    ;
lda      $04                           ; 0x2a8d $AA7D A5 04                    ;
and      #$01                          ; 0x2a8f $AA7F 29 01                    ;;Keep Bits:0000_0001
tay                                    ; 0x2a91 $AA81 A8                       ;
LAA82                                                                          ;
lda      LBA0C,y                       ; 0x2a92 $AA82 B9 0C BA                 ;
sta      $2007                         ; 0x2a95 $AA85 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x2a98 $AA88 C8                       ;
inx                                    ; 0x2a99 $AA89 E8                       ;
cpx      #$12                          ; 0x2a9a $AA8A E0 12                    ;
bne      LAA82                         ; 0x2a9c $AA8C D0 F4                    ;
ldy      #$D4                          ; 0x2a9e $AA8E A0 D4                    ;;Y = #$d4 1101_0100
lda      $A1                           ; 0x2aa0 $AA90 A5 A1                    ;
cmp      #$D4                          ; 0x2aa2 $AA92 C9 D4                    ;
bne      LAA98                         ; 0x2aa4 $AA94 D0 02                    ;
ldy      #$D9                          ; 0x2aa6 $AA96 A0 D9                    ;;Y = #$d9 1101_1001
LAA98                                                                          ;
sty      $A1                           ; 0x2aa8 $AA98 84 A1                    ;
ldx      #$12                          ; 0x2aaa $AA9A A2 12                    ;;X = #$12 0001_0010
ldy      #$09                          ; 0x2aac $AA9C A0 09                    ;;Y = #$09 0000_1001
jsr      L9604                         ; 0x2aae $AA9E 20 04 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2ab1 $AAA1 20 5D 96  ;
lda      $A1                           ; 0x2ab4 $AAA4 A5 A1                    ;
sta      $2007                         ; 0x2ab6 $AAA6 8D 07 20                 ;;Data ($2007) <> read/write
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2ab9 $AAA9 20 14 AC;
ldx      #$08                          ; 0x2abc $AAAC A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2abe $AAAE 20 74 95               ;
dec      $04                           ; 0x2ac1 $AAB1 C6 04                    ;
bne      LAA71                         ; 0x2ac3 $AAB3 D0 BC                    ;
ldx      #$11                          ; 0x2ac5 $AAB5 A2 11                    ;;X = #$11 0001_0001
stx      $44                           ; 0x2ac7 $AAB7 86 44                    ;
ldy      #$09                          ; 0x2ac9 $AAB9 A0 09                    ;;Y = #$09 0000_1001
sty      $45                           ; 0x2acb $AABB 84 45                    ;
LAABD                                                                          ;
ldx      $44                           ; 0x2acd $AABD A6 44                    ;
ldx      #$08                          ; 0x2acf $AABF A2 08                    ;;X = #$08 0000_1000
ldy      $45                           ; 0x2ad1 $AAC1 A4 45                    ;
jsr      L9604                         ; 0x2ad3 $AAC3 20 04 96                 ;
jsr      L965A                         ; 0x2ad6 $AAC6 20 5A 96                 ;
lda      $44                           ; 0x2ad9 $AAC9 A5 44                    ;
sec                                    ; 0x2adb $AACB 38                       ;
sbc      #$08                          ; 0x2adc $AACC E9 08                    ;
beq      LAAE0                         ; 0x2ade $AACE F0 10                    ;
tax                                    ; 0x2ae0 $AAD0 AA                       ;
lda      $04                           ; 0x2ae1 $AAD1 A5 04                    ;
and      #$01                          ; 0x2ae3 $AAD3 29 01                    ;;Keep Bits:0000_0001
tay                                    ; 0x2ae5 $AAD5 A8                       ;
LAAD6                                                                          ;
lda      LBA0C,y                       ; 0x2ae6 $AAD6 B9 0C BA                 ;
sta      $2007                         ; 0x2ae9 $AAD9 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x2aec $AADC C8                       ;
dex                                    ; 0x2aed $AADD CA                       ;
bne      LAAD6                         ; 0x2aee $AADE D0 F6                    ;
LAAE0                                                                          ;
lda      #$40                          ; 0x2af0 $AAE0 A9 40                    ;;A = #$40 0100_0000
sta      $2007                         ; 0x2af2 $AAE2 8D 07 20                 ;;Data ($2007) <> read/write
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2af5 $AAE5 20 14 AC;
ldx      #$08                          ; 0x2af8 $AAE8 A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2afa $AAEA 20 74 95               ;
dec      $44                           ; 0x2afd $AAED C6 44                    ;
lda      $44                           ; 0x2aff $AAEF A5 44                    ;
cmp      #$08                          ; 0x2b01 $AAF1 C9 08                    ;
bpl      LAABD                         ; 0x2b03 $AAF3 10 C8                    ;
lda      #$0C                          ; 0x2b05 $AAF5 A9 0C                    ;;A = #$0c 0000_1100
sta      $04                           ; 0x2b07 $AAF7 85 04                    ;
LAAF9                                                                          ;
lda      #$01                          ; 0x2b09 $AAF9 A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x2b0b $AAFB 20 51 DF  ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2b0e $AAFE 20 7D 96             ;
lda      #$2C                          ; 0x2b11 $AB01 A9 2C                    ;;A = #$2c 0010_1100
sta      $A8                           ; 0x2b13 $AB03 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      #$43                          ; 0x2b15 $AB05 A9 43                    ;;A = #$43 0100_0011
sta      $A9                           ; 0x2b17 $AB07 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$F3                          ; 0x2b19 $AB09 A9 F3                    ;;A = #$f3 1111_0011
sta      $AB                           ; 0x2b1b $AB0B 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      #$01                          ; 0x2b1d $AB0D A9 01                    ;;A = #$01 0000_0001
sta      $AA                           ; 0x2b1f $AB0F 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$98                          ; 0x2b21 $AB11 A9 98                    ;;A = #$98 1001_1000
sta      $AD                           ; 0x2b23 $AB13 85 AD                    ;
lda      #$19                          ; 0x2b25 $AB15 A9 19                    ;;A = #$19 0001_1001
sta      $AC                           ; 0x2b27 $AB17 85 AC                    ;
ldy      #$00                          ; 0x2b29 $AB19 A0 00                    ;;Y = #$00 0000_0000
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x2b2b $AB1B 20 8C CE;
ldx      #$04                          ; 0x2b2e $AB1E A2 04                    ;;X = #$04 0000_0100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2b30 $AB20 20 74 95               ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2b33 $AB23 20 7D 96             ;
lda      #$02                          ; 0x2b36 $AB26 A9 02                    ;;A = #$02 0000_0010
jsr      DF51_load_palette_and_implement__index_with_A; 0x2b38 $AB28 20 51 DF  ;
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2b3b $AB2B 20 14 AC;
ldx      #$04                          ; 0x2b3e $AB2E A2 04                    ;;X = #$04 0000_0100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2b40 $AB30 20 74 95               ;
dec      $04                           ; 0x2b43 $AB33 C6 04                    ;
bne      LAAF9                         ; 0x2b45 $AB35 D0 C2                    ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2b47 $AB37 20 7D 96             ;
lda      #$0D                          ; 0x2b4a $AB3A A9 0D                    ;;A = #$0d 0000_1101
jsr      DF11_load_palette_and_implement__index_with_A; 0x2b4c $AB3C 20 11 DF  ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2b4f $AB3F 20 34 95 ;
ldx      #$2C                          ; 0x2b52 $AB42 A2 2C                    ;;X = #$2c 0010_1100
stx      $08                           ; 0x2b54 $AB44 86 08                    ;;save calc'd attack strength to $08 ?
ldy      #$3B                          ; 0x2b56 $AB46 A0 3B                    ;;Y = #$3b 0011_1011
sty      $09                           ; 0x2b58 $AB48 84 09                    ;
ldx      #$24                          ; 0x2b5a $AB4A A2 24                    ;;X = #$24 0010_0100
stx      $0A                           ; 0x2b5c $AB4C 86 0A                    ;
ldy      #$4B                          ; 0x2b5e $AB4E A0 4B                    ;;Y = #$4b 0100_1011
sty      $0B                           ; 0x2b60 $AB50 84 0B                    ;
ldx      #$34                          ; 0x2b62 $AB52 A2 34                    ;;X = #$34 0011_0100
stx      $06                           ; 0x2b64 $AB54 86 06                    ;
ldy      #$4B                          ; 0x2b66 $AB56 A0 4B                    ;;Y = #$4b 0100_1011
sty      $07                           ; 0x2b68 $AB58 84 07                    ;
LAB5A                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2b6a $AB5A 20 7D 96             ;
ldx      $08                           ; 0x2b6d $AB5D A6 08                    ;;save calc'd attack strength to $08 ?
ldy      $09                           ; 0x2b6f $AB5F A4 09                    ;
lda      #$01                          ; 0x2b71 $AB61 A9 01                    ;;A = #$01 0000_0001
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x2b73 $AB63 20 F7 AB;
ldx      $0A                           ; 0x2b76 $AB66 A6 0A                    ;
ldy      $0B                           ; 0x2b78 $AB68 A4 0B                    ;
lda      #$03                          ; 0x2b7a $AB6A A9 03                    ;;A = #$03 0000_0011
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x2b7c $AB6C 20 F7 AB;
ldx      $06                           ; 0x2b7f $AB6F A6 06                    ;
ldy      $07                           ; 0x2b81 $AB71 A4 07                    ;
lda      #$02                          ; 0x2b83 $AB73 A9 02                    ;;A = #$02 0000_0010
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x2b85 $AB75 20 F7 AB;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2b88 $AB78 20 34 95 ;
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2b8b $AB7B 20 14 AC;
ldx      #$08                          ; 0x2b8e $AB7E A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2b90 $AB80 20 74 95               ;
inc      $04                           ; 0x2b93 $AB83 E6 04                    ;
dec      $09                           ; 0x2b95 $AB85 C6 09                    ;
dec      $09                           ; 0x2b97 $AB87 C6 09                    ;
dec      $0A                           ; 0x2b99 $AB89 C6 0A                    ;
dec      $0A                           ; 0x2b9b $AB8B C6 0A                    ;
inc      $0B                           ; 0x2b9d $AB8D E6 0B                    ;
inc      $0B                           ; 0x2b9f $AB8F E6 0B                    ;
inc      $06                           ; 0x2ba1 $AB91 E6 06                    ;
inc      $06                           ; 0x2ba3 $AB93 E6 06                    ;
inc      $07                           ; 0x2ba5 $AB95 E6 07                    ;
inc      $07                           ; 0x2ba7 $AB97 E6 07                    ;
lda      $0A                           ; 0x2ba9 $AB99 A5 0A                    ;
cmp      #$1C                          ; 0x2bab $AB9B C9 1C                    ;
beq      LABA2                         ; 0x2bad $AB9D F0 03                    ;
jmp      LAB5A                         ; 0x2baf $AB9F 4C 5A AB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LABA2                                                                          ;
lda      #$20                          ; 0x2bb2 $ABA2 A9 20                    ;;A = #$20 0010_0000
sta      $04                           ; 0x2bb4 $ABA4 85 04                    ;
LABA6                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2bb6 $ABA6 20 7D 96             ;
ldx      $08                           ; 0x2bb9 $ABA9 A6 08                    ;;save calc'd attack strength to $08 ?
ldy      $09                           ; 0x2bbb $ABAB A4 09                    ;
lda      #$01                          ; 0x2bbd $ABAD A9 01                    ;;A = #$01 0000_0001
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x2bbf $ABAF 20 F7 AB;
ldx      $0A                           ; 0x2bc2 $ABB2 A6 0A                    ;
ldy      $0B                           ; 0x2bc4 $ABB4 A4 0B                    ;
lda      #$03                          ; 0x2bc6 $ABB6 A9 03                    ;;A = #$03 0000_0011
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x2bc8 $ABB8 20 F7 AB;
ldx      $06                           ; 0x2bcb $ABBB A6 06                    ;
ldy      $07                           ; 0x2bcd $ABBD A4 07                    ;
lda      #$02                          ; 0x2bcf $ABBF A9 02                    ;;A = #$02 0000_0010
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x2bd1 $ABC1 20 F7 AB;
jsr      Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed; 0x2bd4 $ABC4 20 14 AC;
ldx      #$08                          ; 0x2bd7 $ABC7 A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2bd9 $ABC9 20 74 95               ;
dec      $04                           ; 0x2bdc $ABCC C6 04                    ;
bne      LABA6                         ; 0x2bde $ABCE D0 D6                    ;
lda      #$FF                          ; 0x2be0 $ABD0 A9 FF                    ;;A = #$ff 1111_1111
sta      $9A                           ; 0x2be2 $ABD2 85 9A                    ;
inc      $2B                           ; 0x2be4 $ABD4 E6 2B                    ;
lda      #$00                          ; 0x2be6 $ABD6 A9 00                    ;;A = #$00 0000_0000
sta      $2D                           ; 0x2be8 $ABD8 85 2D                    ;
sta      $B0                           ; 0x2bea $ABDA 85 B0                    ;
sta      $AF                           ; 0x2bec $ABDC 85 AF                    ;
sta      $B3                           ; 0x2bee $ABDE 85 B3                    ;
sta      $B2                           ; 0x2bf0 $ABE0 85 B2                    ;
Intro__MainMenu__StartGame_or_PasswordEntry__NewGame                           ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2bf2 $ABE2 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2bf5 $ABE5 20 34 95 ;
jsr      L836C                         ; 0x2bf8 $ABE8 20 6C 83                 ;
lda      #$00                          ; 0x2bfb $ABEB A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x2bfd $ABED 20 51 DF  ;
lda      #$00                          ; 0x2c00 $ABF0 A9 00                    ;;A = #$00 0000_0000
sta      $35                           ; 0x2c02 $ABF2 85 35                    ;
jmp      Player_SetUpForNewGame        ; 0x2c04 $ABF4 4C 29 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Setup_SpriteData_PointAC__probablyPlayer__maybeFairy                           ;
;setup variable for sprite data: X Y and attributes                            ;
stx      $A8                           ; 0x2c07 $ABF7 86 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sty      $A9                           ; 0x2c09 $ABF9 84 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $AA                           ; 0x2c0b $ABFB 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
;point ($AC) to $9819 , tile mappings for (player)?                            ;
lda      #$98                          ; 0x2c0d $ABFD A9 98                    ;;A = #$98 1001_1000
sta      $AD                           ; 0x2c0f $ABFF 85 AD                    ;
lda      #$19                          ; 0x2c11 $AC01 A9 19                    ;;A = #$19 0001_1001
sta      $AC                           ; 0x2c13 $AC03 85 AC                    ;
;something                                                                     ;
lda      $04                           ; 0x2c15 $AC05 A5 04                    ;
and      #$01                          ; 0x2c17 $AC07 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x2c19 $AC09 0A                       ;
asl                                    ; 0x2c1a $AC0A 0A                       ;
adc      #$DF                          ; 0x2c1b $AC0B 69 DF                    ;
sta      $AB                           ; 0x2c1d $AC0D 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldy      #$00                          ; 0x2c1f $AC0F A0 00                    ;;Y = #$00 0000_0000
jmp      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x2c21 $AC11 4C 8C CE;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Intro__MainMenu__StartGame_or_PasswordEntry__CheckIfButtonStartPressed         ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2c24 $AC14 20 7E 95              ;
lda      $B7                           ; 0x2c27 $AC17 A5 B7                    ;;FF=button Start  pressed
beq      Intro__MainMenu__StartGame_or_PasswordEntry__StartNOTpressed; 0x2c29 $AC19 F0 09;
lda      $9F                           ; 0x2c2b $AC1B A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$11                          ; 0x2c2d $AC1D C9 11                    ;if button pressed is start, then start new game
beq      Intro__MainMenu__StartGame_or_PasswordEntry__NewGame; 0x2c2f $AC1F F0 C1;
jmp      Intro__MainMenu__StartGame_or_PasswordEntry__PasswordEntry; 0x2c31 $AC21 4C 53 AC;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Intro__MainMenu__StartGame_or_PasswordEntry__StartNOTpressed                   ;
lda      $B6                           ; 0x2c34 $AC24 A5 B6                    ;;FF=button Select pressed
ora      $B8                           ; 0x2c36 $AC26 05 B8                    ;;FF=button Up     pressed
ora      $B9                           ; 0x2c38 $AC28 05 B9                    ;;FF=button Down   pressed
beq      LAC4E                         ; 0x2c3a $AC2A F0 22                    ;
jsr      L9600                         ; 0x2c3c $AC2C 20 00 96                 ;
jsr      L965A                         ; 0x2c3f $AC2F 20 5A 96                 ;
lda      #$40                          ; 0x2c42 $AC32 A9 40                    ;;A = #$40 0100_0000
sta      $2007                         ; 0x2c44 $AC34 8D 07 20                 ;;Data ($2007) <> read/write
ldy      #$11                          ; 0x2c47 $AC37 A0 11                    ;;Y = #$11 0001_0001
lda      $9F                           ; 0x2c49 $AC39 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$11                          ; 0x2c4b $AC3B C9 11                    ;
bne      LAC41                         ; 0x2c4d $AC3D D0 02                    ;
ldy      #$13                          ; 0x2c4f $AC3F A0 13                    ;;Y = #$13 0001_0011
LAC41                                                                          ;
sty      $9F                           ; 0x2c51 $AC41 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9600                         ; 0x2c53 $AC43 20 00 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2c56 $AC46 20 5D 96  ;
lda      #$7E                          ; 0x2c59 $AC49 A9 7E                    ;;A = #$7e 0111_1110
sta      $2007                         ; 0x2c5b $AC4B 8D 07 20                 ;;Data ($2007) <> read/write
LAC4E                                                                          ;
lda      #$80                          ; 0x2c5e $AC4E A9 80                    ;;A = #$80 1000_0000
jmp      RNG_get_random_number__A_is_max; 0x2c60 $AC50 4C 8E 96                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Intro__MainMenu__StartGame_or_PasswordEntry__PasswordEntry                     ;
lda      #$10                          ; 0x2c63 $AC53 A9 10                    ;;A = #$10 0001_0000
jsr      LE142                         ; 0x2c65 $AC55 20 42 E1                 ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2c68 $AC58 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2c6b $AC5B 20 34 95 ;
jsr      L836C                         ; 0x2c6e $AC5E 20 6C 83                 ;
lda      #$00                          ; 0x2c71 $AC61 A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x2c73 $AC63 20 51 DF  ;
lda      #$BA                          ; 0x2c76 $AC66 A9 BA                    ;;A = #$ba 1011_1010
sta      $0D                           ; 0x2c78 $AC68 85 0D                    ;
lda      #$18                          ; 0x2c7a $AC6A A9 18                    ;;A = #$18 0001_1000
sta      $0C                           ; 0x2c7c $AC6C 85 0C                    ;
lda      #$10                          ; 0x2c7e $AC6E A9 10                    ;;A = #$10 0001_0000
sta      $A0                           ; 0x2c80 $AC70 85 A0                    ;
ldx      #$05                          ; 0x2c82 $AC72 A2 05                    ;;X = #$05 0000_0101
stx      $9E                           ; 0x2c84 $AC74 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$04                          ; 0x2c86 $AC76 A0 04                    ;;Y = #$04 0000_0100
sty      $9F                           ; 0x2c88 $AC78 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x2c8a $AC7A 20 36 96                 ;
ldx      #$04                          ; 0x2c8d $AC7D A2 04                    ;;X = #$04 0000_0100
stx      $9E                           ; 0x2c8f $AC7F 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$04                          ; 0x2c91 $AC81 A0 04                    ;;Y = #$04 0000_0100
sty      $9F                           ; 0x2c93 $AC83 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L961F                         ; 0x2c95 $AC85 20 1F 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x2c98 $AC88 20 5D 96  ;
lda      #$FF                          ; 0x2c9b $AC8B A9 FF                    ;;A = #$ff 1111_1111
ldy      #$05                          ; 0x2c9d $AC8D A0 05                    ;;Y = #$05 0000_0101
LAC8F                                                                          ;
sta      $2007                         ; 0x2c9f $AC8F 8D 07 20                 ;;Data ($2007) <> read/write
dey                                    ; 0x2ca2 $AC92 88                       ;
bne      LAC8F                         ; 0x2ca3 $AC93 D0 FA                    ;
ldx      #$04                          ; 0x2ca5 $AC95 A2 04                    ;;X = #$04 0000_0100
stx      $9E                           ; 0x2ca7 $AC97 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$09                          ; 0x2ca9 $AC99 A0 09                    ;;Y = #$09 0000_1001
sty      $9F                           ; 0x2cab $AC9B 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$13                          ; 0x2cad $AC9D A9 13                    ;;A = #$13 0001_0011
sta      $A0                           ; 0x2caf $AC9F 85 A0                    ;
jsr      L9636                         ; 0x2cb1 $ACA1 20 36 96                 ;
ldy      #$0D                          ; 0x2cb4 $ACA4 A0 0D                    ;;Y = #$0d 0000_1101
sty      $9F                           ; 0x2cb6 $ACA6 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2cb8 $ACA8 20 39 96                 ;
ldy      #$11                          ; 0x2cbb $ACAB A0 11                    ;;Y = #$11 0001_0001
sty      $9F                           ; 0x2cbd $ACAD 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x2cbf $ACAF 20 36 96                 ;
ldy      #$15                          ; 0x2cc2 $ACB2 A0 15                    ;;Y = #$15 0001_0101
sty      $9F                           ; 0x2cc4 $ACB4 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9639                         ; 0x2cc6 $ACB6 20 39 96                 ;
ldx      #$02                          ; 0x2cc9 $ACB9 A2 02                    ;;X = #$02 0000_0010
stx      $9E                           ; 0x2ccb $ACBB 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$1B                          ; 0x2ccd $ACBD A0 1B                    ;;Y = #$1b 0001_1011
sty      $9F                           ; 0x2ccf $ACBF 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$17                          ; 0x2cd1 $ACC1 A9 17                    ;;A = #$17 0001_0111
sta      $A0                           ; 0x2cd3 $ACC3 85 A0                    ;
jsr      L9639                         ; 0x2cd5 $ACC5 20 39 96                 ;
ldx      #$10                          ; 0x2cd8 $ACC8 A2 10                    ;;X = #$10 0001_0000
stx      $9E                           ; 0x2cda $ACCA 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$14                          ; 0x2cdc $ACCC A0 14                    ;;Y = #$14 0001_0100
sty      $9F                           ; 0x2cde $ACCE 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L961F                         ; 0x2ce0 $ACD0 20 1F 96                 ;
jsr      L965A                         ; 0x2ce3 $ACD3 20 5A 96                 ;
lda      #$5E                          ; 0x2ce6 $ACD6 A9 5E                    ;;A = #$5e 0101_1110
sta      $2007                         ; 0x2ce8 $ACD8 8D 07 20                 ;;Data ($2007) <> read/write
lda      #$57                          ; 0x2ceb $ACDB A9 57                    ;;A = #$57 0101_0111
sta      $2007                         ; 0x2ced $ACDD 8D 07 20                 ;;Data ($2007) <> read/write
lda      #$00                          ; 0x2cf0 $ACE0 A9 00                    ;;A = #$00 0000_0000
sta      $A0                           ; 0x2cf2 $ACE2 85 A0                    ;
ldx      #$04                          ; 0x2cf4 $ACE4 A2 04                    ;;X = #$04 0000_0100
stx      $9E                           ; 0x2cf6 $ACE6 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$09                          ; 0x2cf8 $ACE8 A0 09                    ;;Y = #$09 0000_1001
sty      $9F                           ; 0x2cfa $ACEA 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$00                          ; 0x2cfc $ACEC A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x2cfe $ACEE 85 3F                    ;
sta      $83                           ; 0x2d00 $ACF0 85 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
sta      $04                           ; 0x2d02 $ACF2 85 04                    ;
LACF4                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2d04 $ACF4 20 7D 96             ;
lda      $9E                           ; 0x2d07 $ACF7 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
asl                                    ; 0x2d09 $ACF9 0A                       ;
asl                                    ; 0x2d0a $ACFA 0A                       ;
asl                                    ; 0x2d0b $ACFB 0A                       ;
sec                                    ; 0x2d0c $ACFC 38                       ;
sbc      #$0C                          ; 0x2d0d $ACFD E9 0C                    ;
sta      $36                           ; 0x2d0f $ACFF 85 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      $9F                           ; 0x2d11 $AD01 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
asl                                    ; 0x2d13 $AD03 0A                       ;
asl                                    ; 0x2d14 $AD04 0A                       ;
asl                                    ; 0x2d15 $AD05 0A                       ;
sec                                    ; 0x2d16 $AD06 38                       ;
sbc      #$11                          ; 0x2d17 $AD07 E9 11                    ;
sta      $37                           ; 0x2d19 $AD09 85 37                    ;;player PosY, 0-14 (small meta-tile size)
jsr      LB4DD                         ; 0x2d1b $AD0B 20 DD B4                 ;
dec      $04                           ; 0x2d1e $AD0E C6 04                    ;
lda      $04                           ; 0x2d20 $AD10 A5 04                    ;
and      #$07                          ; 0x2d22 $AD12 29 07                    ;;Keep Bits:0000_0111
bne      LAD1C                         ; 0x2d24 $AD14 D0 06                    ;
lda      $3E                           ; 0x2d26 $AD16 A5 3E                    ;
eor      #$FF                          ; 0x2d28 $AD18 49 FF                    ;;Flip Bits:1111_1111
sta      $3E                           ; 0x2d2a $AD1A 85 3E                    ;
LAD1C                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2d2c $AD1C 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2d2f $AD1F 20 7E 95              ;
;check if there is a button pressed                                            ;
lda      $B4                           ; 0x2d32 $AD22 A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2d34 $AD24 05 B5                    ;;FF=button B      pressed
ora      $B8                           ; 0x2d36 $AD26 05 B8                    ;;FF=button Up     pressed
ora      $B9                           ; 0x2d38 $AD28 05 B9                    ;;FF=button Down   pressed
ora      $BA                           ; 0x2d3a $AD2A 05 BA                    ;;FF=button Left   pressed
ora      $BB                           ; 0x2d3c $AD2C 05 BB                    ;;FF=button Right  pressed
;if button pressed goto $ACF4                                                  ;
bne      LACF4                         ; 0x2d3e $AD2E D0 C4                    ;
LAD30                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2d40 $AD30 20 7D 96             ;
lda      $9E                           ; 0x2d43 $AD33 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
asl                                    ; 0x2d45 $AD35 0A                       ;
asl                                    ; 0x2d46 $AD36 0A                       ;
asl                                    ; 0x2d47 $AD37 0A                       ;
sec                                    ; 0x2d48 $AD38 38                       ;
sbc      #$0C                          ; 0x2d49 $AD39 E9 0C                    ;
sta      $36                           ; 0x2d4b $AD3B 85 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      $9F                           ; 0x2d4d $AD3D A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
asl                                    ; 0x2d4f $AD3F 0A                       ;
asl                                    ; 0x2d50 $AD40 0A                       ;
asl                                    ; 0x2d51 $AD41 0A                       ;
sec                                    ; 0x2d52 $AD42 38                       ;
sbc      #$11                          ; 0x2d53 $AD43 E9 11                    ;
sta      $37                           ; 0x2d55 $AD45 85 37                    ;;player PosY, 0-14 (small meta-tile size)
jsr      LB4DD                         ; 0x2d57 $AD47 20 DD B4                 ;
dec      $04                           ; 0x2d5a $AD4A C6 04                    ;
lda      $04                           ; 0x2d5c $AD4C A5 04                    ;
and      #$07                          ; 0x2d5e $AD4E 29 07                    ;;Keep Bits:0000_0111
bne      LAD58                         ; 0x2d60 $AD50 D0 06                    ;
lda      $3E                           ; 0x2d62 $AD52 A5 3E                    ;
eor      #$FF                          ; 0x2d64 $AD54 49 FF                    ;;Flip Bits:1111_1111
sta      $3E                           ; 0x2d66 $AD56 85 3E                    ;
LAD58                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x2d68 $AD58 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x2d6b $AD5B 20 7E 95              ;
lda      $B4                           ; 0x2d6e $AD5E A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2d70 $AD60 05 B5                    ;;FF=button B      pressed
ora      $B8                           ; 0x2d72 $AD62 05 B8                    ;;FF=button Up     pressed
ora      $B9                           ; 0x2d74 $AD64 05 B9                    ;;FF=button Down   pressed
ora      $BA                           ; 0x2d76 $AD66 05 BA                    ;;FF=button Left   pressed
ora      $BB                           ; 0x2d78 $AD68 05 BB                    ;;FF=button Right  pressed
beq      LAD30                         ; 0x2d7a $AD6A F0 C4                    ;
lda      $B4                           ; 0x2d7c $AD6C A5 B4                    ;;FF=button A      pressed
ora      $B5                           ; 0x2d7e $AD6E 05 B5                    ;;FF=button B      pressed
beq      PasswordEntry__Dpad_Button_Pressed_MoveCursor; 0x2d80 $AD70 F0 03     ;
jmp      LAE22                         ; 0x2d82 $AD72 4C 22 AE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
PasswordEntry__Dpad_Button_Pressed_MoveCursor                                  ;
lda      $B8                           ; 0x2d85 $AD75 A5 B8                    ;;FF=button Up     pressed
beq      LAD96                         ; 0x2d87 $AD77 F0 1D                    ;
lda      #$02                          ; 0x2d89 $AD79 A9 02                    ;;A = #$02 0000_0010
sta      $3F                           ; 0x2d8b $AD7B 85 3F                    ;
lda      $9F                           ; 0x2d8d $AD7D A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x2d8f $AD7F 38                       ;
sbc      #$04                          ; 0x2d90 $AD80 E9 04                    ;
sta      $9F                           ; 0x2d92 $AD82 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$05                          ; 0x2d94 $AD84 C9 05                    ;
bne      LAD96                         ; 0x2d96 $AD86 D0 0E                    ;
lda      #$15                          ; 0x2d98 $AD88 A9 15                    ;;A = #$15 0001_0101
sta      $9F                           ; 0x2d9a $AD8A 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x2d9c $AD8C A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x2d9e $AD8E C9 14                    ;
bmi      LAD96                         ; 0x2da0 $AD90 30 04                    ;
lda      #$12                          ; 0x2da2 $AD92 A9 12                    ;;A = #$12 0001_0010
sta      $9E                           ; 0x2da4 $AD94 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LAD96                                                                          ;
lda      $B9                           ; 0x2da6 $AD96 A5 B9                    ;;FF=button Down   pressed
beq      LADBB                         ; 0x2da8 $AD98 F0 21                    ;
lda      #$00                          ; 0x2daa $AD9A A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x2dac $AD9C 85 3F                    ;
lda      $9F                           ; 0x2dae $AD9E A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x2db0 $ADA0 18                       ;
adc      #$04                          ; 0x2db1 $ADA1 69 04                    ;
sta      $9F                           ; 0x2db3 $ADA3 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$19                          ; 0x2db5 $ADA5 C9 19                    ;
bne      LADAD                         ; 0x2db7 $ADA7 D0 04                    ;
lda      #$09                          ; 0x2db9 $ADA9 A9 09                    ;;A = #$09 0000_1001
sta      $9F                           ; 0x2dbb $ADAB 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LADAD                                                                          ;
cmp      #$15                          ; 0x2dbd $ADAD C9 15                    ;
bne      LADBB                         ; 0x2dbf $ADAF D0 0A                    ;
lda      $9E                           ; 0x2dc1 $ADB1 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x2dc3 $ADB3 C9 14                    ;
bmi      LADBB                         ; 0x2dc5 $ADB5 30 04                    ;
lda      #$12                          ; 0x2dc7 $ADB7 A9 12                    ;;A = #$12 0001_0010
sta      $9E                           ; 0x2dc9 $ADB9 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LADBB                                                                          ;
lda      $BA                           ; 0x2dcb $ADBB A5 BA                    ;;FF=button Left   pressed
beq      LADE5                         ; 0x2dcd $ADBD F0 26                    ;
lda      #$01                          ; 0x2dcf $ADBF A9 01                    ;;A = #$01 0000_0001
sta      $3F                           ; 0x2dd1 $ADC1 85 3F                    ;
lda      $9E                           ; 0x2dd3 $ADC3 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x2dd5 $ADC5 38                       ;
sbc      #$02                          ; 0x2dd6 $ADC6 E9 02                    ;
sta      $9E                           ; 0x2dd8 $ADC8 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$02                          ; 0x2dda $ADCA C9 02                    ;
bne      LADE5                         ; 0x2ddc $ADCC D0 17                    ;
lda      #$16                          ; 0x2dde $ADCE A9 16                    ;;A = #$16 0001_0110
sta      $9E                           ; 0x2de0 $ADD0 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x2de2 $ADD2 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x2de4 $ADD4 38                       ;
sbc      #$04                          ; 0x2de5 $ADD5 E9 04                    ;
sta      $9F                           ; 0x2de7 $ADD7 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$05                          ; 0x2de9 $ADD9 C9 05                    ;
bne      LADE5                         ; 0x2deb $ADDB D0 08                    ;
lda      #$15                          ; 0x2ded $ADDD A9 15                    ;;A = #$15 0001_0101
sta      $9F                           ; 0x2def $ADDF 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$12                          ; 0x2df1 $ADE1 A9 12                    ;;A = #$12 0001_0010
sta      $9E                           ; 0x2df3 $ADE3 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LADE5                                                                          ;
lda      $BB                           ; 0x2df5 $ADE5 A5 BB                    ;;FF=button Right  pressed
beq      LAE1F                         ; 0x2df7 $ADE7 F0 36                    ;
lda      #$03                          ; 0x2df9 $ADE9 A9 03                    ;;A = #$03 0000_0011
sta      $3F                           ; 0x2dfb $ADEB 85 3F                    ;
lda      $9E                           ; 0x2dfd $ADED A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x2dff $ADEF 18                       ;
adc      #$02                          ; 0x2e00 $ADF0 69 02                    ;
sta      $9E                           ; 0x2e02 $ADF2 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$18                          ; 0x2e04 $ADF4 C9 18                    ;
bne      LAE0B                         ; 0x2e06 $ADF6 D0 13                    ;
lda      #$04                          ; 0x2e08 $ADF8 A9 04                    ;;A = #$04 0000_0100
sta      $9E                           ; 0x2e0a $ADFA 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x2e0c $ADFC A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x2e0e $ADFE 18                       ;
adc      #$04                          ; 0x2e0f $ADFF 69 04                    ;
sta      $9F                           ; 0x2e11 $AE01 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LAE04     = * + $0001                                                          ;
cmp      #$19                          ; 0x2e13 $AE03 C9 19                    ;
bne      LAE1F                         ; 0x2e15 $AE05 D0 18                    ;
lda      #$09                          ; 0x2e17 $AE07 A9 09                    ;;A = #$09 0000_1001
sta      $9F                           ; 0x2e19 $AE09 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LAE0B                                                                          ;
lda      $9F                           ; 0x2e1b $AE0B A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$15                          ; 0x2e1d $AE0D C9 15                    ;
bne      LAE1F                         ; 0x2e1f $AE0F D0 0E                    ;
lda      $9E                           ; 0x2e21 $AE11 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x2e23 $AE13 C9 14                    ;
bmi      LAE1F                         ; 0x2e25 $AE15 30 08                    ;
lda      #$04                          ; 0x2e27 $AE17 A9 04                    ;;A = #$04 0000_0100
sta      $9E                           ; 0x2e29 $AE19 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$09                          ; 0x2e2b $AE1B A9 09                    ;;A = #$09 0000_1001
sta      $9F                           ; 0x2e2d $AE1D 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LAE1F                                                                          ;
jmp      LACF4                         ; 0x2e2f $AE1F 4C F4 AC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAE22                                                                          ;
lda      #$01                          ; 0x2e32 $AE22 A9 01                    ;;A = #$01 0000_0001
jsr      LE271                         ; 0x2e34 $AE24 20 71 E2                 ;
lda      $9F                           ; 0x2e37 $AE27 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x2e39 $AE29 38                       ;
sbc      #$09                          ; 0x2e3a $AE2A E9 09                    ;
lsr                                    ; 0x2e3c $AE2C 4A                       ;
sta      $08                           ; 0x2e3d $AE2D 85 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x2e3f $AE2F 0A                       ;
asl                                    ; 0x2e40 $AE30 0A                       ;
adc      $08                           ; 0x2e41 $AE31 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x2e43 $AE33 85 08                    ;;save calc'd attack strength to $08 ?
lda      $9E                           ; 0x2e45 $AE35 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x2e47 $AE37 38                       ;
sbc      #$04                          ; 0x2e48 $AE38 E9 04                    ;
lsr                                    ; 0x2e4a $AE3A 4A                       ;
clc                                    ; 0x2e4b $AE3B 18                       ;
adc      $08                           ; 0x2e4c $AE3C 65 08                    ;;save calc'd attack strength to $08 ?
clc                                    ; 0x2e4e $AE3E 18                       ;
adc      #$30                          ; 0x2e4f $AE3F 69 30                    ;
cmp      #$3A                          ; 0x2e51 $AE41 C9 3A                    ;
bmi      LAE48                         ; 0x2e53 $AE43 30 03                    ;
clc                                    ; 0x2e55 $AE45 18                       ;
adc      #$07                          ; 0x2e56 $AE46 69 07                    ;
LAE48                                                                          ;
sta      $08                           ; 0x2e58 $AE48 85 08                    ;;save calc'd attack strength to $08 ?
cmp      #$5B                          ; 0x2e5a $AE4A C9 5B                    ;
bne      LAE51                         ; 0x2e5c $AE4C D0 03                    ;
jmp      LAE97                         ; 0x2e5e $AE4E 4C 97 AE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAE51                                                                          ;
cmp      #$5C                          ; 0x2e61 $AE51 C9 5C                    ;
bne      LAE58                         ; 0x2e63 $AE53 D0 03                    ;
jmp      LAEB3                         ; 0x2e65 $AE55 4C B3 AE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAE58                                                                          ;
lda      $A0                           ; 0x2e68 $AE58 A5 A0                    ;
cmp      #$10                          ; 0x2e6a $AE5A C9 10                    ;
bmi      LAE62                         ; 0x2e6c $AE5C 30 04                    ;
lda      #$0F                          ; 0x2e6e $AE5E A9 0F                    ;;A = #$0f 0000_1111
sta      $A0                           ; 0x2e70 $AE60 85 A0                    ;
LAE62                                                                          ;
ldy      $A0                           ; 0x2e72 $AE62 A4 A0                    ;
lda      $08                           ; 0x2e74 $AE64 A5 08                    ;;save calc'd attack strength to $08 ?
sta      $15,y                         ; 0x2e76 $AE66 99 15 00                 ;;$15 to $24 : current password
lda      $A0                           ; 0x2e79 $AE69 A5 A0                    ;
clc                                    ; 0x2e7b $AE6B 18                       ;
adc      #$08                          ; 0x2e7c $AE6C 69 08                    ;
tax                                    ; 0x2e7e $AE6E AA                       ;
ldy      #$1B                          ; 0x2e7f $AE6F A0 1B                    ;;Y = #$1b 0001_1011
jsr      L9604                         ; 0x2e81 $AE71 20 04 96                 ;
jsr      L965A                         ; 0x2e84 $AE74 20 5A 96                 ;
lda      $08                           ; 0x2e87 $AE77 A5 08                    ;;save calc'd attack strength to $08 ?
sta      $2007                         ; 0x2e89 $AE79 8D 07 20                 ;;Data ($2007) <> read/write
inc      $A0                           ; 0x2e8c $AE7C E6 A0                    ;
lda      $A0                           ; 0x2e8e $AE7E A5 A0                    ;
cmp      #$10                          ; 0x2e90 $AE80 C9 10                    ;
bmi      LAE94                         ; 0x2e92 $AE82 30 10                    ;
lda      #$10                          ; 0x2e94 $AE84 A9 10                    ;;A = #$10 0001_0000
sta      $A0                           ; 0x2e96 $AE86 85 A0                    ;
lda      #$00                          ; 0x2e98 $AE88 A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x2e9a $AE8A 85 3F                    ;
ldx      #$12                          ; 0x2e9c $AE8C A2 12                    ;;X = #$12 0001_0010
stx      $9E                           ; 0x2e9e $AE8E 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$15                          ; 0x2ea0 $AE90 A0 15                    ;;Y = #$15 0001_0101
sty      $9F                           ; 0x2ea2 $AE92 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LAE94                                                                          ;
jmp      LACF4                         ; 0x2ea4 $AE94 4C F4 AC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAE97                                                                          ;
lda      $A0                           ; 0x2ea7 $AE97 A5 A0                    ;
beq      LAEB0                         ; 0x2ea9 $AE99 F0 15                    ;
dec      $A0                           ; 0x2eab $AE9B C6 A0                    ;
lda      $A0                           ; 0x2ead $AE9D A5 A0                    ;
clc                                    ; 0x2eaf $AE9F 18                       ;
adc      #$08                          ; 0x2eb0 $AEA0 69 08                    ;
tax                                    ; 0x2eb2 $AEA2 AA                       ;
ldy      #$1B                          ; 0x2eb3 $AEA3 A0 1B                    ;;Y = #$1b 0001_1011
jsr      L9604                         ; 0x2eb5 $AEA5 20 04 96                 ;
jsr      L965A                         ; 0x2eb8 $AEA8 20 5A 96                 ;
lda      #$40                          ; 0x2ebb $AEAB A9 40                    ;;A = #$40 0100_0000
sta      $2007                         ; 0x2ebd $AEAD 8D 07 20                 ;;Data ($2007) <> read/write
LAEB0                                                                          ;
jmp      LACF4                         ; 0x2ec0 $AEB0 4C F4 AC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAEB3                                                                          ;
lda      $A0                           ; 0x2ec3 $AEB3 A5 A0                    ;
cmp      #$10                          ; 0x2ec5 $AEB5 C9 10                    ;
beq      LAEBC                         ; 0x2ec7 $AEB7 F0 03                    ;
jmp      LB902                         ; 0x2ec9 $AEB9 4C 02 B9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAEBC                                                                          ;
lda      #$00                          ; 0x2ecc $AEBC A9 00                    ;;A = #$00 0000_0000
sta      $28                           ; 0x2ece $AEBE 85 28                    ;
lda      $2C                           ; 0x2ed0 $AEC0 A5 2C                    ;
cmp      #$04                          ; 0x2ed2 $AEC2 C9 04                    ;
bne      LAEED                         ; 0x2ed4 $AEC4 D0 27                    ;
lda      $2A                           ; 0x2ed6 $AEC6 A5 2A                    ;
cmp      #$03                          ; 0x2ed8 $AEC8 C9 03                    ;
bne      LAEED                         ; 0x2eda $AECA D0 21                    ;
lda      $2B                           ; 0x2edc $AECC A5 2B                    ;
cmp      #$02                          ; 0x2ede $AECE C9 02                    ;
bne      LAEED                         ; 0x2ee0 $AED0 D0 1B                    ;
ldy      #$00                          ; 0x2ee2 $AED2 A0 00                    ;;Y = #$00 0000_0000
LAED4                                                                          ;
lda      $15,y                         ; 0x2ee4 $AED4 B9 15 00                 ;;$15 to $24 : current password
clc                                    ; 0x2ee7 $AED7 18                       ;
adc      LB995,y                       ; 0x2ee8 $AED8 79 95 B9                 ;
bne      LAEED                         ; 0x2eeb $AEDB D0 10                    ;
iny                                    ; 0x2eed $AEDD C8                       ;
cpy      #$10                          ; 0x2eee $AEDE C0 10                    ;
bmi      LAED4                         ; 0x2ef0 $AEE0 30 F2                    ;
lda      #$FF                          ; 0x2ef2 $AEE2 A9 FF                    ;;A = #$ff 1111_1111
sta      $28                           ; 0x2ef4 $AEE4 85 28                    ;
lda      #$00                          ; 0x2ef6 $AEE6 A9 00                    ;;A = #$00 0000_0000
sta      $35                           ; 0x2ef8 $AEE8 85 35                    ;
jmp      Player_SetUpForNewGame        ; 0x2efa $AEEA 4C 29 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAEED                                                                          ;
lda      $2A                           ; 0x2efd $AEED A5 2A                    ;
cmp      #$03                          ; 0x2eff $AEEF C9 03                    ;
bne      LAF1D                         ; 0x2f01 $AEF1 D0 2A                    ;
lda      $2B                           ; 0x2f03 $AEF3 A5 2B                    ;
cmp      #$02                          ; 0x2f05 $AEF5 C9 02                    ;
bne      LAF1D                         ; 0x2f07 $AEF7 D0 24                    ;
lda      $35                           ; 0x2f09 $AEF9 A5 35                    ;
beq      LAF1D                         ; 0x2f0b $AEFB F0 20                    ;
ldy      #$00                          ; 0x2f0d $AEFD A0 00                    ;;Y = #$00 0000_0000
LAEFF                                                                          ;
lda      $15,y                         ; 0x2f0f $AEFF B9 15 00                 ;;$15 to $24 : current password
clc                                    ; 0x2f12 $AF02 18                       ;
adc      LB9A5,y                       ; 0x2f13 $AF03 79 A5 B9                 ;
bne      LAF1D                         ; 0x2f16 $AF06 D0 15                    ;
iny                                    ; 0x2f18 $AF08 C8                       ;
cpy      #$10                          ; 0x2f19 $AF09 C0 10                    ;
bmi      LAEFF                         ; 0x2f1b $AF0B 30 F2                    ;
ldy      #$00                          ; 0x2f1d $AF0D A0 00                    ;;Y = #$00 0000_0000
LAF0F                                                                          ;
lda      #$00                          ; 0x2f1f $AF0F A9 00                    ;;A = #$00 0000_0000
sec                                    ; 0x2f21 $AF11 38                       ;
sbc      LB9B5,y                       ; 0x2f22 $AF12 F9 B5 B9                 ;
;$15 to $24 : current password                                                 ;
sta      $15,y                         ; 0x2f25 $AF15 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x2f28 $AF18 C8                       ;
cpy      #$10                          ; 0x2f29 $AF19 C0 10                    ;
bmi      LAF0F                         ; 0x2f2b $AF1B 30 F2                    ;
LAF1D                                                                          ;
lda      #$00                          ; 0x2f2d $AF1D A9 00                    ;;A = #$00 0000_0000
sta      $35                           ; 0x2f2f $AF1F 85 35                    ;
jsr      LB694                         ; 0x2f31 $AF21 20 94 B6                 ;
bcc      LAF29                         ; 0x2f34 $AF24 90 03                    ;
jmp      LB902                         ; 0x2f36 $AF26 4C 02 B9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF29                                                                          ;
lda      #$00                          ; 0x2f39 $AF29 A9 00                    ;;A = #$00 0000_0000
sta      $33                           ; 0x2f3b $AF2B 85 33                    ;;backup value for player CurrentExperience 
sta      $3A                           ; 0x2f3d $AF2D 85 3A                    ;;player CurrentExperience 
jsr      Password__Generate_and_Display; 0x2f3f $AF2F 20 0B B5                 ;
ldy      #$00                          ; 0x2f42 $AF32 A0 00                    ;;Y = #$00 0000_0000
LAF34                                                                          ;
lda      $15,y                         ; 0x2f44 $AF34 B9 15 00                 ;;$15 to $24 : current password
sta      $078C,y                       ; 0x2f47 $AF37 99 8C 07                 ;
iny                                    ; 0x2f4a $AF3A C8                       ;
cpy      #$10                          ; 0x2f4b $AF3B C0 10                    ;
bmi      LAF34                         ; 0x2f4d $AF3D 30 F5                    ;
lda      #$FF                          ; 0x2f4f $AF3F A9 FF                    ;;A = #$ff 1111_1111
sta      $29                           ; 0x2f51 $AF41 85 29                    ;
jmp      L865D                         ; 0x2f53 $AF43 4C 5D 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF46                                                                          ;
jsr      DrawGraphicBar_for_HP         ; 0x2f56 $AF46 20 42 97                 ;
jsr      DrawGraphicBar_for_STR        ; 0x2f59 $AF49 20 51 97                 ;
jsr      DrawGraphicBar_for_EXP        ; 0x2f5c $AF4C 20 57 97                 ;
jsr      DrawGraphicBar_for_MP         ; 0x2f5f $AF4F 20 5D 97                 ;
jsr      Setup_Pointer_9E_and_C__and_Increment9F_andSomething; 0x2f62 $AF52 20 92 97;
lda      #$00                          ; 0x2f65 $AF55 A9 00                    ;;A = #$00 0000_0000
jsr      LE271                         ; 0x2f67 $AF57 20 71 E2                 ;
lda      #$00                          ; 0x2f6a $AF5A A9 00                    ;;A = #$00 0000_0000
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x2f6c $AF5C 20 93 E2     ;
lda      $28                           ; 0x2f6f $AF5F A5 28                    ;
beq      LAF66                         ; 0x2f71 $AF61 F0 03                    ;
jmp      LB082                         ; 0x2f73 $AF63 4C 82 B0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF66                                                                          ;
jsr      LE265                         ; 0x2f76 $AF66 20 65 E2                 ;
lda      $5D                           ; 0x2f79 $AF69 A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
beq      LAF9F                         ; 0x2f7b $AF6B F0 32                    ;
ldx      #$00                          ; 0x2f7d $AF6D A2 00                    ;;X = #$00 0000_0000
stx      $5D                           ; 0x2f7f $AF6F 86 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
dex                                    ; 0x2f81 $AF71 CA                       ;
stx      $63                           ; 0x2f82 $AF72 86 63                    ;;FF=makes the wall surrounding castle disappear
lda      #$85                          ; 0x2f84 $AF74 A9 85                    ;;A = #$85 1000_0101
jsr      L92AF                         ; 0x2f86 $AF76 20 AF 92                 ;
lda      #$0B                          ; 0x2f89 $AF79 A9 0B                    ;;A = #$0b 0000_1011
jsr      LE271                         ; 0x2f8b $AF7B 20 71 E2                 ;
LAF7E                                                                          ;
jsr      DrawGraphicBar_for_HP         ; 0x2f8e $AF7E 20 42 97                 ;
jsr      Setup_Pointer_9E_and_C__and_Increment9F_andSomething; 0x2f91 $AF81 20 92 97;
lda      $38                           ; 0x2f94 $AF84 A5 38                    ;;player hp
cmp      $41                           ; 0x2f96 $AF86 C5 41                    ;;player max hp
bpl      LAF96                         ; 0x2f98 $AF88 10 0C                    ;
ldx      #$04                          ; 0x2f9a $AF8A A2 04                    ;;X = #$04 0000_0100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2f9c $AF8C 20 74 95               ;
inc      $38                           ; 0x2f9f $AF8F E6 38                    ;;player hp
inc      $38                           ; 0x2fa1 $AF91 E6 38                    ;;player hp
jmp      LAF7E                         ; 0x2fa3 $AF93 4C 7E AF                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF96                                                                          ;
lda      #$00                          ; 0x2fa6 $AF96 A9 00                    ;;A = #$00 0000_0000
jsr      LE271                         ; 0x2fa8 $AF98 20 71 E2                 ;
jsr      LE26B                         ; 0x2fab $AF9B 20 6B E2                 ;
rts                                    ; 0x2fae $AF9E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF9F                                                                          ;
lda      #$00                          ; 0x2faf $AF9F A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x2fb1 $AFA1 85 3F                    ;
sta      $86                           ; 0x2fb3 $AFA3 85 86                    ;;COUNTER (1 bit boolean counter) for changing sprite priority
lda      #$FF                          ; 0x2fb5 $AFA5 A9 FF                    ;;A = #$ff 1111_1111
sta      $83                           ; 0x2fb7 $AFA7 85 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
lda      #$04                          ; 0x2fb9 $AFA9 A9 04                    ;;A = #$04 0000_0100
sta      $04                           ; 0x2fbb $AFAB 85 04                    ;
LAFAD                                                                          ;
lda      #$08                          ; 0x2fbd $AFAD A9 08                    ;;A = #$08 0000_1000
jsr      LE271                         ; 0x2fbf $AFAF 20 71 E2                 ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2fc2 $AFB2 20 7D 96             ;
jsr      L919D                         ; 0x2fc5 $AFB5 20 9D 91                 ;
jsr      LCF46                         ; 0x2fc8 $AFB8 20 46 CF                 ;
ldx      #$06                          ; 0x2fcb $AFBB A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2fcd $AFBD 20 74 95               ;
lda      #$00                          ; 0x2fd0 $AFC0 A9 00                    ;;A = #$00 0000_0000
jsr      LE271                         ; 0x2fd2 $AFC2 20 71 E2                 ;
ldx      #$06                          ; 0x2fd5 $AFC5 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2fd7 $AFC7 20 74 95               ;
inc      $3F                           ; 0x2fda $AFCA E6 3F                    ;
lda      $3F                           ; 0x2fdc $AFCC A5 3F                    ;
and      #$03                          ; 0x2fde $AFCE 29 03                    ;;Keep Bits:0000_0011
sta      $3F                           ; 0x2fe0 $AFD0 85 3F                    ;
lda      #$09                          ; 0x2fe2 $AFD2 A9 09                    ;;A = #$09 0000_1001
jsr      LE271                         ; 0x2fe4 $AFD4 20 71 E2                 ;
jsr      ClearAll200__set200toF0__setA7to00; 0x2fe7 $AFD7 20 7D 96             ;
jsr      L919D                         ; 0x2fea $AFDA 20 9D 91                 ;
jsr      LCF46                         ; 0x2fed $AFDD 20 46 CF                 ;
ldx      #$06                          ; 0x2ff0 $AFE0 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2ff2 $AFE2 20 74 95               ;
lda      #$00                          ; 0x2ff5 $AFE5 A9 00                    ;;A = #$00 0000_0000
jsr      LE271                         ; 0x2ff7 $AFE7 20 71 E2                 ;
ldx      #$06                          ; 0x2ffa $AFEA A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x2ffc $AFEC 20 74 95               ;
inc      $3F                           ; 0x2fff $AFEF E6 3F                    ;
lda      $3F                           ; 0x3001 $AFF1 A5 3F                    ;
and      #$03                          ; 0x3003 $AFF3 29 03                    ;;Keep Bits:0000_0011
sta      $3F                           ; 0x3005 $AFF5 85 3F                    ;
dec      $04                           ; 0x3007 $AFF7 C6 04                    ;
bne      LAFAD                         ; 0x3009 $AFF9 D0 B2                    ;
jsr      ClearAll200__set200toF0__setA7to00; 0x300b $AFFB 20 7D 96             ;
lda      $36                           ; 0x300e $AFFE A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x3010 $B000 0A                       ;
asl                                    ; 0x3011 $B001 0A                       ;
asl                                    ; 0x3012 $B002 0A                       ;
adc      #$08                          ; 0x3013 $B003 69 08                    ;
sta      $A8                           ; 0x3015 $B005 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0x3017 $B007 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x3019 $B009 0A                       ;
asl                                    ; 0x301a $B00A 0A                       ;
asl                                    ; 0x301b $B00B 0A                       ;
adc      #$0F                          ; 0x301c $B00C 69 0F                    ;
sta      $A9                           ; 0x301e $B00E 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$40                          ; 0x3020 $B010 A9 40                    ;;A = #$40 0100_0000
sta      $AB                           ; 0x3022 $B012 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
jsr      L91D5                         ; 0x3024 $B014 20 D5 91                 ;
jsr      LCF46                         ; 0x3027 $B017 20 46 CF                 ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x302a $B01A 20 34 95 ;
lda      #$08                          ; 0x302d $B01D A9 08                    ;;A = #$08 0000_1000
jsr      LE271                         ; 0x302f $B01F 20 71 E2                 ;
ldx      #$06                          ; 0x3032 $B022 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3034 $B024 20 74 95               ;
lda      #$09                          ; 0x3037 $B027 A9 09                    ;;A = #$09 0000_1001
jsr      LE271                         ; 0x3039 $B029 20 71 E2                 ;
ldx      #$06                          ; 0x303c $B02C A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x303e $B02E 20 74 95               ;
lda      #$0A                          ; 0x3041 $B031 A9 0A                    ;;A = #$0a 0000_1010
jsr      LE271                         ; 0x3043 $B033 20 71 E2                 ;
ldx      #$06                          ; 0x3046 $B036 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3048 $B038 20 74 95               ;
lda      #$09                          ; 0x304b $B03B A9 09                    ;;A = #$09 0000_1001
jsr      LE271                         ; 0x304d $B03D 20 71 E2                 ;
ldx      #$06                          ; 0x3050 $B040 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3052 $B042 20 74 95               ;
lda      #$08                          ; 0x3055 $B045 A9 08                    ;;A = #$08 0000_1000
jsr      LE271                         ; 0x3057 $B047 20 71 E2                 ;
ldx      #$06                          ; 0x305a $B04A A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x305c $B04C 20 74 95               ;
lda      #$00                          ; 0x305f $B04F A9 00                    ;;A = #$00 0000_0000
jsr      LE271                         ; 0x3061 $B051 20 71 E2                 ;
lda      #$BA                          ; 0x3064 $B054 A9 BA                    ;;A = #$ba 1011_1010
sta      $0D                           ; 0x3066 $B056 85 0D                    ;
lda      #$DB                          ; 0x3068 $B058 A9 DB                    ;;A = #$db 1101_1011
sta      $0C                           ; 0x306a $B05A 85 0C                    ;
lda      #$17                          ; 0x306c $B05C A9 17                    ;;A = #$17 0001_0111
sta      $A0                           ; 0x306e $B05E 85 A0                    ;
ldx      #$02                          ; 0x3070 $B060 A2 02                    ;;X = #$02 0000_0010
stx      $9E                           ; 0x3072 $B062 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$1B                          ; 0x3074 $B064 A0 1B                    ;;Y = #$1b 0001_1011
sty      $9F                           ; 0x3076 $B066 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9636                         ; 0x3078 $B068 20 36 96                 ;
lda      #$00                          ; 0x307b $B06B A9 00                    ;;A = #$00 0000_0000
sta      $04                           ; 0x307d $B06D 85 04                    ;
LB06F                                                                          ;
jsr      L951A                         ; 0x307f $B06F 20 1A 95                 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x3082 $B072 20 7E 95              ;
lda      $B6                           ; 0x3085 $B075 A5 B6                    ;;FF=button Select pressed
ora      $B7                           ; 0x3087 $B077 05 B7                    ;;FF=button Start  pressed
bne      LB07F                         ; 0x3089 $B079 D0 04                    ;
dec      $04                           ; 0x308b $B07B C6 04                    ;
bne      LB06F                         ; 0x308d $B07D D0 F0                    ;
LB07F                                                                          ;
jmp      L8615                         ; 0x308f $B07F 4C 15 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB082                                                                          ;
lda      $41                           ; 0x3092 $B082 A5 41                    ;;player max hp
sta      $38                           ; 0x3094 $B084 85 38                    ;;player hp
jsr      DrawGraphicBar_for_HP         ; 0x3096 $B086 20 42 97                 ;
jsr      Setup_Pointer_9E_and_C__and_Increment9F_andSomething; 0x3099 $B089 20 92 97;
rts                                    ; 0x309c $B08C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB08D                                                                          ;
jsr      DrawGraphicBar_for_HP         ; 0x309d $B08D 20 42 97                 ;
jsr      Setup_Pointer_9E_and_C__and_Increment9F_andSomething; 0x30a0 $B090 20 92 97;
lda      #$00                          ; 0x30a3 $B093 A9 00                    ;;A = #$00 0000_0000
jsr      LE142                         ; 0x30a5 $B095 20 42 E1                 ;
ldx      #$20                          ; 0x30a8 $B098 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x30aa $B09A 20 74 95               ;
lda      #$06                          ; 0x30ad $B09D A9 06                    ;;A = #$06 0000_0110
sta      $04                           ; 0x30af $B09F 85 04                    ;
LB0A1                                                                          ;
lda      #$01                          ; 0x30b1 $B0A1 A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x30b3 $B0A3 20 51 DF  ;
ldx      #$06                          ; 0x30b6 $B0A6 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x30b8 $B0A8 20 74 95               ;
lda      #$00                          ; 0x30bb $B0AB A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x30bd $B0AD 20 51 DF  ;
ldx      #$06                          ; 0x30c0 $B0B0 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x30c2 $B0B2 20 74 95               ;
jsr      LA82E                         ; 0x30c5 $B0B5 20 2E A8                 ;
dec      $04                           ; 0x30c8 $B0B8 C6 04                    ;
bne      LB0A1                         ; 0x30ca $B0BA D0 E5                    ;
jsr      ClearAll200__set200toF0__setA7to00; 0x30cc $B0BC 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x30cf $B0BF 20 34 95 ;
lda      #$0D                          ; 0x30d2 $B0C2 A9 0D                    ;;A = #$0d 0000_1101
jsr      DF11_load_palette_and_implement__index_with_A; 0x30d4 $B0C4 20 11 DF  ;
lda      #$FF                          ; 0x30d7 $B0C7 A9 FF                    ;;A = #$ff 1111_1111
sta      $83                           ; 0x30d9 $B0C9 85 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
lda      $36                           ; 0x30db $B0CB A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x30dd $B0CD 0A                       ;
asl                                    ; 0x30de $B0CE 0A                       ;
asl                                    ; 0x30df $B0CF 0A                       ;
adc      #$08                          ; 0x30e0 $B0D0 69 08                    ;
sta      $36                           ; 0x30e2 $B0D2 85 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      $37                           ; 0x30e4 $B0D4 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x30e6 $B0D6 0A                       ;
asl                                    ; 0x30e7 $B0D7 0A                       ;
asl                                    ; 0x30e8 $B0D8 0A                       ;
adc      #$0F                          ; 0x30e9 $B0D9 69 0F                    ;
sta      $37                           ; 0x30eb $B0DB 85 37                    ;;player PosY, 0-14 (small meta-tile size)
LB0DD                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x30ed $B0DD 20 7D 96             ;
jsr      LB4DD                         ; 0x30f0 $B0E0 20 DD B4                 ;
ldx      #$06                          ; 0x30f3 $B0E3 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x30f5 $B0E5 20 74 95               ;
jsr      LA82E                         ; 0x30f8 $B0E8 20 2E A8                 ;
lda      $36                           ; 0x30fb $B0EB A5 36                    ;;player PosX, 0-14 (small meta-tile size)
cmp      #$58                          ; 0x30fd $B0ED C9 58                    ;
beq      LB107                         ; 0x30ff $B0EF F0 16                    ;
bcs      LB0FD                         ; 0x3101 $B0F1 B0 0A                    ;
inc      $36                           ; 0x3103 $B0F3 E6 36                    ;;player PosX, 0-14 (small meta-tile size)
inc      $36                           ; 0x3105 $B0F5 E6 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      #$03                          ; 0x3107 $B0F7 A9 03                    ;;A = #$03 0000_0011
sta      $3F                           ; 0x3109 $B0F9 85 3F                    ;
bne      LB0DD                         ; 0x310b $B0FB D0 E0                    ;
LB0FD                                                                          ;
dec      $36                           ; 0x310d $B0FD C6 36                    ;;player PosX, 0-14 (small meta-tile size)
dec      $36                           ; 0x310f $B0FF C6 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      #$01                          ; 0x3111 $B101 A9 01                    ;;A = #$01 0000_0001
sta      $3F                           ; 0x3113 $B103 85 3F                    ;
bne      LB0DD                         ; 0x3115 $B105 D0 D6                    ;
LB107                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x3117 $B107 20 7D 96             ;
jsr      LB4DD                         ; 0x311a $B10A 20 DD B4                 ;
ldx      #$06                          ; 0x311d $B10D A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x311f $B10F 20 74 95               ;
jsr      LA82E                         ; 0x3122 $B112 20 2E A8                 ;
lda      $37                           ; 0x3125 $B115 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
cmp      #$5F                          ; 0x3127 $B117 C9 5F                    ;
beq      LB131                         ; 0x3129 $B119 F0 16                    ;
bcs      LB127                         ; 0x312b $B11B B0 0A                    ;
inc      $37                           ; 0x312d $B11D E6 37                    ;;player PosY, 0-14 (small meta-tile size)
inc      $37                           ; 0x312f $B11F E6 37                    ;;player PosY, 0-14 (small meta-tile size)
lda      #$00                          ; 0x3131 $B121 A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x3133 $B123 85 3F                    ;
beq      LB107                         ; 0x3135 $B125 F0 E0                    ;
LB127                                                                          ;
dec      $37                           ; 0x3137 $B127 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
dec      $37                           ; 0x3139 $B129 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
lda      #$02                          ; 0x313b $B12B A9 02                    ;;A = #$02 0000_0010
sta      $3F                           ; 0x313d $B12D 85 3F                    ;
bne      LB107                         ; 0x313f $B12F D0 D6                    ;
LB131                                                                          ;
lda      #$00                          ; 0x3141 $B131 A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x3143 $B133 85 3F                    ;
sta      $3E                           ; 0x3145 $B135 85 3E                    ;
lda      #$08                          ; 0x3147 $B137 A9 08                    ;;A = #$08 0000_1000
sta      $04                           ; 0x3149 $B139 85 04                    ;
LB13B                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x314b $B13B 20 7D 96             ;
jsr      LB4DD                         ; 0x314e $B13E 20 DD B4                 ;
ldx      #$0C                          ; 0x3151 $B141 A2 0C                    ;;X = #$0c 0000_1100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3153 $B143 20 74 95               ;
jsr      LA82E                         ; 0x3156 $B146 20 2E A8                 ;
dec      $04                           ; 0x3159 $B149 C6 04                    ;
bne      LB13B                         ; 0x315b $B14B D0 EE                    ;
lda      #$00                          ; 0x315d $B14D A9 00                    ;;A = #$00 0000_0000
sta      $83                           ; 0x315f $B14F 85 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
lda      #$00                          ; 0x3161 $B151 A9 00                    ;;A = #$00 0000_0000
sta      $3E                           ; 0x3163 $B153 85 3E                    ;
ldx      #$5C                          ; 0x3165 $B155 A2 5C                    ;;X = #$5c 0101_1100
stx      $08                           ; 0x3167 $B157 86 08                    ;;save calc'd attack strength to $08 ?
ldy      #$2F                          ; 0x3169 $B159 A0 2F                    ;;Y = #$2f 0010_1111
sty      $09                           ; 0x316b $B15B 84 09                    ;
ldx      #$2C                          ; 0x316d $B15D A2 2C                    ;;X = #$2c 0010_1100
stx      $0A                           ; 0x316f $B15F 86 0A                    ;
ldy      #$7F                          ; 0x3171 $B161 A0 7F                    ;;Y = #$7f 0111_1111
sty      $0B                           ; 0x3173 $B163 84 0B                    ;
ldx      #$8C                          ; 0x3175 $B165 A2 8C                    ;;X = #$8c 1000_1100
stx      $06                           ; 0x3177 $B167 86 06                    ;
ldy      #$7F                          ; 0x3179 $B169 A0 7F                    ;;Y = #$7f 0111_1111
sty      $07                           ; 0x317b $B16B 84 07                    ;
lda      #$18                          ; 0x317d $B16D A9 18                    ;;A = #$18 0001_1000
sta      $04                           ; 0x317f $B16F 85 04                    ;
LB171                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x3181 $B171 20 7D 96             ;
jsr      LB4DD                         ; 0x3184 $B174 20 DD B4                 ;
ldx      $08                           ; 0x3187 $B177 A6 08                    ;;save calc'd attack strength to $08 ?
ldy      $09                           ; 0x3189 $B179 A4 09                    ;
lda      #$01                          ; 0x318b $B17B A9 01                    ;;A = #$01 0000_0001
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x318d $B17D 20 F7 AB;
ldx      $0A                           ; 0x3190 $B180 A6 0A                    ;
ldy      $0B                           ; 0x3192 $B182 A4 0B                    ;
lda      #$03                          ; 0x3194 $B184 A9 03                    ;;A = #$03 0000_0011
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x3196 $B186 20 F7 AB;
ldx      $06                           ; 0x3199 $B189 A6 06                    ;
ldy      $07                           ; 0x319b $B18B A4 07                    ;
lda      #$02                          ; 0x319d $B18D A9 02                    ;;A = #$02 0000_0010
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x319f $B18F 20 F7 AB;
ldx      #$0C                          ; 0x31a2 $B192 A2 0C                    ;;X = #$0c 0000_1100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x31a4 $B194 20 74 95               ;
jsr      LA82E                         ; 0x31a7 $B197 20 2E A8                 ;
dec      $04                           ; 0x31aa $B19A C6 04                    ;
bne      LB171                         ; 0x31ac $B19C D0 D3                    ;
lda      #$10                          ; 0x31ae $B19E A9 10                    ;;A = #$10 0001_0000
sta      $04                           ; 0x31b0 $B1A0 85 04                    ;
LB1A2                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x31b2 $B1A2 20 7D 96             ;
jsr      LB4DD                         ; 0x31b5 $B1A5 20 DD B4                 ;
inc      $08                           ; 0x31b8 $B1A8 E6 08                    ;;save calc'd attack strength to $08 ?
inc      $09                           ; 0x31ba $B1AA E6 09                    ;
inc      $09                           ; 0x31bc $B1AC E6 09                    ;
inc      $09                           ; 0x31be $B1AE E6 09                    ;
ldx      $08                           ; 0x31c0 $B1B0 A6 08                    ;;save calc'd attack strength to $08 ?
ldy      $09                           ; 0x31c2 $B1B2 A4 09                    ;
lda      #$01                          ; 0x31c4 $B1B4 A9 01                    ;;A = #$01 0000_0001
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x31c6 $B1B6 20 F7 AB;
inc      $0A                           ; 0x31c9 $B1B9 E6 0A                    ;
inc      $0A                           ; 0x31cb $B1BB E6 0A                    ;
inc      $0A                           ; 0x31cd $B1BD E6 0A                    ;
inc      $0A                           ; 0x31cf $B1BF E6 0A                    ;
dec      $0B                           ; 0x31d1 $B1C1 C6 0B                    ;
dec      $0B                           ; 0x31d3 $B1C3 C6 0B                    ;
ldx      $0A                           ; 0x31d5 $B1C5 A6 0A                    ;
ldy      $0B                           ; 0x31d7 $B1C7 A4 0B                    ;
lda      #$03                          ; 0x31d9 $B1C9 A9 03                    ;;A = #$03 0000_0011
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x31db $B1CB 20 F7 AB;
dec      $06                           ; 0x31de $B1CE C6 06                    ;
dec      $06                           ; 0x31e0 $B1D0 C6 06                    ;
dec      $07                           ; 0x31e2 $B1D2 C6 07                    ;
dec      $07                           ; 0x31e4 $B1D4 C6 07                    ;
ldx      $06                           ; 0x31e6 $B1D6 A6 06                    ;
ldy      $07                           ; 0x31e8 $B1D8 A4 07                    ;
lda      #$02                          ; 0x31ea $B1DA A9 02                    ;;A = #$02 0000_0010
jsr      Setup_SpriteData_PointAC__probablyPlayer__maybeFairy; 0x31ec $B1DC 20 F7 AB;
ldx      #$0C                          ; 0x31ef $B1DF A2 0C                    ;;X = #$0c 0000_1100
jsr      GameSpeed__TimerDelay__MenuDelay; 0x31f1 $B1E1 20 74 95               ;
jsr      LA82E                         ; 0x31f4 $B1E4 20 2E A8                 ;
dec      $04                           ; 0x31f7 $B1E7 C6 04                    ;
bne      LB1A2                         ; 0x31f9 $B1E9 D0 B7                    ;
lda      #$0C                          ; 0x31fb $B1EB A9 0C                    ;;A = #$0c 0000_1100
sta      $04                           ; 0x31fd $B1ED 85 04                    ;
LB1EF                                                                          ;
lda      #$01                          ; 0x31ff $B1EF A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x3201 $B1F1 20 51 DF  ;
ldx      #$06                          ; 0x3204 $B1F4 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3206 $B1F6 20 74 95               ;
lda      #$00                          ; 0x3209 $B1F9 A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x320b $B1FB 20 51 DF  ;
ldx      #$06                          ; 0x320e $B1FE A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3210 $B200 20 74 95               ;
jsr      LA82E                         ; 0x3213 $B203 20 2E A8                 ;
dec      $04                           ; 0x3216 $B206 C6 04                    ;
bne      LB1EF                         ; 0x3218 $B208 D0 E5                    ;
ldx      #$05                          ; 0x321a $B20A A2 05                    ;;X = #$05 0000_0101
stx      $9E                           ; 0x321c $B20C 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$14                          ; 0x321e $B20E A0 14                    ;;Y = #$14 0001_0100
sty      $9F                           ; 0x3220 $B210 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$BA                          ; 0x3222 $B212 A9 BA                    ;;A = #$ba 1011_1010
sta      $0D                           ; 0x3224 $B214 85 0D                    ;
lda      #$B9                          ; 0x3226 $B216 A9 B9                    ;;A = #$b9 1011_1001
sta      $0C                           ; 0x3228 $B218 85 0C                    ;
lda      #$10                          ; 0x322a $B21A A9 10                    ;;A = #$10 0001_0000
sta      $A0                           ; 0x322c $B21C 85 A0                    ;
jsr      L9636                         ; 0x322e $B21E 20 36 96                 ;
lda      #$0A                          ; 0x3231 $B221 A9 0A                    ;;A = #$0a 0000_1010
jsr      DF11_load_palette_and_implement__index_with_A; 0x3233 $B223 20 11 DF  ;
lda      #$08                          ; 0x3236 $B226 A9 08                    ;;A = #$08 0000_1000
jsr      LE142                         ; 0x3238 $B228 20 42 E1                 ;
lda      #$00                          ; 0x323b $B22B A9 00                    ;;A = #$00 0000_0000
sta      $04                           ; 0x323d $B22D 85 04                    ;
LB22F                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x323f $B22F 20 7D 96             ;
jsr      LB4DD                         ; 0x3242 $B232 20 DD B4                 ;
ldx      #$6C                          ; 0x3245 $B235 A2 6C                    ;;X = #$6c 0110_1100
stx      $A8                           ; 0x3247 $B237 86 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
ldy      #$5F                          ; 0x3249 $B239 A0 5F                    ;;Y = #$5f 0101_1111
sty      $A9                           ; 0x324b $B23B 84 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$01                          ; 0x324d $B23D A9 01                    ;;A = #$01 0000_0001
sta      $AA                           ; 0x324f $B23F 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$98                          ; 0x3251 $B241 A9 98                    ;;A = #$98 1001_1000
sta      $AD                           ; 0x3253 $B243 85 AD                    ;
lda      #$19                          ; 0x3255 $B245 A9 19                    ;;A = #$19 0001_1001
sta      $AC                           ; 0x3257 $B247 85 AC                    ;
ldx      #$00                          ; 0x3259 $B249 A2 00                    ;;X = #$00 0000_0000
lda      $04                           ; 0x325b $B24B A5 04                    ;
cmp      #$40                          ; 0x325d $B24D C9 40                    ;
bmi      LB252                         ; 0x325f $B24F 30 01                    ;
inx                                    ; 0x3261 $B251 E8                       ;
LB252                                                                          ;
txa                                    ; 0x3262 $B252 8A                       ;
asl                                    ; 0x3263 $B253 0A                       ;
asl                                    ; 0x3264 $B254 0A                       ;
adc      #$F3                          ; 0x3265 $B255 69 F3                    ;
sta      $AB                           ; 0x3267 $B257 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldy      #$00                          ; 0x3269 $B259 A0 00                    ;;Y = #$00 0000_0000
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x326b $B25B 20 8C CE;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x326e $B25E 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x3271 $B261 20 7E 95              ;
lda      $B6                           ; 0x3274 $B264 A5 B6                    ;;FF=button Select pressed
ora      $B7                           ; 0x3276 $B266 05 B7                    ;;FF=button Start  pressed
beq      LB26D                         ; 0x3278 $B268 F0 03                    ;
jmp      L8615                         ; 0x327a $B26A 4C 15 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB26D                                                                          ;
dec      $04                           ; 0x327d $B26D C6 04                    ;
jmp      LB22F                         ; 0x327f $B26F 4C 2F B2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB272                                                                          ;
lda      #$00                          ; 0x3282 $B272 A9 00                    ;;A = #$00 0000_0000
jsr      LE142                         ; 0x3284 $B274 20 42 E1                 ;
lda      #$01                          ; 0x3287 $B277 A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x3289 $B279 20 51 DF  ;
jsr      ClearAll200__set200toF0__setA7to00; 0x328c $B27C 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x328f $B27F 20 34 95 ;
ldx      #$20                          ; 0x3292 $B282 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3294 $B284 20 74 95               ;
lda      #$00                          ; 0x3297 $B287 A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x3299 $B289 20 51 DF  ;
lda      #$0D                          ; 0x329c $B28C A9 0D                    ;;A = #$0d 0000_1101
sta      $08                           ; 0x329e $B28E 85 08                    ;;save calc'd attack strength to $08 ?
LB290                                                                          ;
ldx      #$10                          ; 0x32a0 $B290 A2 10                    ;;X = #$10 0001_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x32a2 $B292 20 74 95               ;
ldx      #$0E                          ; 0x32a5 $B295 A2 0E                    ;;X = #$0e 0000_1110
stx      $9E                           ; 0x32a7 $B297 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      $08                           ; 0x32a9 $B299 A4 08                    ;;save calc'd attack strength to $08 ?
sty      $9F                           ; 0x32ab $B29B 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$03                          ; 0x32ad $B29D A9 03                    ;;A = #$03 0000_0011
sta      $A0                           ; 0x32af $B29F 85 A0                    ;
lda      #$BA                          ; 0x32b1 $B2A1 A9 BA                    ;;A = #$ba 1011_1010
sta      $0D                           ; 0x32b3 $B2A3 85 0D                    ;
lda      #$C9                          ; 0x32b5 $B2A5 A9 C9                    ;;A = #$c9 1100_1001
sta      $0C                           ; 0x32b7 $B2A7 85 0C                    ;
jsr      L951A                         ; 0x32b9 $B2A9 20 1A 95                 ;
LB2AC                                                                          ;
jsr      L9639                         ; 0x32bc $B2AC 20 39 96                 ;
inc      $9F                           ; 0x32bf $B2AF E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x32c1 $B2B1 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$0F                          ; 0x32c3 $B2B3 C9 0F                    ;
bne      LB2AC                         ; 0x32c5 $B2B5 D0 F5                    ;
jsr      LA82E                         ; 0x32c7 $B2B7 20 2E A8                 ;
dec      $08                           ; 0x32ca $B2BA C6 08                    ;;save calc'd attack strength to $08 ?
lda      $08                           ; 0x32cc $B2BC A5 08                    ;;save calc'd attack strength to $08 ?
cmp      #$09                          ; 0x32ce $B2BE C9 09                    ;
bpl      LB290                         ; 0x32d0 $B2C0 10 CE                    ;
lda      #$06                          ; 0x32d2 $B2C2 A9 06                    ;;A = #$06 0000_0110
jsr      LE271                         ; 0x32d4 $B2C4 20 71 E2                 ;
lda      #$80                          ; 0x32d7 $B2C7 A9 80                    ;;A = #$80 1000_0000
sta      $04                           ; 0x32d9 $B2C9 85 04                    ;
LB2CB                                                                          ;
jsr      L951A                         ; 0x32db $B2CB 20 1A 95                 ;
jsr      LA82E                         ; 0x32de $B2CE 20 2E A8                 ;
dec      $04                           ; 0x32e1 $B2D1 C6 04                    ;
bne      LB2CB                         ; 0x32e3 $B2D3 D0 F6                    ;
lda      #$09                          ; 0x32e5 $B2D5 A9 09                    ;;A = #$09 0000_1001
sta      $08                           ; 0x32e7 $B2D7 85 08                    ;;save calc'd attack strength to $08 ?
LB2D9                                                                          ;
ldx      #$10                          ; 0x32e9 $B2D9 A2 10                    ;;X = #$10 0001_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x32eb $B2DB 20 74 95               ;
ldx      #$0E                          ; 0x32ee $B2DE A2 0E                    ;;X = #$0e 0000_1110
stx      $9E                           ; 0x32f0 $B2E0 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      $08                           ; 0x32f2 $B2E2 A4 08                    ;;save calc'd attack strength to $08 ?
sty      $9F                           ; 0x32f4 $B2E4 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$03                          ; 0x32f6 $B2E6 A9 03                    ;;A = #$03 0000_0011
sta      $A0                           ; 0x32f8 $B2E8 85 A0                    ;
lda      #$BA                          ; 0x32fa $B2EA A9 BA                    ;;A = #$ba 1011_1010
sta      $0D                           ; 0x32fc $B2EC 85 0D                    ;
lda      #$C9                          ; 0x32fe $B2EE A9 C9                    ;;A = #$c9 1100_1001
sta      $0C                           ; 0x3300 $B2F0 85 0C                    ;
jsr      L951A                         ; 0x3302 $B2F2 20 1A 95                 ;
LB2F5                                                                          ;
jsr      L9639                         ; 0x3305 $B2F5 20 39 96                 ;
inc      $9F                           ; 0x3308 $B2F8 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x330a $B2FA A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$0F                          ; 0x330c $B2FC C9 0F                    ;
bne      LB2F5                         ; 0x330e $B2FE D0 F5                    ;
jsr      LA82E                         ; 0x3310 $B300 20 2E A8                 ;
inc      $08                           ; 0x3313 $B303 E6 08                    ;;save calc'd attack strength to $08 ?
lda      $08                           ; 0x3315 $B305 A5 08                    ;;save calc'd attack strength to $08 ?
cmp      #$0F                          ; 0x3317 $B307 C9 0F                    ;
bmi      LB2D9                         ; 0x3319 $B309 30 CE                    ;
lda      #$FF                          ; 0x331b $B30B A9 FF                    ;;A = #$ff 1111_1111
sta      $81                           ; 0x331d $B30D 85 81                    ;;COUNTER? flash palette to white when reach =0
lda      #$14                          ; 0x331f $B30F A9 14                    ;;A = #$14 0001_0100
jsr      LE142                         ; 0x3321 $B311 20 42 E1                 ;
rts                                    ; 0x3324 $B314 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB315                                                                          ;
lda      #$00                          ; 0x3325 $B315 A9 00                    ;;A = #$00 0000_0000
jsr      LE142                         ; 0x3327 $B317 20 42 E1                 ;
lda      #$01                          ; 0x332a $B31A A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x332c $B31C 20 51 DF  ;
jsr      ClearAll200__set200toF0__setA7to00; 0x332f $B31F 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x3332 $B322 20 34 95 ;
ldx      #$20                          ; 0x3335 $B325 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3337 $B327 20 74 95               ;
lda      #$00                          ; 0x333a $B32A A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x333c $B32C 20 51 DF  ;
ldx      #$16                          ; 0x333f $B32F A2 16                    ;;X = #$16 0001_0110
stx      $08                           ; 0x3341 $B331 86 08                    ;;save calc'd attack strength to $08 ?
ldy      #$12                          ; 0x3343 $B333 A0 12                    ;;Y = #$12 0001_0010
sty      $09                           ; 0x3345 $B335 84 09                    ;
LB337                                                                          ;
ldx      #$20                          ; 0x3347 $B337 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3349 $B339 20 74 95               ;
ldx      $08                           ; 0x334c $B33C A6 08                    ;;save calc'd attack strength to $08 ?
ldy      $09                           ; 0x334e $B33E A4 09                    ;
lda      #$E3                          ; 0x3350 $B340 A9 E3                    ;;A = #$e3 1110_0011
jsr      LB3D3                         ; 0x3352 $B342 20 D3 B3                 ;
jsr      LA82E                         ; 0x3355 $B345 20 2E A8                 ;
lda      #$03                          ; 0x3358 $B348 A9 03                    ;;A = #$03 0000_0011
jsr      LE271                         ; 0x335a $B34A 20 71 E2                 ;
ldx      #$20                          ; 0x335d $B34D A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x335f $B34F 20 74 95               ;
ldx      $08                           ; 0x3362 $B352 A6 08                    ;;save calc'd attack strength to $08 ?
dex                                    ; 0x3364 $B354 CA                       ;
txa                                    ; 0x3365 $B355 8A                       ;
cmp      #$02                          ; 0x3366 $B356 C9 02                    ;
bmi      LB37E                         ; 0x3368 $B358 30 24                    ;
lda      $09                           ; 0x336a $B35A A5 09                    ;
sec                                    ; 0x336c $B35C 38                       ;
sbc      #$04                          ; 0x336d $B35D E9 04                    ;
tay                                    ; 0x336f $B35F A8                       ;
lda      #$E7                          ; 0x3370 $B360 A9 E7                    ;;A = #$e7 1110_0111
jsr      LB3D3                         ; 0x3372 $B362 20 D3 B3                 ;
jsr      LA82E                         ; 0x3375 $B365 20 2E A8                 ;
lda      #$03                          ; 0x3378 $B368 A9 03                    ;;A = #$03 0000_0011
jsr      LE271                         ; 0x337a $B36A 20 71 E2                 ;
lda      $08                           ; 0x337d $B36D A5 08                    ;;save calc'd attack strength to $08 ?
sec                                    ; 0x337f $B36F 38                       ;
sbc      #$05                          ; 0x3380 $B370 E9 05                    ;
sta      $08                           ; 0x3382 $B372 85 08                    ;;save calc'd attack strength to $08 ?
lda      $09                           ; 0x3384 $B374 A5 09                    ;
sec                                    ; 0x3386 $B376 38                       ;
sbc      #$04                          ; 0x3387 $B377 E9 04                    ;
sta      $09                           ; 0x3389 $B379 85 09                    ;
jmp      LB337                         ; 0x338b $B37B 4C 37 B3                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB37E                                                                          ;
ldx      #$16                          ; 0x338e $B37E A2 16                    ;;X = #$16 0001_0110
stx      $08                           ; 0x3390 $B380 86 08                    ;;save calc'd attack strength to $08 ?
ldy      #$12                          ; 0x3392 $B382 A0 12                    ;;Y = #$12 0001_0010
sty      $09                           ; 0x3394 $B384 84 09                    ;
LB386                                                                          ;
ldx      #$20                          ; 0x3396 $B386 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3398 $B388 20 74 95               ;
ldx      $08                           ; 0x339b $B38B A6 08                    ;;save calc'd attack strength to $08 ?
ldy      $09                           ; 0x339d $B38D A4 09                    ;
jsr      LB400                         ; 0x339f $B38F 20 00 B4                 ;
jsr      LA82E                         ; 0x33a2 $B392 20 2E A8                 ;
lda      #$03                          ; 0x33a5 $B395 A9 03                    ;;A = #$03 0000_0011
jsr      LE271                         ; 0x33a7 $B397 20 71 E2                 ;
ldx      #$20                          ; 0x33aa $B39A A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x33ac $B39C 20 74 95               ;
ldx      $08                           ; 0x33af $B39F A6 08                    ;;save calc'd attack strength to $08 ?
dex                                    ; 0x33b1 $B3A1 CA                       ;
txa                                    ; 0x33b2 $B3A2 8A                       ;
cmp      #$02                          ; 0x33b3 $B3A3 C9 02                    ;
bmi      LB3C9                         ; 0x33b5 $B3A5 30 22                    ;
lda      $09                           ; 0x33b7 $B3A7 A5 09                    ;
sec                                    ; 0x33b9 $B3A9 38                       ;
sbc      #$04                          ; 0x33ba $B3AA E9 04                    ;
tay                                    ; 0x33bc $B3AC A8                       ;
jsr      LB400                         ; 0x33bd $B3AD 20 00 B4                 ;
jsr      LA82E                         ; 0x33c0 $B3B0 20 2E A8                 ;
lda      #$03                          ; 0x33c3 $B3B3 A9 03                    ;;A = #$03 0000_0011
jsr      LE271                         ; 0x33c5 $B3B5 20 71 E2                 ;
lda      $08                           ; 0x33c8 $B3B8 A5 08                    ;;save calc'd attack strength to $08 ?
sec                                    ; 0x33ca $B3BA 38                       ;
sbc      #$05                          ; 0x33cb $B3BB E9 05                    ;
sta      $08                           ; 0x33cd $B3BD 85 08                    ;;save calc'd attack strength to $08 ?
lda      $09                           ; 0x33cf $B3BF A5 09                    ;
sec                                    ; 0x33d1 $B3C1 38                       ;
sbc      #$04                          ; 0x33d2 $B3C2 E9 04                    ;
sta      $09                           ; 0x33d4 $B3C4 85 09                    ;
jmp      LB386                         ; 0x33d6 $B3C6 4C 86 B3                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB3C9                                                                          ;
lda      #$FF                          ; 0x33d9 $B3C9 A9 FF                    ;;A = #$ff 1111_1111
sta      $81                           ; 0x33db $B3CB 85 81                    ;;COUNTER? flash palette to white when reach =0
lda      #$14                          ; 0x33dd $B3CD A9 14                    ;;A = #$14 0001_0100
jsr      LE142                         ; 0x33df $B3CF 20 42 E1                 ;
rts                                    ; 0x33e2 $B3D2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB3D3                                                                          ;
pha                                    ; 0x33e3 $B3D3 48                       ;
jsr      L9604                         ; 0x33e4 $B3D4 20 04 96                 ;
jsr      L965A                         ; 0x33e7 $B3D7 20 5A 96                 ;
pla                                    ; 0x33ea $B3DA 68                       ;
tax                                    ; 0x33eb $B3DB AA                       ;
stx      $2007                         ; 0x33ec $B3DC 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x33ef $B3DF E8                       ;
stx      $2007                         ; 0x33f0 $B3E0 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x33f3 $B3E3 E8                       ;
txa                                    ; 0x33f4 $B3E4 8A                       ;
pha                                    ; 0x33f5 $B3E5 48                       ;
lda      L0000                         ; 0x33f6 $B3E6 A5 00                    ;
clc                                    ; 0x33f8 $B3E8 18                       ;
adc      #$20                          ; 0x33f9 $B3E9 69 20                    ;
sta      L0000                         ; 0x33fb $B3EB 85 00                    ;
lda      $01                           ; 0x33fd $B3ED A5 01                    ;
adc      #$00                          ; 0x33ff $B3EF 69 00                    ;
sta      $01                           ; 0x3401 $B3F1 85 01                    ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x3403 $B3F3 20 5D 96  ;
pla                                    ; 0x3406 $B3F6 68                       ;
tax                                    ; 0x3407 $B3F7 AA                       ;
stx      $2007                         ; 0x3408 $B3F8 8E 07 20                 ;;Data ($2007) <> read/write
inx                                    ; 0x340b $B3FB E8                       ;
stx      $2007                         ; 0x340c $B3FC 8E 07 20                 ;;Data ($2007) <> read/write
rts                                    ; 0x340f $B3FF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB400                                                                          ;
jsr      L9604                         ; 0x3410 $B400 20 04 96                 ;
jsr      L965A                         ; 0x3413 $B403 20 5A 96                 ;
lda      #$07                          ; 0x3416 $B406 A9 07                    ;;A = #$07 0000_0111
sta      $2007                         ; 0x3418 $B408 8D 07 20                 ;;Data ($2007) <> read/write
sta      $2007                         ; 0x341b $B40B 8D 07 20                 ;;Data ($2007) <> read/write
lda      L0000                         ; 0x341e $B40E A5 00                    ;
clc                                    ; 0x3420 $B410 18                       ;
adc      #$20                          ; 0x3421 $B411 69 20                    ;
sta      L0000                         ; 0x3423 $B413 85 00                    ;
lda      $01                           ; 0x3425 $B415 A5 01                    ;
adc      #$00                          ; 0x3427 $B417 69 00                    ;
sta      $01                           ; 0x3429 $B419 85 01                    ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x342b $B41B 20 5D 96  ;
lda      #$07                          ; 0x342e $B41E A9 07                    ;;A = #$07 0000_0111
sta      $2007                         ; 0x3430 $B420 8D 07 20                 ;;Data ($2007) <> read/write
sta      $2007                         ; 0x3433 $B423 8D 07 20                 ;;Data ($2007) <> read/write
rts                                    ; 0x3436 $B426 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Setup_SpriteData_And_Draw__something__MaybeMusicOrSoundEffectToo               ;
lda      #$00                          ; 0x3437 $B427 A9 00                    ;;A = #$00 0000_0000
jsr      LE142                         ; 0x3439 $B429 20 42 E1                 ;
lda      #$01                          ; 0x343c $B42C A9 01                    ;;A = #$01 0000_0001
jsr      DF51_load_palette_and_implement__index_with_A; 0x343e $B42E 20 51 DF  ;
jsr      ClearAll200__set200toF0__setA7to00; 0x3441 $B431 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x3444 $B434 20 34 95 ;
ldx      #$20                          ; 0x3447 $B437 A2 20                    ;;X = #$20 0010_0000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3449 $B439 20 74 95               ;
lda      #$00                          ; 0x344c $B43C A9 00                    ;;A = #$00 0000_0000
jsr      DF51_load_palette_and_implement__index_with_A; 0x344e $B43E 20 51 DF  ;
lda      #$04                          ; 0x3451 $B441 A9 04                    ;;A = #$04 0000_0100
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x3453 $B443 20 93 E2     ;
lda      #$0F                          ; 0x3456 $B446 A9 0F                    ;;A = #$0f 0000_1111
sta      $08                           ; 0x3458 $B448 85 08                    ;;save calc'd attack strength to $08 ?
LB44A                                                                          ;
jsr      ClearAll200__set200toF0__setA7to00; 0x345a $B44A 20 7D 96             ;
lda      $08                           ; 0x345d $B44D A5 08                    ;;save calc'd attack strength to $08 ?
jsr      Setup_SpriteData_And_Draw__something; 0x345f $B44F 20 9C B4           ;
lda      $08                           ; 0x3462 $B452 A5 08                    ;;save calc'd attack strength to $08 ?
sec                                    ; 0x3464 $B454 38                       ;
sbc      #$12                          ; 0x3465 $B455 E9 12                    ;
jsr      Setup_SpriteData_And_Draw__something; 0x3467 $B457 20 9C B4           ;
lda      $08                           ; 0x346a $B45A A5 08                    ;;save calc'd attack strength to $08 ?
sec                                    ; 0x346c $B45C 38                       ;
sbc      #$24                          ; 0x346d $B45D E9 24                    ;
jsr      Setup_SpriteData_And_Draw__something; 0x346f $B45F 20 9C B4           ;
lda      $08                           ; 0x3472 $B462 A5 08                    ;;save calc'd attack strength to $08 ?
sec                                    ; 0x3474 $B464 38                       ;
sbc      #$36                          ; 0x3475 $B465 E9 36                    ;
jsr      Setup_SpriteData_And_Draw__something; 0x3477 $B467 20 9C B4           ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x347a $B46A 20 34 95 ;
ldx      #$08                          ; 0x347d $B46D A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x347f $B46F 20 74 95               ;
jsr      LA82E                         ; 0x3482 $B472 20 2E A8                 ;
bcc      LB47C                         ; 0x3485 $B475 90 05                    ;
lda      #$04                          ; 0x3487 $B477 A9 04                    ;;A = #$04 0000_0100
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x3489 $B479 20 93 E2     ;
LB47C                                                                          ;
lda      $08                           ; 0x348c $B47C A5 08                    ;;save calc'd attack strength to $08 ?
clc                                    ; 0x348e $B47E 18                       ;
adc      #$02                          ; 0x348f $B47F 69 02                    ;
sta      $08                           ; 0x3491 $B481 85 08                    ;;save calc'd attack strength to $08 ?
cmp      #$E5                          ; 0x3493 $B483 C9 E5                    ;
bcc      LB44A                         ; 0x3495 $B485 90 C3                    ;
lda      #$00                          ; 0x3497 $B487 A9 00                    ;;A = #$00 0000_0000
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x3499 $B489 20 93 E2     ;
jsr      ClearAll200__set200toF0__setA7to00; 0x349c $B48C 20 7D 96             ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x349f $B48F 20 34 95 ;
lda      #$FF                          ; 0x34a2 $B492 A9 FF                    ;;A = #$ff 1111_1111
sta      $81                           ; 0x34a4 $B494 85 81                    ;;COUNTER? flash palette to white when reach =0
lda      #$14                          ; 0x34a6 $B496 A9 14                    ;;A = #$14 0001_0100
jsr      LE142                         ; 0x34a8 $B498 20 42 E1                 ;
rts                                    ; 0x34ab $B49B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Setup_SpriteData_And_Draw__something                                           ;
cmp      #$0F                          ; 0x34ac $B49C C9 0F                    ;
bcc      LB4DC                         ; 0x34ae $B49E 90 3C                    ;
cmp      #$AF                          ; 0x34b0 $B4A0 C9 AF                    ;
bcs      LB4DC                         ; 0x34b2 $B4A2 B0 38                    ;
sta      $A9                           ; 0x34b4 $B4A4 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$88                          ; 0x34b6 $B4A6 A9 88                    ;;A = #$88 1000_1000
sta      $A8                           ; 0x34b8 $B4A8 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      #$02                          ; 0x34ba $B4AA A9 02                    ;;A = #$02 0000_0010
sta      $AA                           ; 0x34bc $B4AC 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$18                          ; 0x34be $B4AE A9 18                    ;;A = #$18 0001_1000
sta      $AB                           ; 0x34c0 $B4B0 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      #$D3                          ; 0x34c2 $B4B2 A9 D3                    ;;A = #$d3 1101_0011
sta      $AD                           ; 0x34c4 $B4B4 85 AD                    ;
lda      #$D3                          ; 0x34c6 $B4B6 A9 D3                    ;;A = #$d3 1101_0011
sta      $AC                           ; 0x34c8 $B4B8 85 AC                    ;
ldy      #$00                          ; 0x34ca $B4BA A0 00                    ;;Y = #$00 0000_0000
lda      $A9                           ; 0x34cc $B4BC A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
and      #$02                          ; 0x34ce $B4BE 29 02                    ;;Keep Bits:0000_0010
beq      LB4C4                         ; 0x34d0 $B4C0 F0 02                    ;
ldy      #$20                          ; 0x34d2 $B4C2 A0 20                    ;;Y = #$20 0010_0000
LB4C4                                                                          ;
tya                                    ; 0x34d4 $B4C4 98                       ;
pha                                    ; 0x34d5 $B4C5 48                       ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x34d6 $B4C6 20 8C CE;
pla                                    ; 0x34d9 $B4C9 68                       ;
tay                                    ; 0x34da $B4CA A8                       ;
lda      $A8                           ; 0x34db $B4CB A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x34dd $B4CD 18                       ;
adc      #$18                          ; 0x34de $B4CE 69 18                    ;
sta      $A8                           ; 0x34e0 $B4D0 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $A9                           ; 0x34e2 $B4D2 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sec                                    ; 0x34e4 $B4D4 38                       ;
sbc      #$10                          ; 0x34e5 $B4D5 E9 10                    ;
sta      $A9                           ; 0x34e7 $B4D7 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x34e9 $B4D9 20 8C CE;
LB4DC                                                                          ;
rts                                    ; 0x34ec $B4DC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB4DD                                                                          ;
lda      #$98                          ; 0x34ed $B4DD A9 98                    ;;A = #$98 1001_1000
sta      $AD                           ; 0x34ef $B4DF 85 AD                    ;
lda      #$19                          ; 0x34f1 $B4E1 A9 19                    ;;A = #$19 0001_1001
sta      $AC                           ; 0x34f3 $B4E3 85 AC                    ;
ldx      $36                           ; 0x34f5 $B4E5 A6 36                    ;;player PosX, 0-14 (small meta-tile size)
stx      $A8                           ; 0x34f7 $B4E7 86 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
ldy      $37                           ; 0x34f9 $B4E9 A4 37                    ;;player PosY, 0-14 (small meta-tile size)
sty      $A9                           ; 0x34fb $B4EB 84 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$00                          ; 0x34fd $B4ED A9 00                    ;;A = #$00 0000_0000
sta      $AA                           ; 0x34ff $B4EF 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $AB                           ; 0x3501 $B4F1 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      $83                           ; 0x3503 $B4F3 A5 83                    ;;$AE -> ;bit 3-0: right, up, left, down -> $83		;$83:when set animate the player movement?
beq      LB4FD                         ; 0x3505 $B4F5 F0 06                    ;
lda      $3E                           ; 0x3507 $B4F7 A5 3E                    ;
eor      #$FF                          ; 0x3509 $B4F9 49 FF                    ;;Flip Bits:1111_1111
sta      $3E                           ; 0x350b $B4FB 85 3E                    ;
LB4FD                                                                          ;
lda      $3E                           ; 0x350d $B4FD A5 3E                    ;
and      #$04                          ; 0x350f $B4FF 29 04                    ;;Keep Bits:0000_0100
clc                                    ; 0x3511 $B501 18                       ;
adc      $3F                           ; 0x3512 $B502 65 3F                    ;
asl                                    ; 0x3514 $B504 0A                       ;
asl                                    ; 0x3515 $B505 0A                       ;
asl                                    ; 0x3516 $B506 0A                       ;
tay                                    ; 0x3517 $B507 A8                       ;
jmp      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x3518 $B508 4C 8C CE;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Password__Generate_and_Display                                                 ;
lda      $81                           ; 0x351b $B50B A5 81                    ;;COUNTER? flash palette to white when reach =0
beq      LB513                         ; 0x351d $B50D F0 04                    ;
lda      $42                           ; 0x351f $B50F A5 42                    ;;player max mp
sta      $3B                           ; 0x3521 $B511 85 3B                    ;;player mp
LB513                                                                          ;
lda      #$00                          ; 0x3523 $B513 A9 00                    ;;A = #$00 0000_0000
ldy      #$00                          ; 0x3525 $B515 A0 00                    ;;Y = #$00 0000_0000
LB517                                                                          ;
sta      $15,y                         ; 0x3527 $B517 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x352a $B51A C8                       ;
cpy      #$10                          ; 0x352b $B51B C0 10                    ;
bne      LB517                         ; 0x352d $B51D D0 F8                    ;
lda      $3C                           ; 0x352f $B51F A5 3C                    ;;player CurrentLevel      
sta      $08                           ; 0x3531 $B521 85 08                    ;;save calc'd attack strength to $08 ?
lda      $37                           ; 0x3533 $B523 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $09                           ; 0x3535 $B525 85 09                    ;
lda      $36                           ; 0x3537 $B527 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $0A                           ; 0x3539 $B529 85 0A                    ;
lda      $59                           ; 0x353b $B52B A5 59                    ;;FF=got sword			(appears in ITEM)
lsr                                    ; 0x353d $B52D 4A                       ;
rol      $15                           ; 0x353e $B52E 26 15                    ;;$15 to $24 : current password
lsr      $08                           ; 0x3540 $B530 46 08                    ;;save calc'd attack strength to $08 ?
rol      $15                           ; 0x3542 $B532 26 15                    ;;$15 to $24 : current password
lsr      $09                           ; 0x3544 $B534 46 09                    ;
rol      $15                           ; 0x3546 $B536 26 15                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x3548 $B538 46 0A                    ;
rol      $15                           ; 0x354a $B53A 26 15                    ;;$15 to $24 : current password
lda      $5A                           ; 0x354c $B53C A5 5A                    ;;FF=got shield 			(appears in ITEM)
lsr                                    ; 0x354e $B53E 4A                       ;
rol      $16                           ; 0x354f $B53F 26 16                    ;;$15 to $24 : current password
lsr      $08                           ; 0x3551 $B541 46 08                    ;;save calc'd attack strength to $08 ?
rol      $16                           ; 0x3553 $B543 26 16                    ;;$15 to $24 : current password
lsr      $09                           ; 0x3555 $B545 46 09                    ;
rol      $16                           ; 0x3557 $B547 26 16                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x3559 $B549 46 0A                    ;
rol      $16                           ; 0x355b $B54B 26 16                    ;;$15 to $24 : current password
lda      $5B                           ; 0x355d $B54D A5 5B                    ;;FF=got lamp 			(appears in ITEM)
lsr                                    ; 0x355f $B54F 4A                       ;
rol      $17                           ; 0x3560 $B550 26 17                    ;;$15 to $24 : current password
lsr      $08                           ; 0x3562 $B552 46 08                    ;;save calc'd attack strength to $08 ?
rol      $17                           ; 0x3564 $B554 26 17                    ;;$15 to $24 : current password
lsr      $09                           ; 0x3566 $B556 46 09                    ;
rol      $17                           ; 0x3568 $B558 26 17                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x356a $B55A 46 0A                    ;
rol      $17                           ; 0x356c $B55C 26 17                    ;;$15 to $24 : current password
lda      $5C                           ; 0x356e $B55E A5 5C                    ;;FF=got cross 			(appears in ITEM)
lsr                                    ; 0x3570 $B560 4A                       ;
rol      $18                           ; 0x3571 $B561 26 18                    ;;$15 to $24 : current password
lsr      $08                           ; 0x3573 $B563 46 08                    ;;save calc'd attack strength to $08 ?
rol      $18                           ; 0x3575 $B565 26 18                    ;;$15 to $24 : current password
lsr      $09                           ; 0x3577 $B567 46 09                    ;
rol      $18                           ; 0x3579 $B569 26 18                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x357b $B56B 46 0A                    ;
rol      $18                           ; 0x357d $B56D 26 18                    ;;$15 to $24 : current password
lda      $47                           ; 0x357f $B56F A5 47                    ;;player CurrentArea       
sta      $08                           ; 0x3581 $B571 85 08                    ;;save calc'd attack strength to $08 ?
lda      $5D                           ; 0x3583 $B573 A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
lsr                                    ; 0x3585 $B575 4A                       ;
rol      $19                           ; 0x3586 $B576 26 19                    ;;$15 to $24 : current password
lsr      $08                           ; 0x3588 $B578 46 08                    ;;save calc'd attack strength to $08 ?
rol      $19                           ; 0x358a $B57A 26 19                    ;;$15 to $24 : current password
lsr      $09                           ; 0x358c $B57C 46 09                    ;
rol      $19                           ; 0x358e $B57E 26 19                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x3590 $B580 46 0A                    ;
rol      $19                           ; 0x3592 $B582 26 19                    ;;$15 to $24 : current password
lda      $3B                           ; 0x3594 $B584 A5 3B                    ;;player mp
sta      $09                           ; 0x3596 $B586 85 09                    ;
lda      $38                           ; 0x3598 $B588 A5 38                    ;;player hp
sta      $0A                           ; 0x359a $B58A 85 0A                    ;
lda      $5E                           ; 0x359c $B58C A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
lsr                                    ; 0x359e $B58E 4A                       ;
rol      $1A                           ; 0x359f $B58F 26 1A                    ;;$15 to $24 : current password
lsr      $08                           ; 0x35a1 $B591 46 08                    ;;save calc'd attack strength to $08 ?
rol      $1A                           ; 0x35a3 $B593 26 1A                    ;;$15 to $24 : current password
lsr      $09                           ; 0x35a5 $B595 46 09                    ;
rol      $1A                           ; 0x35a7 $B597 26 1A                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x35a9 $B599 46 0A                    ;
rol      $1A                           ; 0x35ab $B59B 26 1A                    ;;$15 to $24 : current password
lda      $5F                           ; 0x35ad $B59D A5 5F                    ;;FF=got key 			(appears in ITEM)
lsr                                    ; 0x35af $B59F 4A                       ;
rol      $1B                           ; 0x35b0 $B5A0 26 1B                    ;;$15 to $24 : current password
lsr      $08                           ; 0x35b2 $B5A2 46 08                    ;;save calc'd attack strength to $08 ?
rol      $1B                           ; 0x35b4 $B5A4 26 1B                    ;;$15 to $24 : current password
lsr      $09                           ; 0x35b6 $B5A6 46 09                    ;
rol      $1B                           ; 0x35b8 $B5A8 26 1B                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x35ba $B5AA 46 0A                    ;
rol      $1B                           ; 0x35bc $B5AC 26 1B                    ;;$15 to $24 : current password
lda      $60                           ; 0x35be $B5AE A5 60                    ;;FF=got jewel 			(appears in ITEM)
lsr                                    ; 0x35c0 $B5B0 4A                       ;
rol      $1C                           ; 0x35c1 $B5B1 26 1C                    ;;$15 to $24 : current password
lsr      $08                           ; 0x35c3 $B5B3 46 08                    ;;save calc'd attack strength to $08 ?
rol      $1C                           ; 0x35c5 $B5B5 26 1C                    ;;$15 to $24 : current password
lsr      $09                           ; 0x35c7 $B5B7 46 09                    ;
rol      $1C                           ; 0x35c9 $B5B9 26 1C                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x35cb $B5BB 46 0A                    ;
rol      $1C                           ; 0x35cd $B5BD 26 1C                    ;;$15 to $24 : current password
lda      $61                           ; 0x35cf $B5BF A5 61                    ;;FF=got ring 			(appears in ITEM)
lsr                                    ; 0x35d1 $B5C1 4A                       ;
rol      $1D                           ; 0x35d2 $B5C2 26 1D                    ;;$15 to $24 : current password
lsr      $08                           ; 0x35d4 $B5C4 46 08                    ;;save calc'd attack strength to $08 ?
rol      $1D                           ; 0x35d6 $B5C6 26 1D                    ;;$15 to $24 : current password
lsr      $09                           ; 0x35d8 $B5C8 46 09                    ;
rol      $1D                           ; 0x35da $B5CA 26 1D                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x35dc $B5CC 46 0A                    ;
rol      $1D                           ; 0x35de $B5CE 26 1D                    ;;$15 to $24 : current password
lda      $62                           ; 0x35e0 $B5D0 A5 62                    ;;FF=got ruby			(appears in ITEM)
lsr                                    ; 0x35e2 $B5D2 4A                       ;
rol      $1E                           ; 0x35e3 $B5D3 26 1E                    ;;$15 to $24 : current password
lsr      $08                           ; 0x35e5 $B5D5 46 08                    ;;save calc'd attack strength to $08 ?
rol      $1E                           ; 0x35e7 $B5D7 26 1E                    ;;$15 to $24 : current password
lsr      $09                           ; 0x35e9 $B5D9 46 09                    ;
rol      $1E                           ; 0x35eb $B5DB 26 1E                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x35ed $B5DD 46 0A                    ;
rol      $1E                           ; 0x35ef $B5DF 26 1E                    ;;$15 to $24 : current password
lda      $74                           ; 0x35f1 $B5E1 A5 74                    ;;FF=castle's tree has been burned and is now a hole 
lsr                                    ; 0x35f3 $B5E3 4A                       ;
rol      $1F                           ; 0x35f4 $B5E4 26 1F                    ;;$15 to $24 : current password
lda      $73                           ; 0x35f6 $B5E6 A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
lsr                                    ; 0x35f8 $B5E8 4A                       ;
rol      $1F                           ; 0x35f9 $B5E9 26 1F                    ;;$15 to $24 : current password
lsr      $09                           ; 0x35fb $B5EB 46 09                    ;
rol      $1F                           ; 0x35fd $B5ED 26 1F                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x35ff $B5EF 46 0A                    ;
rol      $1F                           ; 0x3601 $B5F1 26 1F                    ;;$15 to $24 : current password
lsr      $09                           ; 0x3603 $B5F3 46 09                    ;
rol      $20                           ; 0x3605 $B5F5 26 20                    ;;$15 to $24 : current password
lsr      $0A                           ; 0x3607 $B5F7 46 0A                    ;
rol      $20                           ; 0x3609 $B5F9 26 20                    ;;$15 to $24 : current password
lda      $63                           ; 0x360b $B5FB A5 63                    ;;FF=makes the wall surrounding castle disappear
lsr                                    ; 0x360d $B5FD 4A                       ;
rol      $21                           ; 0x360e $B5FE 26 21                    ;;$15 to $24 : current password
lda      $66                           ; 0x3610 $B600 A5 66                    ;;FF=got fairy 3 (appears in ITEM)
lsr                                    ; 0x3612 $B602 4A                       ;
LB603                                                                          ;
rol      $21                           ; 0x3613 $B603 26 21                    ;;$15 to $24 : current password
lda      $65                           ; 0x3615 $B605 A5 65                    ;;FF=got fairy 2 (appears in ITEM)
lsr                                    ; 0x3617 $B607 4A                       ;
rol      $21                           ; 0x3618 $B608 26 21                    ;;$15 to $24 : current password
lda      $64                           ; 0x361a $B60A A5 64                    ;;FF=got fairy 1 (appears in ITEM)
lsr                                    ; 0x361c $B60C 4A                       ;
rol      $21                           ; 0x361d $B60D 26 21                    ;;$15 to $24 : current password
lda      #$00                          ; 0x361f $B60F A9 00                    ;;A = #$00 0000_0000
ldy      #$00                          ; 0x3621 $B611 A0 00                    ;;Y = #$00 0000_0000
LB613                                                                          ;
clc                                    ; 0x3623 $B613 18                       ;
adc      $15,y                         ; 0x3624 $B614 79 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x3627 $B617 C8                       ;
cpy      #$0D                          ; 0x3628 $B618 C0 0D                    ;
bmi      LB613                         ; 0x362a $B61A 30 F7                    ;
and      #$0F                          ; 0x362c $B61C 29 0F                    ;;Keep Bits:0000_1111
sta      $22                           ; 0x362e $B61E 85 22                    ;;$15 to $24 : current password
lda      #$0F                          ; 0x3630 $B620 A9 0F                    ;;A = #$0f 0000_1111
jsr      RNG_get_random_number__A_is_max; 0x3632 $B622 20 8E 96                ;
and      #$08                          ; 0x3635 $B625 29 08                    ;;Keep Bits:0000_1000
beq      LB633                         ; 0x3637 $B627 F0 0A                    ;
ora      $20                           ; 0x3639 $B629 05 20                    ;;$15 to $24 : current password
sta      $20                           ; 0x363b $B62B 85 20                    ;;$15 to $24 : current password
lda      $1F                           ; 0x363d $B62D A5 1F                    ;;$15 to $24 : current password
eor      #$0F                          ; 0x363f $B62F 49 0F                    ;;Flip Bits:0000_1111
sta      $1F                           ; 0x3641 $B631 85 1F                    ;;$15 to $24 : current password
LB633                                                                          ;
lda      $21                           ; 0x3643 $B633 A5 21                    ;;$15 to $24 : current password
bne      LB644                         ; 0x3645 $B635 D0 0D                    ;
lda      $20                           ; 0x3647 $B637 A5 20                    ;;$15 to $24 : current password
ora      #$04                          ; 0x3649 $B639 09 04                    ;;Set Bits:0000_0100
sta      $20                           ; 0x364b $B63B 85 20                    ;;$15 to $24 : current password
lda      #$0F                          ; 0x364d $B63D A9 0F                    ;;A = #$0f 0000_1111
jsr      RNG_get_random_number__A_is_max; 0x364f $B63F 20 8E 96                ;
sta      $21                           ; 0x3652 $B642 85 21                    ;;$15 to $24 : current password
LB644                                                                          ;
lda      #$0F                          ; 0x3654 $B644 A9 0F                    ;;A = #$0f 0000_1111
jsr      RNG_get_random_number__A_is_max; 0x3656 $B646 20 8E 96                ;
sta      $23                           ; 0x3659 $B649 85 23                    ;;$15 to $24 : current password
tax                                    ; 0x365b $B64B AA                       ;
ldy      #$00                          ; 0x365c $B64C A0 00                    ;;Y = #$00 0000_0000
LB64E                                                                          ;
lda      $15,y                         ; 0x365e $B64E B9 15 00                 ;;$15 to $24 : current password
clc                                    ; 0x3661 $B651 18                       ;
adc      Password__related,x           ; 0x3662 $B652 7D C5 B9                 ;
cmp      #$1C                          ; 0x3665 $B655 C9 1C                    ;
bmi      LB65C                         ; 0x3667 $B657 30 03                    ;
sec                                    ; 0x3669 $B659 38                       ;
sbc      #$1C                          ; 0x366a $B65A E9 1C                    ;
LB65C                                                                          ;
sta      $15,y                         ; 0x366c $B65C 99 15 00                 ;;$15 to $24 : current password
inx                                    ; 0x366f $B65F E8                       ;
iny                                    ; 0x3670 $B660 C8                       ;
cpy      #$0E                          ; 0x3671 $B661 C0 0E                    ;
bmi      LB64E                         ; 0x3673 $B663 30 E9                    ;
lda      #$07                          ; 0x3675 $B665 A9 07                    ;;A = #$07 0000_0111
jsr      RNG_get_random_number__A_is_max; 0x3677 $B667 20 8E 96                ;
sta      $24                           ; 0x367a $B66A 85 24                    ;;$15 to $24 : current password
ldy      #$00                          ; 0x367c $B66C A0 00                    ;;Y = #$00 0000_0000
LB66E                                                                          ;
lda      $15,y                         ; 0x367e $B66E B9 15 00                 ;;$15 to $24 : current password
clc                                    ; 0x3681 $B671 18                       ;
adc      $24                           ; 0x3682 $B672 65 24                    ;;$15 to $24 : current password
cmp      #$1C                          ; 0x3684 $B674 C9 1C                    ;
bmi      LB67B                         ; 0x3686 $B676 30 03                    ;
sec                                    ; 0x3688 $B678 38                       ;
sbc      #$1C                          ; 0x3689 $B679 E9 1C                    ;
LB67B                                                                          ;
sta      $15,y                         ; 0x368b $B67B 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x368e $B67E C8                       ;
iny                                    ; 0x368f $B67F C8                       ;
cpy      #$0F                          ; 0x3690 $B680 C0 0F                    ;
bmi      LB66E                         ; 0x3692 $B682 30 EA                    ;
ldy      #$00                          ; 0x3694 $B684 A0 00                    ;;Y = #$00 0000_0000
LB686                                                                          ;
ldx      $15,y                         ; 0x3696 $B686 B6 15                    ;;$15 to $24 : current password
lda      LB955,x                       ; 0x3698 $B688 BD 55 B9                 ;
sta      $15,y                         ; 0x369b $B68B 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x369e $B68E C8                       ;
cpy      #$10                          ; 0x369f $B68F C0 10                    ;
bmi      LB686                         ; 0x36a1 $B691 30 F3                    ;
rts                                    ; 0x36a3 $B693 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB694                                                                          ;
ldy      #$36                          ; 0x36a4 $B694 A0 36                    ;;Y = #$36 0011_0110
lda      #$00                          ; 0x36a6 $B696 A9 00                    ;;A = #$00 0000_0000
LB698                                                                          ;
sta      L0000,y                       ; 0x36a8 $B698 99 00 00                 ;
iny                                    ; 0x36ab $B69B C8                       ;
cpy      #$88                          ; 0x36ac $B69C C0 88                    ;
bne      LB698                         ; 0x36ae $B69E D0 F8                    ;
ldy      #$00                          ; 0x36b0 $B6A0 A0 00                    ;;Y = #$00 0000_0000
LB6A2                                                                          ;
lda      $15,y                         ; 0x36b2 $B6A2 B9 15 00                 ;;$15 to $24 : current password
sec                                    ; 0x36b5 $B6A5 38                       ;
sbc      #$30                          ; 0x36b6 $B6A6 E9 30                    ;
cmp      #$0A                          ; 0x36b8 $B6A8 C9 0A                    ;
bmi      LB6AF                         ; 0x36ba $B6AA 30 03                    ;
sec                                    ; 0x36bc $B6AC 38                       ;
sbc      #$07                          ; 0x36bd $B6AD E9 07                    ;
LB6AF                                                                          ;
tax                                    ; 0x36bf $B6AF AA                       ;
lda      LB971,x                       ; 0x36c0 $B6B0 BD 71 B9                 ;
bpl      LB6B8                         ; 0x36c3 $B6B3 10 03                    ;
jmp      SEC_and_RTS                   ; 0x36c5 $B6B5 4C 00 B9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB6B8                                                                          ;
sta      $15,y                         ; 0x36c8 $B6B8 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x36cb $B6BB C8                       ;
cpy      #$10                          ; 0x36cc $B6BC C0 10                    ;
bmi      LB6A2                         ; 0x36ce $B6BE 30 E2                    ;
ldy      #$00                          ; 0x36d0 $B6C0 A0 00                    ;;Y = #$00 0000_0000
LB6C2                                                                          ;
lda      $15,y                         ; 0x36d2 $B6C2 B9 15 00                 ;;$15 to $24 : current password
sec                                    ; 0x36d5 $B6C5 38                       ;
sbc      $24                           ; 0x36d6 $B6C6 E5 24                    ;;$15 to $24 : current password
bpl      LB6CD                         ; 0x36d8 $B6C8 10 03                    ;
clc                                    ; 0x36da $B6CA 18                       ;
adc      #$1C                          ; 0x36db $B6CB 69 1C                    ;
LB6CD                                                                          ;
sta      $15,y                         ; 0x36dd $B6CD 99 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x36e0 $B6D0 C8                       ;
iny                                    ; 0x36e1 $B6D1 C8                       ;
cpy      #$0F                          ; 0x36e2 $B6D2 C0 0F                    ;
bmi      LB6C2                         ; 0x36e4 $B6D4 30 EC                    ;
ldx      $23                           ; 0x36e6 $B6D6 A6 23                    ;;$15 to $24 : current password
ldy      #$00                          ; 0x36e8 $B6D8 A0 00                    ;;Y = #$00 0000_0000
LB6DA                                                                          ;
lda      $15,y                         ; 0x36ea $B6DA B9 15 00                 ;;$15 to $24 : current password
sec                                    ; 0x36ed $B6DD 38                       ;
sbc      Password__related,x           ; 0x36ee $B6DE FD C5 B9                 ;
bpl      LB6E6                         ; 0x36f1 $B6E1 10 03                    ;
clc                                    ; 0x36f3 $B6E3 18                       ;
adc      #$1C                          ; 0x36f4 $B6E4 69 1C                    ;
LB6E6                                                                          ;
sta      $15,y                         ; 0x36f6 $B6E6 99 15 00                 ;;$15 to $24 : current password
cmp      #$10                          ; 0x36f9 $B6E9 C9 10                    ;
bmi      LB6F0                         ; 0x36fb $B6EB 30 03                    ;
jmp      SEC_and_RTS                   ; 0x36fd $B6ED 4C 00 B9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB6F0                                                                          ;
inx                                    ; 0x3700 $B6F0 E8                       ;
iny                                    ; 0x3701 $B6F1 C8                       ;
cpy      #$0E                          ; 0x3702 $B6F2 C0 0E                    ;
bmi      LB6DA                         ; 0x3704 $B6F4 30 E4                    ;
lda      $20                           ; 0x3706 $B6F6 A5 20                    ;;$15 to $24 : current password
and      #$04                          ; 0x3708 $B6F8 29 04                    ;;Keep Bits:0000_0100
beq      LB700                         ; 0x370a $B6FA F0 04                    ;
lda      #$00                          ; 0x370c $B6FC A9 00                    ;;A = #$00 0000_0000
sta      $21                           ; 0x370e $B6FE 85 21                    ;;$15 to $24 : current password
LB700                                                                          ;
lda      $20                           ; 0x3710 $B700 A5 20                    ;;$15 to $24 : current password
and      #$08                          ; 0x3712 $B702 29 08                    ;;Keep Bits:0000_1000
beq      LB70C                         ; 0x3714 $B704 F0 06                    ;
lda      $1F                           ; 0x3716 $B706 A5 1F                    ;;$15 to $24 : current password
eor      #$0F                          ; 0x3718 $B708 49 0F                    ;;Flip Bits:0000_1111
sta      $1F                           ; 0x371a $B70A 85 1F                    ;;$15 to $24 : current password
LB70C                                                                          ;
lda      $20                           ; 0x371c $B70C A5 20                    ;;$15 to $24 : current password
and      #$03                          ; 0x371e $B70E 29 03                    ;;Keep Bits:0000_0011
sta      $20                           ; 0x3720 $B710 85 20                    ;;$15 to $24 : current password
lda      #$00                          ; 0x3722 $B712 A9 00                    ;;A = #$00 0000_0000
ldy      #$00                          ; 0x3724 $B714 A0 00                    ;;Y = #$00 0000_0000
LB716                                                                          ;
clc                                    ; 0x3726 $B716 18                       ;
adc      $15,y                         ; 0x3727 $B717 79 15 00                 ;;$15 to $24 : current password
iny                                    ; 0x372a $B71A C8                       ;
cpy      #$0D                          ; 0x372b $B71B C0 0D                    ;
bmi      LB716                         ; 0x372d $B71D 30 F7                    ;
and      #$0F                          ; 0x372f $B71F 29 0F                    ;;Keep Bits:0000_1111
cmp      $22                           ; 0x3731 $B721 C5 22                    ;;$15 to $24 : current password
beq      LB728                         ; 0x3733 $B723 F0 03                    ;
jmp      SEC_and_RTS                   ; 0x3735 $B725 4C 00 B9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB728                                                                          ;
lda      #$00                          ; 0x3738 $B728 A9 00                    ;;A = #$00 0000_0000
tax                                    ; 0x373a $B72A AA                       ;
lsr      $21                           ; 0x373b $B72B 46 21                    ;;$15 to $24 : current password
bcc      LB730                         ; 0x373d $B72D 90 01                    ;
dex                                    ; 0x373f $B72F CA                       ;
LB730                                                                          ;
stx      $64                           ; 0x3740 $B730 86 64                    ;;FF=got fairy 1 (appears in ITEM)
tax                                    ; 0x3742 $B732 AA                       ;
lsr      $21                           ; 0x3743 $B733 46 21                    ;;$15 to $24 : current password
bcc      LB738                         ; 0x3745 $B735 90 01                    ;
dex                                    ; 0x3747 $B737 CA                       ;
LB738                                                                          ;
stx      $65                           ; 0x3748 $B738 86 65                    ;;FF=got fairy 2 (appears in ITEM)
tax                                    ; 0x374a $B73A AA                       ;
lsr      $21                           ; 0x374b $B73B 46 21                    ;;$15 to $24 : current password
bcc      LB740                         ; 0x374d $B73D 90 01                    ;
dex                                    ; 0x374f $B73F CA                       ;
LB740                                                                          ;
stx      $66                           ; 0x3750 $B740 86 66                    ;;FF=got fairy 3 (appears in ITEM)
tax                                    ; 0x3752 $B742 AA                       ;
lsr      $21                           ; 0x3753 $B743 46 21                    ;;$15 to $24 : current password
bcc      LB748                         ; 0x3755 $B745 90 01                    ;
dex                                    ; 0x3757 $B747 CA                       ;
LB748                                                                          ;
stx      $63                           ; 0x3758 $B748 86 63                    ;;FF=makes the wall surrounding castle disappear
lsr      $20                           ; 0x375a $B74A 46 20                    ;;$15 to $24 : current password
rol      $38                           ; 0x375c $B74C 26 38                    ;;player hp
lsr      $20                           ; 0x375e $B74E 46 20                    ;;$15 to $24 : current password
rol      $3B                           ; 0x3760 $B750 26 3B                    ;;player mp
lsr      $1F                           ; 0x3762 $B752 46 1F                    ;;$15 to $24 : current password
rol      $38                           ; 0x3764 $B754 26 38                    ;;player hp
lsr      $1F                           ; 0x3766 $B756 46 1F                    ;;$15 to $24 : current password
rol      $3B                           ; 0x3768 $B758 26 3B                    ;;player mp
tax                                    ; 0x376a $B75A AA                       ;
lsr      $1F                           ; 0x376b $B75B 46 1F                    ;;$15 to $24 : current password
bcc      LB760                         ; 0x376d $B75D 90 01                    ;
dex                                    ; 0x376f $B75F CA                       ;
LB760                                                                          ;
stx      $73                           ; 0x3770 $B760 86 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
tax                                    ; 0x3772 $B762 AA                       ;
lsr      $1F                           ; 0x3773 $B763 46 1F                    ;;$15 to $24 : current password
bcc      LB768                         ; 0x3775 $B765 90 01                    ;
dex                                    ; 0x3777 $B767 CA                       ;
LB768                                                                          ;
stx      $74                           ; 0x3778 $B768 86 74                    ;;FF=castle's tree has been burned and is now a hole 
lsr      $1E                           ; 0x377a $B76A 46 1E                    ;;$15 to $24 : current password
rol      $38                           ; 0x377c $B76C 26 38                    ;;player hp
lsr      $1E                           ; 0x377e $B76E 46 1E                    ;;$15 to $24 : current password
rol      $3B                           ; 0x3780 $B770 26 3B                    ;;player mp
lsr      $1E                           ; 0x3782 $B772 46 1E                    ;;$15 to $24 : current password
rol      $47                           ; 0x3784 $B774 26 47                    ;;player CurrentArea       
tax                                    ; 0x3786 $B776 AA                       ;
lsr      $1E                           ; 0x3787 $B777 46 1E                    ;;$15 to $24 : current password
bcc      LB77C                         ; 0x3789 $B779 90 01                    ;
dex                                    ; 0x378b $B77B CA                       ;
LB77C                                                                          ;
stx      $62                           ; 0x378c $B77C 86 62                    ;;FF=got ruby			(appears in ITEM)
lsr      $1D                           ; 0x378e $B77E 46 1D                    ;;$15 to $24 : current password
rol      $38                           ; 0x3790 $B780 26 38                    ;;player hp
lsr      $1D                           ; 0x3792 $B782 46 1D                    ;;$15 to $24 : current password
rol      $3B                           ; 0x3794 $B784 26 3B                    ;;player mp
lsr      $1D                           ; 0x3796 $B786 46 1D                    ;;$15 to $24 : current password
rol      $47                           ; 0x3798 $B788 26 47                    ;;player CurrentArea       
tax                                    ; 0x379a $B78A AA                       ;
lsr      $1D                           ; 0x379b $B78B 46 1D                    ;;$15 to $24 : current password
bcc      LB790                         ; 0x379d $B78D 90 01                    ;
dex                                    ; 0x379f $B78F CA                       ;
LB790                                                                          ;
stx      $61                           ; 0x37a0 $B790 86 61                    ;;FF=got ring 			(appears in ITEM)
lsr      $1C                           ; 0x37a2 $B792 46 1C                    ;;$15 to $24 : current password
rol      $38                           ; 0x37a4 $B794 26 38                    ;;player hp
lsr      $1C                           ; 0x37a6 $B796 46 1C                    ;;$15 to $24 : current password
rol      $3B                           ; 0x37a8 $B798 26 3B                    ;;player mp
lsr      $1C                           ; 0x37aa $B79A 46 1C                    ;;$15 to $24 : current password
rol      $47                           ; 0x37ac $B79C 26 47                    ;;player CurrentArea       
tax                                    ; 0x37ae $B79E AA                       ;
lsr      $1C                           ; 0x37af $B79F 46 1C                    ;;$15 to $24 : current password
bcc      LB7A4                         ; 0x37b1 $B7A1 90 01                    ;
dex                                    ; 0x37b3 $B7A3 CA                       ;
LB7A4                                                                          ;
stx      $60                           ; 0x37b4 $B7A4 86 60                    ;;FF=got jewel 			(appears in ITEM)
lsr      $1B                           ; 0x37b6 $B7A6 46 1B                    ;;$15 to $24 : current password
rol      $38                           ; 0x37b8 $B7A8 26 38                    ;;player hp
lsr      $1B                           ; 0x37ba $B7AA 46 1B                    ;;$15 to $24 : current password
rol      $3B                           ; 0x37bc $B7AC 26 3B                    ;;player mp
lsr      $1B                           ; 0x37be $B7AE 46 1B                    ;;$15 to $24 : current password
rol      $47                           ; 0x37c0 $B7B0 26 47                    ;;player CurrentArea       
tax                                    ; 0x37c2 $B7B2 AA                       ;
lsr      $1B                           ; 0x37c3 $B7B3 46 1B                    ;;$15 to $24 : current password
bcc      LB7B8                         ; 0x37c5 $B7B5 90 01                    ;
dex                                    ; 0x37c7 $B7B7 CA                       ;
LB7B8                                                                          ;
stx      $5F                           ; 0x37c8 $B7B8 86 5F                    ;;FF=got key 			(appears in ITEM)
lsr      $1A                           ; 0x37ca $B7BA 46 1A                    ;;$15 to $24 : current password
rol      $38                           ; 0x37cc $B7BC 26 38                    ;;player hp
lsr      $1A                           ; 0x37ce $B7BE 46 1A                    ;;$15 to $24 : current password
rol      $3B                           ; 0x37d0 $B7C0 26 3B                    ;;player mp
lsr      $1A                           ; 0x37d2 $B7C2 46 1A                    ;;$15 to $24 : current password
rol      $47                           ; 0x37d4 $B7C4 26 47                    ;;player CurrentArea       
tax                                    ; 0x37d6 $B7C6 AA                       ;
lsr      $1A                           ; 0x37d7 $B7C7 46 1A                    ;;$15 to $24 : current password
bcc      LB7CC                         ; 0x37d9 $B7C9 90 01                    ;
dex                                    ; 0x37db $B7CB CA                       ;
LB7CC                                                                          ;
stx      $5E                           ; 0x37dc $B7CC 86 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
lsr      $19                           ; 0x37de $B7CE 46 19                    ;;$15 to $24 : current password
rol      $36                           ; 0x37e0 $B7D0 26 36                    ;;player PosX, 0-14 (small meta-tile size)
lsr      $19                           ; 0x37e2 $B7D2 46 19                    ;;$15 to $24 : current password
rol      $37                           ; 0x37e4 $B7D4 26 37                    ;;player PosY, 0-14 (small meta-tile size)
lsr      $19                           ; 0x37e6 $B7D6 46 19                    ;;$15 to $24 : current password
rol      $47                           ; 0x37e8 $B7D8 26 47                    ;;player CurrentArea       
tax                                    ; 0x37ea $B7DA AA                       ;
lsr      $19                           ; 0x37eb $B7DB 46 19                    ;;$15 to $24 : current password
bcc      LB7E0                         ; 0x37ed $B7DD 90 01                    ;
dex                                    ; 0x37ef $B7DF CA                       ;
LB7E0                                                                          ;
stx      $5D                           ; 0x37f0 $B7E0 86 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
lsr      $18                           ; 0x37f2 $B7E2 46 18                    ;;$15 to $24 : current password
rol      $36                           ; 0x37f4 $B7E4 26 36                    ;;player PosX, 0-14 (small meta-tile size)
lsr      $18                           ; 0x37f6 $B7E6 46 18                    ;;$15 to $24 : current password
rol      $37                           ; 0x37f8 $B7E8 26 37                    ;;player PosY, 0-14 (small meta-tile size)
lsr      $18                           ; 0x37fa $B7EA 46 18                    ;;$15 to $24 : current password
rol      $3C                           ; 0x37fc $B7EC 26 3C                    ;;player CurrentLevel      
tax                                    ; 0x37fe $B7EE AA                       ;
lsr      $18                           ; 0x37ff $B7EF 46 18                    ;;$15 to $24 : current password
bcc      LB7F4                         ; 0x3801 $B7F1 90 01                    ;
dex                                    ; 0x3803 $B7F3 CA                       ;
LB7F4                                                                          ;
stx      $5C                           ; 0x3804 $B7F4 86 5C                    ;;FF=got cross 			(appears in ITEM)
lsr      $17                           ; 0x3806 $B7F6 46 17                    ;;$15 to $24 : current password
rol      $36                           ; 0x3808 $B7F8 26 36                    ;;player PosX, 0-14 (small meta-tile size)
lsr      $17                           ; 0x380a $B7FA 46 17                    ;;$15 to $24 : current password
rol      $37                           ; 0x380c $B7FC 26 37                    ;;player PosY, 0-14 (small meta-tile size)
lsr      $17                           ; 0x380e $B7FE 46 17                    ;;$15 to $24 : current password
rol      $3C                           ; 0x3810 $B800 26 3C                    ;;player CurrentLevel      
tax                                    ; 0x3812 $B802 AA                       ;
lsr      $17                           ; 0x3813 $B803 46 17                    ;;$15 to $24 : current password
bcc      LB808                         ; 0x3815 $B805 90 01                    ;
dex                                    ; 0x3817 $B807 CA                       ;
LB808                                                                          ;
stx      $5B                           ; 0x3818 $B808 86 5B                    ;;FF=got lamp 			(appears in ITEM)
lsr      $16                           ; 0x381a $B80A 46 16                    ;;$15 to $24 : current password
rol      $36                           ; 0x381c $B80C 26 36                    ;;player PosX, 0-14 (small meta-tile size)
lsr      $16                           ; 0x381e $B80E 46 16                    ;;$15 to $24 : current password
rol      $37                           ; 0x3820 $B810 26 37                    ;;player PosY, 0-14 (small meta-tile size)
lsr      $16                           ; 0x3822 $B812 46 16                    ;;$15 to $24 : current password
rol      $3C                           ; 0x3824 $B814 26 3C                    ;;player CurrentLevel      
tax                                    ; 0x3826 $B816 AA                       ;
lsr      $16                           ; 0x3827 $B817 46 16                    ;;$15 to $24 : current password
bcc      LB81C                         ; 0x3829 $B819 90 01                    ;
dex                                    ; 0x382b $B81B CA                       ;
LB81C                                                                          ;
stx      $5A                           ; 0x382c $B81C 86 5A                    ;;FF=got shield 			(appears in ITEM)
lsr      $15                           ; 0x382e $B81E 46 15                    ;;$15 to $24 : current password
rol      $36                           ; 0x3830 $B820 26 36                    ;;player PosX, 0-14 (small meta-tile size)
lsr      $15                           ; 0x3832 $B822 46 15                    ;;$15 to $24 : current password
rol      $37                           ; 0x3834 $B824 26 37                    ;;player PosY, 0-14 (small meta-tile size)
lsr      $15                           ; 0x3836 $B826 46 15                    ;;$15 to $24 : current password
rol      $3C                           ; 0x3838 $B828 26 3C                    ;;player CurrentLevel      
tax                                    ; 0x383a $B82A AA                       ;
lsr      $15                           ; 0x383b $B82B 46 15                    ;;$15 to $24 : current password
bcc      LB830                         ; 0x383d $B82D 90 01                    ;
dex                                    ; 0x383f $B82F CA                       ;
LB830                                                                          ;
stx      $59                           ; 0x3840 $B830 86 59                    ;;FF=got sword			(appears in ITEM)
lda      $64                           ; 0x3842 $B832 A5 64                    ;;FF=got fairy 1 (appears in ITEM)
and      $65                           ; 0x3844 $B834 25 65                    ;;FF=got fairy 2 (appears in ITEM)
and      $66                           ; 0x3846 $B836 25 66                    ;;FF=got fairy 3 (appears in ITEM)
sta      $67                           ; 0x3848 $B838 85 67                    ;;all fairys got
lda      $3C                           ; 0x384a $B83A A5 3C                    ;;player CurrentLevel      
asl                                    ; 0x384c $B83C 0A                       ;
sta      $08                           ; 0x384d $B83D 85 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x384f $B83F 0A                       ;
asl                                    ; 0x3850 $B840 0A                       ;
adc      $08                           ; 0x3851 $B841 65 08                    ;;save calc'd attack strength to $08 ?
adc      #$0A                          ; 0x3853 $B843 69 0A                    ;
sta      $41                           ; 0x3855 $B845 85 41                    ;;player max hp
sta      $42                           ; 0x3857 $B847 85 42                    ;;player max mp
ldx      $59                           ; 0x3859 $B849 A6 59                    ;;FF=got sword			(appears in ITEM)
beq      LB850                         ; 0x385b $B84B F0 03                    ;
clc                                    ; 0x385d $B84D 18                       ;
adc      #$0A                          ; 0x385e $B84E 69 0A                    ;
LB850                                                                          ;
cmp      #$64                          ; 0x3860 $B850 C9 64                    ;
bmi      LB856                         ; 0x3862 $B852 30 02                    ;
lda      #$64                          ; 0x3864 $B854 A9 64                    ;;A = #$64 0110_0100
LB856                                                                          ;
sta      $39                           ; 0x3866 $B856 85 39                    ;;player str
lda      $59                           ; 0x3868 $B858 A5 59                    ;;FF=got sword			(appears in ITEM)
eor      #$FF                          ; 0x386a $B85A 49 FF                    ;;Flip Bits:1111_1111
sta      $4F                           ; 0x386c $B85C 85 4F                    ;;FF=chest for sword apppears
lda      $5C                           ; 0x386e $B85E A5 5C                    ;;FF=got cross 			(appears in ITEM)
eor      #$FF                          ; 0x3870 $B860 49 FF                    ;;Flip Bits:1111_1111
sta      $52                           ; 0x3872 $B862 85 52                    ;;FF=chest for cross appears
lda      $5E                           ; 0x3874 $B864 A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
eor      #$FF                          ; 0x3876 $B866 49 FF                    ;;Flip Bits:1111_1111
sta      $54                           ; 0x3878 $B868 85 54                    ;;FF=chest for pot appears
lda      $60                           ; 0x387a $B86A A5 60                    ;;FF=got jewel 			(appears in ITEM)
eor      #$FF                          ; 0x387c $B86C 49 FF                    ;;Flip Bits:1111_1111
sta      $56                           ; 0x387e $B86E 85 56                    ;;FF=chest for jewel appears ??
lda      $62                           ; 0x3880 $B870 A5 62                    ;;FF=got ruby			(appears in ITEM)
eor      #$FF                          ; 0x3882 $B872 49 FF                    ;;Flip Bits:1111_1111
and      $73                           ; 0x3884 $B874 25 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
sta      $58                           ; 0x3886 $B876 85 58                    ;;FF=chest for ruby appears
lda      $5F                           ; 0x3888 $B878 A5 5F                    ;;FF=got key 			(appears in ITEM)
ldy      #$00                          ; 0x388a $B87A A0 00                    ;;Y = #$00 0000_0000
LB87C                                                                          ;
sta      $68,y                         ; 0x388c $B87C 99 68 00                 ;
iny                                    ; 0x388f $B87F C8                       ;
cpy      #$08                          ; 0x3890 $B880 C0 08                    ;
bne      LB87C                         ; 0x3892 $B882 D0 F8                    ;
lda      $5B                           ; 0x3894 $B884 A5 5B                    ;;FF=got lamp 			(appears in ITEM)
sta      $75                           ; 0x3896 $B886 85 75                    ;
lda      $47                           ; 0x3898 $B888 A5 47                    ;;player CurrentArea       
ldy      #$00                          ; 0x389a $B88A A0 00                    ;;Y = #$00 0000_0000
LB88C                                                                          ;
cmp      #$05                          ; 0x389c $B88C C9 05                    ;
bmi      LB896                         ; 0x389e $B88E 30 06                    ;
sec                                    ; 0x38a0 $B890 38                       ;
sbc      #$05                          ; 0x38a1 $B891 E9 05                    ;
iny                                    ; 0x38a3 $B893 C8                       ;
bne      LB88C                         ; 0x38a4 $B894 D0 F6                    ;
LB896                                                                          ;
sta      $48                           ; 0x38a6 $B896 85 48                    ;;player Screen X (0 to 4)
sty      $49                           ; 0x38a8 $B898 84 49                    ;;player Screen Y (0 to 4)
;if player X => #$16 , then SEC and RTS                                        ;;Keep Bits:0000_0000
lda      $36                           ; 0x38aa $B89A A5 36                    ;;player PosX, 0-14 (small meta-tile size)
cmp      #$16                          ; 0x38ac $B89C C9 16                    ;
bpl      SEC_and_RTS                   ; 0x38ae $B89E 10 60                    ;
;if player Y => #$16 , then SEC and RTS                                        ;;Keep Bits:0000_0000
lda      $37                           ; 0x38b0 $B8A0 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
cmp      #$16                          ; 0x38b2 $B8A2 C9 16                    ;
bpl      SEC_and_RTS                   ; 0x38b4 $B8A4 10 5A                    ;
;if current area is >= #$23 , then SEC and RTS                                 ;;Keep Bits:0000_0000
lda      $47                           ; 0x38b6 $B8A6 A5 47                    ;;player CurrentArea       
cmp      #$23                          ; 0x38b8 $B8A8 C9 23                    ;
bpl      SEC_and_RTS                   ; 0x38ba $B8AA 10 54                    ;
;if player CurrentLevel >= #$0A                                                ;
lda      $3C                           ; 0x38bc $B8AC A5 3C                    ;;player CurrentLevel      
cmp      #$0A                          ; 0x38be $B8AE C9 0A                    ;
bpl      SEC_and_RTS                   ; 0x38c0 $B8B0 10 4E                    ;
;if player max hp < player hp , then SEC and RTS                               ;
lda      $41                           ; 0x38c2 $B8B2 A5 41                    ;;player max hp
cmp      $38                           ; 0x38c4 $B8B4 C5 38                    ;;player hp
bmi      SEC_and_RTS                   ; 0x38c6 $B8B6 30 48                    ;
;if player max mp < player mp, then SEC and RTS                                ;
lda      $42                           ; 0x38c8 $B8B8 A5 42                    ;;player max mp
cmp      $3B                           ; 0x38ca $B8BA C5 3B                    ;;player mp
bmi      SEC_and_RTS                   ; 0x38cc $B8BC 30 42                    ;
;if $5F > 00 then skip checking $60 and $61                                    ;
lda      $5F                           ; 0x38ce $B8BE A5 5F                    ;;FF=got key 			(appears in ITEM)
bne      LB8C8                         ; 0x38d0 $B8C0 D0 06                    ;
;if either $60 or $61 is > 00 then SEC and RTS                                 ;
lda      $60                           ; 0x38d2 $B8C2 A5 60                    ;;FF=got jewel 			(appears in ITEM)
ora      $61                           ; 0x38d4 $B8C4 05 61                    ;;FF=got ring 			(appears in ITEM)
bne      SEC_and_RTS                   ; 0x38d6 $B8C6 D0 38                    ;
LB8C8                                                                          ;
;if $5D is = 00 then skip checking $63                                         ;
lda      $5D                           ; 0x38d8 $B8C8 A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
beq      LB8D0                         ; 0x38da $B8CA F0 04                    ;
;if $63 > 00 then SEC and RTS                                                  ;
lda      $63                           ; 0x38dc $B8CC A5 63                    ;;FF=makes the wall surrounding castle disappear
bne      SEC_and_RTS                   ; 0x38de $B8CE D0 30                    ;
LB8D0                                                                          ;
lda      $67                           ; 0x38e0 $B8D0 A5 67                    ;;all fairys got
bne      LB8DA                         ; 0x38e2 $B8D2 D0 06                    ;
lda      $5D                           ; 0x38e4 $B8D4 A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
ora      $63                           ; 0x38e6 $B8D6 05 63                    ;;FF=makes the wall surrounding castle disappear
bne      SEC_and_RTS                   ; 0x38e8 $B8D8 D0 26                    ;
LB8DA                                                                          ;
lda      $5C                           ; 0x38ea $B8DA A5 5C                    ;;FF=got cross 			(appears in ITEM)
bne      LB8E2                         ; 0x38ec $B8DC D0 04                    ;
lda      $5B                           ; 0x38ee $B8DE A5 5B                    ;;FF=got lamp 			(appears in ITEM)
bne      SEC_and_RTS                   ; 0x38f0 $B8E0 D0 1E                    ;
LB8E2                                                                          ;
lda      $73                           ; 0x38f2 $B8E2 A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
bne      LB8EA                         ; 0x38f4 $B8E4 D0 04                    ;
lda      $62                           ; 0x38f6 $B8E6 A5 62                    ;;FF=got ruby			(appears in ITEM)
bne      SEC_and_RTS                   ; 0x38f8 $B8E8 D0 16                    ;
LB8EA                                                                          ;
lda      $67                           ; 0x38fa $B8EA A5 67                    ;;all fairys got
bne      LB8F2                         ; 0x38fc $B8EC D0 04                    ;
lda      $73                           ; 0x38fe $B8EE A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
bne      SEC_and_RTS                   ; 0x3900 $B8F0 D0 0E                    ;
LB8F2                                                                          ;
lda      $74                           ; 0x3902 $B8F2 A5 74                    ;;FF=castle's tree has been burned and is now a hole 
bne      LB8FA                         ; 0x3904 $B8F4 D0 04                    ;
lda      $73                           ; 0x3906 $B8F6 A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
bne      SEC_and_RTS                   ; 0x3908 $B8F8 D0 06                    ;
LB8FA                                                                          ;
lda      $33                           ; 0x390a $B8FA A5 33                    ;;backup value for player CurrentExperience 
sta      $3A                           ; 0x390c $B8FC 85 3A                    ;;player CurrentExperience 
clc                                    ; 0x390e $B8FE 18                       ;
rts                                    ; 0x390f $B8FF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
SEC_and_RTS                                                                    ;
sec                                    ; 0x3910 $B900 38                       ;
rts                                    ; 0x3911 $B901 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB902                                                                          ;
lda      #$00                          ; 0x3912 $B902 A9 00                    ;;A = #$00 0000_0000
jsr      LE142                         ; 0x3914 $B904 20 42 E1                 ;
inc      $2A                           ; 0x3917 $B907 E6 2A                    ;
lda      #$08                          ; 0x3919 $B909 A9 08                    ;;A = #$08 0000_1000
sta      $04                           ; 0x391b $B90B 85 04                    ;
LB90D                                                                          ;
jsr      LE2C4                         ; 0x391d $B90D 20 C4 E2                 ;
lda      #$BA                          ; 0x3920 $B910 A9 BA                    ;;A = #$ba 1011_1010
sta      $0D                           ; 0x3922 $B912 85 0D                    ;
lda      #$8B                          ; 0x3924 $B914 A9 8B                    ;;A = #$8b 1000_1011
sta      $0C                           ; 0x3926 $B916 85 0C                    ;
ldx      #$02                          ; 0x3928 $B918 A2 02                    ;;X = #$02 0000_0010
stx      $9E                           ; 0x392a $B91A 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$1B                          ; 0x392c $B91C A0 1B                    ;;Y = #$1b 0001_1011
sty      $9F                           ; 0x392e $B91E 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$17                          ; 0x3930 $B920 A9 17                    ;;A = #$17 0001_0111
sta      $A0                           ; 0x3932 $B922 85 A0                    ;
jsr      L9636                         ; 0x3934 $B924 20 36 96                 ;
ldx      #$08                          ; 0x3937 $B927 A2 08                    ;;X = #$08 0000_1000
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3939 $B929 20 74 95               ;
jsr      LE2C9                         ; 0x393c $B92C 20 C9 E2                 ;
dec      $04                           ; 0x393f $B92F C6 04                    ;
beq      LB93E                         ; 0x3941 $B931 F0 0B                    ;
jsr      L9636                         ; 0x3943 $B933 20 36 96                 ;
ldx      #$06                          ; 0x3946 $B936 A2 06                    ;;X = #$06 0000_0110
jsr      GameSpeed__TimerDelay__MenuDelay; 0x3948 $B938 20 74 95               ;
jmp      LB90D                         ; 0x394b $B93B 4C 0D B9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB93E                                                                          ;
lda      #$80                          ; 0x394e $B93E A9 80                    ;;A = #$80 1000_0000
sta      $04                           ; 0x3950 $B940 85 04                    ;
LB942                                                                          ;
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x3952 $B942 20 34 95 ;
jsr      Controller_ReadAndSaveTo_B4_to_BB; 0x3955 $B945 20 7E 95              ;
lda      $B6                           ; 0x3958 $B948 A5 B6                    ;;FF=button Select pressed
ora      $B7                           ; 0x395a $B94A 05 B7                    ;;FF=button Start  pressed
bne      LB952                         ; 0x395c $B94C D0 04                    ;
dec      $04                           ; 0x395e $B94E C6 04                    ;
bne      LB942                         ; 0x3960 $B950 D0 F0                    ;
LB952                                                                          ;
jmp      L8615                         ; 0x3962 $B952 4C 15 86                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB955                                                                          ;
bmi      LB988                         ; 0x3965 $B955 30 31                    ;
.byt    $32,$33,$34,$35,$36,$37,$38,$39; 0x3967 $B957 32 33 34 35 36 37 38 39  ;;23456789
.byt    $42,$44,$47,$48,$4A,$4B,$4C,$4D; 0x396f $B95F 42 44 47 48 4A 4B 4C 4D  ;;BDGHJKLM
.byt    $4E,$50,$51,$52,$54,$56,$57,$58; 0x3977 $B967 4E 50 51 52 54 56 57 58  ;;NPQRTVWX
.byt    $59,$5A                        ; 0x397f $B96F 59 5A                    ;;YZ
LB971                                                                          ;
.byt    $00,$01,$02,$03,$04,$05,$06,$07; 0x3981 $B971 00 01 02 03 04 05 06 07  ;;
.byt    $08,$09,$FF,$0A,$FF,$0B,$FF,$FF; 0x3989 $B979 08 09 FF 0A FF 0B FF FF  ;;
.byt    $0C,$0D,$FF,$0E,$0F,$10,$11    ; 0x3991 $B981 0C 0D FF 0E 0F 10 11     ;;
LB988                                                                          ;
.byt    $12,$FF,$13,$14,$15,$FF,$16,$FF; 0x3998 $B988 12 FF 13 14 15 FF 16 FF  ;;
.byt    $17,$18,$19,$1A,$1B            ; 0x39a0 $B990 17 18 19 1A 1B           ;;
LB995                                                                          ;
.byt    $B0,$AD,$A7,$B1,$BE,$B4,$BF,$BC; 0x39a5 $B995 B0 AD A7 B1 BE B4 BF BC  ;;
.byt    $BB,$AE,$BF,$BD,$BD,$B1,$B1,$B2; 0x39ad $B99D BB AE BF BD BD B1 B1 B2  ;;
LB9A5                                                                          ;
.byt    $AC,$B2,$BB,$AD,$BB,$AE,$B0,$AC; 0x39b5 $B9A5 AC B2 BB AD BB AE B0 AC  ;;
.byt    $BA,$B1,$AD,$BB,$BC,$B2,$BF,$AC; 0x39bd $B9AD BA B1 AD BB BC B2 BF AC  ;;
LB9B5                                                                          ;
.byt    $B5,$C7,$B6,$B9,$B8,$C9,$B9,$CD; 0x39c5 $B9B5 B5 C7 B6 B9 B8 C9 B9 CD  ;;
.byt    $BC,$CE,$B4,$B6,$BC,$C7,$B5,$CA; 0x39cd $B9BD BC CE B4 B6 BC C7 B5 CA  ;;
Password__related                                                              ;
.byt    $04,$00,$00,$09,$02,$01,$05,$06; 0x39d5 $B9C5 04 00 00 09 02 01 05 06  ;;
.byt    $09,$02,$09,$07,$05,$07,$07,$06; 0x39dd $B9CD 09 02 09 07 05 07 07 06  ;;
.byt    $00,$05,$02,$07,$07,$03,$01,$08; 0x39e5 $B9D5 00 05 02 07 07 03 01 08  ;;
.byt    $01,$06,$00,$05,$08,$07,$03,$02; 0x39ed $B9DD 01 06 00 05 08 07 03 02  ;;
.byt    $01,$06,$07,$02                ; 0x39f5 $B9E5 01 06 07 02              ;;
                                                                               ;
.byt    $48,$59,$44,$4C,$49,$44,$45,$FD; 0x39f9 $B9E9 48 59 44 4C 49 44 45 FD  ;;HYDLIDE
.byt    $47,$41,$4D,$45,$40            ; 0x3a01 $B9F1 47 41 4D 45 40           ;;GAME@
                                                                               ;
.byt    $53,$54,$41,$52,$54            ; 0x3a06 $B9F6 53 54 41 52 54           ;;START
                                                                               ;
.byt    $50,$41,$53,$53,$57,$4F,$52,$44; 0x3a0b $B9FB 50 41 53 53 57 4F 52 44  ;;PASSWORD
.byt    $D1,$D2,$D3,$D4,$D5,$D6,$40,$D7; 0x3a13 $BA03 D1 D2 D3 D4 D5 D6 40 D7  ;;@
.byt    $D8                            ; 0x3a1b $BA0B D8                       ;;
LBA0C                                                                          ;
.byt    $EB,$EC,$EB,$EC,$EB,$EC,$EB,$EC; 0x3a1c $BA0C EB EC EB EC EB EC EB EC  ;;
.byt    $EB,$EC,$EB,$EC,$50,$41,$53,$53; 0x3a24 $BA14 EB EC EB EC 50 41 53 53  ;;PASS
.byt    $57,$4F,$52,$44,$40,$49,$4E,$50; 0x3a2c $BA1C 57 4F 52 44 40 49 4E 50  ;;WORD@INP
.byt    $55,$54,$40,$3C,$30,$40,$31,$40; 0x3a34 $BA24 55 54 40 3C 30 40 31 40  ;;UT@<0@1@
.byt    $32,$40,$33,$40,$34,$40,$35,$40; 0x3a3c $BA2C 32 40 33 40 34 40 35 40  ;;2@3@4@5@
.byt    $36,$40,$37,$40,$38,$40,$39,$41; 0x3a44 $BA34 36 40 37 40 38 40 39 41  ;;6@7@8@9A
.byt    $40,$42,$40,$43,$40,$44,$40,$45; 0x3a4c $BA3C 40 42 40 43 40 44 40 45  ;;@B@C@D@E
.byt    $40,$46,$40,$47,$40,$48,$40,$49; 0x3a54 $BA44 40 46 40 47 40 48 40 49  ;;@F@G@H@I
.byt    $40,$4A,$4B,$40,$4C,$40,$4D,$40; 0x3a5c $BA4C 40 4A 4B 40 4C 40 4D 40  ;;@JK@L@M@
.byt    $4E,$40,$4F,$40,$50,$40,$51,$40; 0x3a64 $BA54 4E 40 4F 40 50 40 51 40  ;;N@O@P@Q@
.byt    $52,$40,$53,$40,$54,$55,$40,$56; 0x3a6c $BA5C 52 40 53 40 54 55 40 56  ;;R@S@TU@V
.byt    $40,$57,$40,$58,$40,$59,$40,$5A; 0x3a74 $BA64 40 57 40 58 40 59 40 5A  ;;@W@X@Y@Z
.byt    $40,$7D,$40,$45,$4E,$44,$40,$40; 0x3a7c $BA6C 40 7D 40 45 4E 44 40 40  ;;@}@END@@
.byt    $49,$4E,$50,$55,$54,$3A,$40,$40; 0x3a84 $BA74 49 4E 50 55 54 3A 40 40  ;;INPUT:@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x3a8c $BA7C 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x3a94 $BA84 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$40,$50,$41,$53,$53,$57; 0x3a9c $BA8C 40 40 40 50 41 53 53 57  ;;@@@PASSW
.byt    $4F,$52,$44,$40,$45,$52,$52,$4F; 0x3aa4 $BA94 4F 52 44 40 45 52 52 4F  ;;ORD@ERRO
.byt    $52,$40,$3C,$40,$40,$40,$40,$40; 0x3aac $BA9C 52 40 3C 40 40 40 40 40  ;;R@<@@@@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x3ab4 $BAA4 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$40,$40,$40,$40,$40,$40; 0x3abc $BAAC 40 40 40 40 40 40 40 40  ;;@@@@@@@@
.byt    $40,$40,$40,$40,$40,$43,$4F,$4E; 0x3ac4 $BAB4 40 40 40 40 40 43 4F 4E  ;;@@@@@CON
.byt    $47,$52,$41,$54,$55,$4C,$41,$54; 0x3acc $BABC 47 52 41 54 55 4C 41 54  ;;GRATULAT
.byt    $49,$4F,$4E,$53,$3C,$07,$07,$07; 0x3ad4 $BAC4 49 4F 4E 53 3C 07 07 07  ;;IONS<
.byt    $DA,$DB,$DC,$DD,$DE,$DF,$07,$E0; 0x3adc $BACC DA DB DC DD DE DF 07 E0  ;;
.byt    $E0,$07,$E0,$E0,$07,$E1,$E2,$40; 0x3ae4 $BAD4 E0 07 E0 E0 07 E1 E2 40  ;;@
.byt    $40,$40,$40,$40,$40,$47,$41,$4D; 0x3aec $BADC 40 40 40 40 40 47 41 4D  ;;@@@@@GAM
.byt    $45,$40,$4F,$56,$45,$52,$40,$3C; 0x3af4 $BAE4 45 40 4F 56 45 52 40 3C  ;;E@OVER@<
.byt    $40,$40,$40,$40,$40,$40        ; 0x3afc $BAEC 40 40 40 40 40 40        ;;@@@@@@
; ---------------------------------------------------------------------------- ;
LBAF2                                                                          ;
;copy opcode 4C (JMP) to $12                                                   ;
;then copy address from address table below to $13,14                          ;
;then jsr $12                                                                  ;
;	which means JMP to the address in the address table and RTS back here        ;
lda      #$4C                          ; 0x3b02 $BAF2 A9 4C                    ;;A = #$4c 0100_1100
sta      L0012                         ; 0x3b04 $BAF4 85 12                    ;
lda      #$06                          ; 0x3b06 $BAF6 A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x3b08 $BAF8 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x3b0a $BAFA A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x3b0c $BAFC 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0x3b0e $BAFE A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x3b10 $BB00 85 89                    ;
LBB02                                                                          ;
ldy      #$00                          ; 0x3b12 $BB02 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x3b14 $BB04 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x3b16 $BB06 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x3b18 $BB08 0A                       ;
tax                                    ; 0x3b19 $BB09 AA                       ;
lda      LBB2D,x                       ; 0x3b1a $BB0A BD 2D BB                 ;
sta      $13                           ; 0x3b1d $BB0D 85 13                    ;
lda      LBB2D+$01,x                   ; 0x3b1f $BB0F BD 2E BB                 ;
sta      $14                           ; 0x3b22 $BB12 85 14                    ;
;jmp to execute code in ram (!)                                                ;
jsr      L0012                         ; 0x3b24 $BB14 20 12 00                 ;
lda      $8B                           ; 0x3b27 $BB17 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x3b29 $BB19 18                       ;
adc      #$0A                          ; 0x3b2a $BB1A 69 0A                    ;
sta      $8B                           ; 0x3b2c $BB1C 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x3b2e $BB1E A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x3b30 $BB20 69 00                    ;
sta      $8C                           ; 0x3b32 $BB22 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0x3b34 $BB24 E6 89                    ;
lda      $89                           ; 0x3b36 $BB26 A5 89                    ;
cmp      $8A                           ; 0x3b38 $BB28 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      LBB02                         ; 0x3b3a $BB2A 30 D6                    ;
rts                                    ; 0x3b3c $BB2C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBB2D                                                                          ;
.word    LBB59                         ; 0x3b3d $BB2D 59 BB                    ;
.word    LBB59                         ; 0x3b3f $BB2F 59 BB                    ;
.word    LBB59                         ; 0x3b41 $BB31 59 BB                    ;
.word    LBB59                         ; 0x3b43 $BB33 59 BB                    ;
.word    LBB59                         ; 0x3b45 $BB35 59 BB                    ;
.word    LBB59                         ; 0x3b47 $BB37 59 BB                    ;
.word    LBCAC                         ; 0x3b49 $BB39 AC BC                    ;
.word    LBCB4                         ; 0x3b4b $BB3B B4 BC                    ;
.word    LBB59                         ; 0x3b4d $BB3D 59 BB                    ;
.word    LBB59                         ; 0x3b4f $BB3F 59 BB                    ;
.word    LBB59                         ; 0x3b51 $BB41 59 BB                    ;
.word    LBCD9                         ; 0x3b53 $BB43 D9 BC                    ;
.word    LBD4B                         ; 0x3b55 $BB45 4B BD                    ;
.word    LBD4B                         ; 0x3b57 $BB47 4B BD                    ;
.word    LBCB4                         ; 0x3b59 $BB49 B4 BC                    ;
.word    LBD6B                         ; 0x3b5b $BB4B 6B BD                    ;
.word    LBB59                         ; 0x3b5d $BB4D 59 BB                    ;
.word    LBD89                         ; 0x3b5f $BB4F 89 BD                    ;
.word    LBDD8                         ; 0x3b61 $BB51 D8 BD                    ;
.word    LBE8F                         ; 0x3b63 $BB53 8F BE                    ;
.word    LBB59                         ; 0x3b65 $BB55 59 BB                    ;
.word    LBB59                         ; 0x3b67 $BB57 59 BB                    ;
; ---------------------------------------------------------------------------- ;
LBB59                                                                          ;
ldy      #$04                          ; 0x3b69 $BB59 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3b6b $BB5B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBB8C                         ; 0x3b6d $BB5D F0 2D                    ;
LBB5F                                                                          ;
sec                                    ; 0x3b6f $BB5F 38                       ;
sbc      #$01                          ; 0x3b70 $BB60 E9 01                    ;
sta      ($8B),y                       ; 0x3b72 $BB62 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBB67                         ; 0x3b74 $BB64 F0 01                    ;
rts                                    ; 0x3b76 $BB66 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBB67                                                                          ;
jsr      LBFDF                         ; 0x3b77 $BB67 20 DF BF                 ;
beq      LBB73                         ; 0x3b7a $BB6A F0 07                    ;
ldy      #$04                          ; 0x3b7c $BB6C A0 04                    ;;Y = #$04 0000_0100
lda      #$01                          ; 0x3b7e $BB6E A9 01                    ;;A = #$01 0000_0001
sta      ($8B),y                       ; 0x3b80 $BB70 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
rts                                    ; 0x3b82 $BB72 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBB73                                                                          ;
lda      #$04                          ; 0x3b83 $BB73 A9 04                    ;;A = #$04 0000_0100
jsr      RNG_get_random_number__A_is_max; 0x3b85 $BB75 20 8E 96                ;
adc      #$02                          ; 0x3b88 $BB78 69 02                    ;
ldy      #$06                          ; 0x3b8a $BB7A A0 06                    ;;Y = #$06 0000_0110
sta      ($8B),y                       ; 0x3b8c $BB7C 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3b8e $BB7E C8                       ;
lda      #$00                          ; 0x3b8f $BB7F A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x3b91 $BB81 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3b93 $BB83 C8                       ;
jsr      Monster__Load_HP_from_Table__index_with_Type; 0x3b94 $BB84 20 44 D1   ;
sta      ($8B),y                       ; 0x3b97 $BB87 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCC7B                         ; 0x3b99 $BB89 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBB8C                                                                          ;
jsr      LC884                         ; 0x3b9c $BB8C 20 84 C8                 ;
ldy      #$05                          ; 0x3b9f $BB8F A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3ba1 $BB91 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $91                           ; 0x3ba3 $BB93 85 91                    ;
ldy      #$07                          ; 0x3ba5 $BB95 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x3ba7 $BB97 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x3ba9 $BB99 18                       ;
adc      #$01                          ; 0x3baa $BB9A 69 01                    ;
and      #$03                          ; 0x3bac $BB9C 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x3bae $BB9E 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$01                          ; 0x3bb0 $BBA0 29 01                    ;;Keep Bits:0000_0001
beq      LBBA7                         ; 0x3bb2 $BBA2 F0 03                    ;
jmp      LCC7B                         ; 0x3bb4 $BBA4 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBBA7                                                                          ;
ldy      #$06                          ; 0x3bb7 $BBA7 A0 06                    ;;Y = #$06 0000_0110
lda      ($8B),y                       ; 0x3bb9 $BBA9 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBBDD                         ; 0x3bbb $BBAB F0 30                    ;
sec                                    ; 0x3bbd $BBAD 38                       ;
sbc      #$01                          ; 0x3bbe $BBAE E9 01                    ;
sta      ($8B),y                       ; 0x3bc0 $BBB0 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC097                         ; 0x3bc2 $BBB2 20 97 C0                 ;
bne      LBBBA                         ; 0x3bc5 $BBB5 D0 03                    ;
jmp      LBC7C                         ; 0x3bc7 $BBB7 4C 7C BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBBBA                                                                          ;
cmp      #$02                          ; 0x3bca $BBBA C9 02                    ;
bne      LBBC1                         ; 0x3bcc $BBBC D0 03                    ;
jmp      LBCA6                         ; 0x3bce $BBBE 4C A6 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBBC1                                                                          ;
cmp      #$03                          ; 0x3bd1 $BBC1 C9 03                    ;
bne      LBBC8                         ; 0x3bd3 $BBC3 D0 03                    ;
jmp      LBCA3                         ; 0x3bd5 $BBC5 4C A3 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBBC8                                                                          ;
lda      #$01                          ; 0x3bd8 $BBC8 A9 01                    ;;A = #$01 0000_0001
jsr      RNG_get_random_number__A_is_max; 0x3bda $BBCA 20 8E 96                ;
asl                                    ; 0x3bdd $BBCD 0A                       ;
sec                                    ; 0x3bde $BBCE 38                       ;
sbc      #$01                          ; 0x3bdf $BBCF E9 01                    ;
ldy      #$05                          ; 0x3be1 $BBD1 A0 05                    ;;Y = #$05 0000_0101
clc                                    ; 0x3be3 $BBD3 18                       ;
adc      ($8B),y                       ; 0x3be4 $BBD4 71 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$03                          ; 0x3be6 $BBD6 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x3be8 $BBD8 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LBC0C                         ; 0x3bea $BBDA 4C 0C BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBBDD                                                                          ;
ldy      #$05                          ; 0x3bed $BBDD A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3bef $BBDF B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$01                          ; 0x3bf1 $BBE1 29 01                    ;;Keep Bits:0000_0001
beq      LBBFA                         ; 0x3bf3 $BBE3 F0 15                    ;
lda      $37                           ; 0x3bf5 $BBE5 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
ldy      #$02                          ; 0x3bf7 $BBE7 A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x3bf9 $BBE9 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bmi      LBBF1                         ; 0x3bfb $BBEB 30 04                    ;
lda      #$00                          ; 0x3bfd $BBED A9 00                    ;;A = #$00 0000_0000
beq      LBBF3                         ; 0x3bff $BBEF F0 02                    ;
LBBF1                                                                          ;
lda      #$02                          ; 0x3c01 $BBF1 A9 02                    ;;A = #$02 0000_0010
LBBF3                                                                          ;
ldy      #$05                          ; 0x3c03 $BBF3 A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3c05 $BBF5 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LBC0C                         ; 0x3c07 $BBF7 4C 0C BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBBFA                                                                          ;
lda      $36                           ; 0x3c0a $BBFA A5 36                    ;;player PosX, 0-14 (small meta-tile size)
ldy      #$01                          ; 0x3c0c $BBFC A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x3c0e $BBFE D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bmi      LBC06                         ; 0x3c10 $BC00 30 04                    ;
LBC03     = * + $0001                                                          ;
lda      #$03                          ; 0x3c12 $BC02 A9 03                    ;;A = #$03 0000_0011
bne      LBC08                         ; 0x3c14 $BC04 D0 02                    ;
LBC06                                                                          ;
lda      #$01                          ; 0x3c16 $BC06 A9 01                    ;;A = #$01 0000_0001
LBC08                                                                          ;
ldy      #$05                          ; 0x3c18 $BC08 A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3c1a $BC0A 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBC0C                                                                          ;
ldy      #$05                          ; 0x3c1c $BC0C A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3c1e $BC0E B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $92                           ; 0x3c20 $BC10 85 92                    ;
jsr      LC097                         ; 0x3c22 $BC12 20 97 C0                 ;
bne      LBC1A                         ; 0x3c25 $BC15 D0 03                    ;
jmp      LBC71                         ; 0x3c27 $BC17 4C 71 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC1A                                                                          ;
cmp      #$02                          ; 0x3c2a $BC1A C9 02                    ;
bne      LBC21                         ; 0x3c2c $BC1C D0 03                    ;
jmp      LBCA6                         ; 0x3c2e $BC1E 4C A6 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC21                                                                          ;
cmp      #$03                          ; 0x3c31 $BC21 C9 03                    ;
bne      LBC28                         ; 0x3c33 $BC23 D0 03                    ;
jmp      LBCA3                         ; 0x3c35 $BC25 4C A3 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC28                                                                          ;
lda      $91                           ; 0x3c38 $BC28 A5 91                    ;
ldy      #$05                          ; 0x3c3a $BC2A A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3c3c $BC2C 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC097                         ; 0x3c3e $BC2E 20 97 C0                 ;
bne      LBC36                         ; 0x3c41 $BC31 D0 03                    ;
jmp      LBC7C                         ; 0x3c43 $BC33 4C 7C BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC36                                                                          ;
cmp      #$02                          ; 0x3c46 $BC36 C9 02                    ;
bne      LBC3D                         ; 0x3c48 $BC38 D0 03                    ;
jmp      LBCA6                         ; 0x3c4a $BC3A 4C A6 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC3D                                                                          ;
cmp      #$03                          ; 0x3c4d $BC3D C9 03                    ;
bne      LBC44                         ; 0x3c4f $BC3F D0 03                    ;
jmp      LBCA3                         ; 0x3c51 $BC41 4C A3 BC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC44                                                                          ;
lda      $92                           ; 0x3c54 $BC44 A5 92                    ;
eor      #$02                          ; 0x3c56 $BC46 49 02                    ;;Flip Bits:0000_0010
ldy      #$05                          ; 0x3c58 $BC48 A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3c5a $BC4A 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC097                         ; 0x3c5c $BC4C 20 97 C0                 ;
beq      LBC71                         ; 0x3c5f $BC4F F0 20                    ;
cmp      #$02                          ; 0x3c61 $BC51 C9 02                    ;
beq      LBCA6                         ; 0x3c63 $BC53 F0 51                    ;
cmp      #$03                          ; 0x3c65 $BC55 C9 03                    ;
beq      LBCA3                         ; 0x3c67 $BC57 F0 4A                    ;
lda      $91                           ; 0x3c69 $BC59 A5 91                    ;
eor      #$02                          ; 0x3c6b $BC5B 49 02                    ;;Flip Bits:0000_0010
ldy      #$05                          ; 0x3c6d $BC5D A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3c6f $BC5F 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC097                         ; 0x3c71 $BC61 20 97 C0                 ;
beq      LBC71                         ; 0x3c74 $BC64 F0 0B                    ;
cmp      #$02                          ; 0x3c76 $BC66 C9 02                    ;
beq      LBCA6                         ; 0x3c78 $BC68 F0 3C                    ;
cmp      #$03                          ; 0x3c7a $BC6A C9 03                    ;
beq      LBCA3                         ; 0x3c7c $BC6C F0 35                    ;
jmp      LCC7B                         ; 0x3c7e $BC6E 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBC71                                                                          ;
lda      #$05                          ; 0x3c81 $BC71 A9 05                    ;;A = #$05 0000_0101
jsr      RNG_get_random_number__A_is_max; 0x3c83 $BC73 20 8E 96                ;
adc      #$02                          ; 0x3c86 $BC76 69 02                    ;
ldy      #$06                          ; 0x3c88 $BC78 A0 06                    ;;Y = #$06 0000_0110
sta      ($8B),y                       ; 0x3c8a $BC7A 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBC7C                                                                          ;
ldy      #$05                          ; 0x3c8c $BC7C A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3c8e $BC7E B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$01                          ; 0x3c90 $BC80 A0 01                    ;;Y = #$01 0000_0001
tax                                    ; 0x3c92 $BC82 AA                       ;
beq      LBC98                         ; 0x3c93 $BC83 F0 13                    ;
dex                                    ; 0x3c95 $BC85 CA                       ;
beq      LBC94                         ; 0x3c96 $BC86 F0 0C                    ;
dex                                    ; 0x3c98 $BC88 CA                       ;
beq      LBC8F                         ; 0x3c99 $BC89 F0 04                    ;
lda      #$01                          ; 0x3c9b $BC8B A9 01                    ;;A = #$01 0000_0001
bne      LBC9B                         ; 0x3c9d $BC8D D0 0C                    ;
LBC8F                                                                          ;
iny                                    ; 0x3c9f $BC8F C8                       ;
lda      #$FF                          ; 0x3ca0 $BC90 A9 FF                    ;;A = #$ff 1111_1111
bne      LBC9B                         ; 0x3ca2 $BC92 D0 07                    ;
LBC94                                                                          ;
lda      #$FF                          ; 0x3ca4 $BC94 A9 FF                    ;;A = #$ff 1111_1111
bne      LBC9B                         ; 0x3ca6 $BC96 D0 03                    ;
LBC98                                                                          ;
iny                                    ; 0x3ca8 $BC98 C8                       ;
lda      #$01                          ; 0x3ca9 $BC99 A9 01                    ;;A = #$01 0000_0001
LBC9B                                                                          ;
clc                                    ; 0x3cab $BC9B 18                       ;
adc      ($8B),y                       ; 0x3cac $BC9C 71 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      ($8B),y                       ; 0x3cae $BC9E 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCC7B                         ; 0x3cb0 $BCA0 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCA3                                                                          ;
jmp      Monster__PickAndSetRND_OffscreenTimer; 0x3cb3 $BCA3 4C 75 C8          ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCA6                                                                          ;
jsr      LCC7B                         ; 0x3cb6 $BCA6 20 7B CC                 ;
jmp      Monster_Attacks_Player        ; 0x3cb9 $BCA9 4C BB C7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCAC                                                                          ;
lda      $75                           ; 0x3cbc $BCAC A5 75                    ;
bne      LBCB3                         ; 0x3cbe $BCAE D0 03                    ;
jmp      LBB59                         ; 0x3cc0 $BCB0 4C 59 BB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCB3                                                                          ;
rts                                    ; 0x3cc3 $BCB3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCB4                                                                          ;
ldy      #$04                          ; 0x3cc4 $BCB4 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3cc6 $BCB6 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBCBD                         ; 0x3cc8 $BCB8 F0 03                    ;
jmp      LBB5F                         ; 0x3cca $BCBA 4C 5F BB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCBD                                                                          ;
jsr      LC884                         ; 0x3ccd $BCBD 20 84 C8                 ;
ldy      #$05                          ; 0x3cd0 $BCC0 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3cd2 $BCC2 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $91                           ; 0x3cd4 $BCC4 85 91                    ;
ldy      #$07                          ; 0x3cd6 $BCC6 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x3cd8 $BCC8 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x3cda $BCCA 18                       ;
adc      #$01                          ; 0x3cdb $BCCB 69 01                    ;
and      #$03                          ; 0x3cdd $BCCD 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x3cdf $BCCF 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LBCD6                         ; 0x3ce1 $BCD1 D0 03                    ;
jmp      LBBA7                         ; 0x3ce3 $BCD3 4C A7 BB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCD6                                                                          ;
jmp      LCC7B                         ; 0x3ce6 $BCD6 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCD9                                                                          ;
jsr      LBB59                         ; 0x3ce9 $BCD9 20 59 BB                 ;
ldy      #$04                          ; 0x3cec $BCDC A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3cee $BCDE B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBCE3                         ; 0x3cf0 $BCE0 F0 01                    ;
rts                                    ; 0x3cf2 $BCE2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBCE3                                                                          ;
ldy      #$01                          ; 0x3cf3 $BCE3 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x3cf5 $BCE5 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $08                           ; 0x3cf7 $BCE7 85 08                    ;;save calc'd attack strength to $08 ?
iny                                    ; 0x3cf9 $BCE9 C8                       ;
lda      ($8B),y                       ; 0x3cfa $BCEA B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $09                           ; 0x3cfc $BCEC 85 09                    ;
ldy      #$05                          ; 0x3cfe $BCEE A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3d00 $BCF0 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $0A                           ; 0x3d02 $BCF2 85 0A                    ;
lda      $8B                           ; 0x3d04 $BCF4 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x3d06 $BCF6 18                       ;
adc      #$14                          ; 0x3d07 $BCF7 69 14                    ;
sta      $8B                           ; 0x3d09 $BCF9 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x3d0b $BCFB A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x3d0d $BCFD 69 00                    ;
sta      $8C                           ; 0x3d0f $BCFF 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
ldy      #$04                          ; 0x3d11 $BD01 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3d13 $BD03 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBD3D                         ; 0x3d15 $BD05 F0 36                    ;
lda      #$28                          ; 0x3d17 $BD07 A9 28                    ;;A = #$28 0010_1000
jsr      RNG_get_random_number__A_is_max; 0x3d19 $BD09 20 8E 96                ;
cmp      #$05                          ; 0x3d1c $BD0C C9 05                    ;
bpl      LBD3D                         ; 0x3d1e $BD0E 10 2D                    ;
ldy      #$01                          ; 0x3d20 $BD10 A0 01                    ;;Y = #$01 0000_0001
lda      $08                           ; 0x3d22 $BD12 A5 08                    ;;save calc'd attack strength to $08 ?
sta      ($8B),y                       ; 0x3d24 $BD14 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d26 $BD16 C8                       ;
lda      $09                           ; 0x3d27 $BD17 A5 09                    ;
sta      ($8B),y                       ; 0x3d29 $BD19 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d2b $BD1B C8                       ;
lda      #$00                          ; 0x3d2c $BD1C A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x3d2e $BD1E 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d30 $BD20 C8                       ;
sta      ($8B),y                       ; 0x3d31 $BD21 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d33 $BD23 C8                       ;
lda      $0A                           ; 0x3d34 $BD24 A5 0A                    ;
sta      ($8B),y                       ; 0x3d36 $BD26 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d38 $BD28 C8                       ;
lda      #$00                          ; 0x3d39 $BD29 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x3d3b $BD2B 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d3d $BD2D C8                       ;
sta      ($8B),y                       ; 0x3d3e $BD2E 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d40 $BD30 C8                       ;
lda      #$02                          ; 0x3d41 $BD31 A9 02                    ;;A = #$02 0000_0010
sta      ($8B),y                       ; 0x3d43 $BD33 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3d45 $BD35 C8                       ;
lda      #$00                          ; 0x3d46 $BD36 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x3d48 $BD38 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LCC7B                         ; 0x3d4a $BD3A 20 7B CC                 ;
LBD3D                                                                          ;
lda      $8B                           ; 0x3d4d $BD3D A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
sec                                    ; 0x3d4f $BD3F 38                       ;
sbc      #$14                          ; 0x3d50 $BD40 E9 14                    ;
sta      $8B                           ; 0x3d52 $BD42 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x3d54 $BD44 A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
sbc      #$00                          ; 0x3d56 $BD46 E9 00                    ;
sta      $8C                           ; 0x3d58 $BD48 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
rts                                    ; 0x3d5a $BD4A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBD4B                                                                          ;
ldy      #$09                          ; 0x3d5b $BD4B A0 09                    ;;Y = #$09 0000_1001
lda      ($8B),y                       ; 0x3d5d $BD4D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x3d5f $BD4F 38                       ;
sbc      #$01                          ; 0x3d60 $BD50 E9 01                    ;
sta      ($8B),y                       ; 0x3d62 $BD52 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$0C                          ; 0x3d64 $BD54 C9 0C                    ;
bmi      LBD5B                         ; 0x3d66 $BD56 30 03                    ;
jmp      LCC7B                         ; 0x3d68 $BD58 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBD5B                                                                          ;
cmp      #$00                          ; 0x3d6b $BD5B C9 00                    ;
bne      LBD68                         ; 0x3d6d $BD5D D0 09                    ;
lda      #$1E                          ; 0x3d6f $BD5F A9 1E                    ;;A = #$1e 0001_1110
jsr      RNG_get_random_number__A_is_max; 0x3d71 $BD61 20 8E 96                ;
adc      #$14                          ; 0x3d74 $BD64 69 14                    ;
sta      ($8B),y                       ; 0x3d76 $BD66 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBD68                                                                          ;
jmp      LBB8C                         ; 0x3d78 $BD68 4C 8C BB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBD6B                                                                          ;
ldy      #$04                          ; 0x3d7b $BD6B A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3d7d $BD6D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBD72                         ; 0x3d7f $BD6F F0 01                    ;
rts                                    ; 0x3d81 $BD71 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBD72                                                                          ;
jsr      LC884                         ; 0x3d82 $BD72 20 84 C8                 ;
ldy      #$05                          ; 0x3d85 $BD75 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3d87 $BD77 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $91                           ; 0x3d89 $BD79 85 91                    ;
ldy      #$07                          ; 0x3d8b $BD7B A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x3d8d $BD7D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x3d8f $BD7F 18                       ;
adc      #$01                          ; 0x3d90 $BD80 69 01                    ;
and      #$01                          ; 0x3d92 $BD82 29 01                    ;;Keep Bits:0000_0001
sta      ($8B),y                       ; 0x3d94 $BD84 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LBBA7                         ; 0x3d96 $BD86 4C A7 BB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBD89                                                                          ;
ldy      #$04                          ; 0x3d99 $BD89 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3d9b $BD8B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBD90                         ; 0x3d9d $BD8D F0 01                    ;
rts                                    ; 0x3d9f $BD8F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBD90                                                                          ;
ldy      #$07                          ; 0x3da0 $BD90 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x3da2 $BD92 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x3da4 $BD94 18                       ;
adc      #$01                          ; 0x3da5 $BD95 69 01                    ;
sta      ($8B),y                       ; 0x3da7 $BD97 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC097                         ; 0x3da9 $BD99 20 97 C0                 ;
beq      LBDA9                         ; 0x3dac $BD9C F0 0B                    ;
cmp      #$01                          ; 0x3dae $BD9E C9 01                    ;
beq      LBDD5                         ; 0x3db0 $BDA0 F0 33                    ;
cmp      #$02                          ; 0x3db2 $BDA2 C9 02                    ;
beq      LBDD2                         ; 0x3db4 $BDA4 F0 2C                    ;
jmp      LBDD5                         ; 0x3db6 $BDA6 4C D5 BD                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBDA9                                                                          ;
ldy      #$05                          ; 0x3db9 $BDA9 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3dbb $BDAB B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$01                          ; 0x3dbd $BDAD A0 01                    ;;Y = #$01 0000_0001
tax                                    ; 0x3dbf $BDAF AA                       ;
beq      LBDBA                         ; 0x3dc0 $BDB0 F0 08                    ;
dex                                    ; 0x3dc2 $BDB2 CA                       ;
beq      LBDBF                         ; 0x3dc3 $BDB3 F0 0A                    ;
dex                                    ; 0x3dc5 $BDB5 CA                       ;
beq      LBDC3                         ; 0x3dc6 $BDB6 F0 0B                    ;
bne      LBDC8                         ; 0x3dc8 $BDB8 D0 0E                    ;
LBDBA                                                                          ;
iny                                    ; 0x3dca $BDBA C8                       ;
lda      #$01                          ; 0x3dcb $BDBB A9 01                    ;;A = #$01 0000_0001
bne      LBDCA                         ; 0x3dcd $BDBD D0 0B                    ;
LBDBF                                                                          ;
lda      #$FF                          ; 0x3dcf $BDBF A9 FF                    ;;A = #$ff 1111_1111
bne      LBDCA                         ; 0x3dd1 $BDC1 D0 07                    ;
LBDC3                                                                          ;
iny                                    ; 0x3dd3 $BDC3 C8                       ;
lda      #$FF                          ; 0x3dd4 $BDC4 A9 FF                    ;;A = #$ff 1111_1111
bne      LBDCA                         ; 0x3dd6 $BDC6 D0 02                    ;
LBDC8                                                                          ;
lda      #$01                          ; 0x3dd8 $BDC8 A9 01                    ;;A = #$01 0000_0001
LBDCA                                                                          ;
clc                                    ; 0x3dda $BDCA 18                       ;
adc      ($8B),y                       ; 0x3ddb $BDCB 71 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      ($8B),y                       ; 0x3ddd $BDCD 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCC7B                         ; 0x3ddf $BDCF 4C 7B CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBDD2                                                                          ;
jsr      Monster_Attacks_Player        ; 0x3de2 $BDD2 20 BB C7                 ;
LBDD5                                                                          ;
jmp      Monster__PickAndSetRND_OffscreenTimer; 0x3de5 $BDD5 4C 75 C8          ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBDD8                                                                          ;
ldy      #$04                          ; 0x3de8 $BDD8 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3dea $BDDA B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBDDF                         ; 0x3dec $BDDC F0 01                    ;
rts                                    ; 0x3dee $BDDE 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBDDF                                                                          ;
ldy      #$07                          ; 0x3def $BDDF A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x3df1 $BDE1 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x3df3 $BDE3 18                       ;
adc      #$01                          ; 0x3df4 $BDE4 69 01                    ;
and      #$03                          ; 0x3df6 $BDE6 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x3df8 $BDE8 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$01                          ; 0x3dfa $BDEA 29 01                    ;;Keep Bits:0000_0001
bne      LBE1D                         ; 0x3dfc $BDEC D0 2F                    ;
jsr      LC884                         ; 0x3dfe $BDEE 20 84 C8                 ;
jsr      LC097                         ; 0x3e01 $BDF1 20 97 C0                 ;
bne      LBE1D                         ; 0x3e04 $BDF4 D0 27                    ;
ldy      #$05                          ; 0x3e06 $BDF6 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3e08 $BDF8 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$01                          ; 0x3e0a $BDFA C9 01                    ;
bne      LBE02                         ; 0x3e0c $BDFC D0 04                    ;
lda      #$FF                          ; 0x3e0e $BDFE A9 FF                    ;;A = #$ff 1111_1111
bne      LBE04                         ; 0x3e10 $BE00 D0 02                    ;
LBE02                                                                          ;
lda      #$01                          ; 0x3e12 $BE02 A9 01                    ;;A = #$01 0000_0001
LBE04                                                                          ;
ldy      #$01                          ; 0x3e14 $BE04 A0 01                    ;;Y = #$01 0000_0001
clc                                    ; 0x3e16 $BE06 18                       ;
adc      ($8B),y                       ; 0x3e17 $BE07 71 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      ($8B),y                       ; 0x3e19 $BE09 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$05                          ; 0x3e1b $BE0B A0 05                    ;;Y = #$05 0000_0101
cmp      #$02                          ; 0x3e1d $BE0D C9 02                    ;
bne      LBE15                         ; 0x3e1f $BE0F D0 04                    ;
lda      #$03                          ; 0x3e21 $BE11 A9 03                    ;;A = #$03 0000_0011
sta      ($8B),y                       ; 0x3e23 $BE13 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBE15                                                                          ;
cmp      #$0F                          ; 0x3e25 $BE15 C9 0F                    ;
bne      LBE1D                         ; 0x3e27 $BE17 D0 04                    ;
lda      #$01                          ; 0x3e29 $BE19 A9 01                    ;;A = #$01 0000_0001
sta      ($8B),y                       ; 0x3e2b $BE1B 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBE1D                                                                          ;
jsr      LCC7B                         ; 0x3e2d $BE1D 20 7B CC                 ;
ldy      #$09                          ; 0x3e30 $BE20 A0 09                    ;;Y = #$09 0000_1001
lda      ($8B),y                       ; 0x3e32 $BE22 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBE72                         ; 0x3e34 $BE24 F0 4C                    ;
sec                                    ; 0x3e36 $BE26 38                       ;
sbc      #$01                          ; 0x3e37 $BE27 E9 01                    ;
sta      ($8B),y                       ; 0x3e39 $BE29 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$01                          ; 0x3e3b $BE2B A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x3e3d $BE2D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x3e3f $BE2F 38                       ;
sbc      #$02                          ; 0x3e40 $BE30 E9 02                    ;
tax                                    ; 0x3e42 $BE32 AA                       ;
ldy      #$05                          ; 0x3e43 $BE33 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3e45 $BE35 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$01                          ; 0x3e47 $BE37 C9 01                    ;
beq      LBE40                         ; 0x3e49 $BE39 F0 05                    ;
txa                                    ; 0x3e4b $BE3B 8A                       ;
clc                                    ; 0x3e4c $BE3C 18                       ;
adc      #$05                          ; 0x3e4d $BE3D 69 05                    ;
tax                                    ; 0x3e4f $BE3F AA                       ;
LBE40                                                                          ;
txa                                    ; 0x3e50 $BE40 8A                       ;
asl                                    ; 0x3e51 $BE41 0A                       ;
asl                                    ; 0x3e52 $BE42 0A                       ;
asl                                    ; 0x3e53 $BE43 0A                       ;
adc      #$08                          ; 0x3e54 $BE44 69 08                    ;
sta      $A8                           ; 0x3e56 $BE46 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
ldy      #$02                          ; 0x3e58 $BE48 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x3e5a $BE4A B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x3e5c $BE4C 0A                       ;
asl                                    ; 0x3e5d $BE4D 0A                       ;
asl                                    ; 0x3e5e $BE4E 0A                       ;
adc      #$0F                          ; 0x3e5f $BE4F 69 0F                    ;
sta      $A9                           ; 0x3e61 $BE51 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$02                          ; 0x3e63 $BE53 A9 02                    ;;A = #$02 0000_0010
sta      $AA                           ; 0x3e65 $BE55 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      #$DB                          ; 0x3e67 $BE57 A9 DB                    ;;A = #$db 1101_1011
sta      $AB                           ; 0x3e69 $BE59 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldy      #$05                          ; 0x3e6b $BE5B A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x3e6d $BE5D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$02                          ; 0x3e6f $BE5F 29 02                    ;;Keep Bits:0000_0010
asl                                    ; 0x3e71 $BE61 0A                       ;
asl                                    ; 0x3e72 $BE62 0A                       ;
tay                                    ; 0x3e73 $BE63 A8                       ;
lda      #$D4                          ; 0x3e74 $BE64 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x3e76 $BE66 85 AD                    ;
lda      #$23                          ; 0x3e78 $BE68 A9 23                    ;;A = #$23 0010_0011
sta      $AC                           ; 0x3e7a $BE6A 85 AC                    ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x3e7c $BE6C 20 8C CE;
jmp      LBE86                         ; 0x3e7f $BE6F 4C 86 BE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBE72                                                                          ;
lda      #$18                          ; 0x3e82 $BE72 A9 18                    ;;A = #$18 0001_1000
jsr      RNG_get_random_number__A_is_max; 0x3e84 $BE74 20 8E 96                ;
cmp      #$03                          ; 0x3e87 $BE77 C9 03                    ;
bpl      LBE86                         ; 0x3e89 $BE79 10 0B                    ;
ldy      #$09                          ; 0x3e8b $BE7B A0 09                    ;;Y = #$09 0000_1001
lda      #$06                          ; 0x3e8d $BE7D A9 06                    ;;A = #$06 0000_0110
sta      ($8B),y                       ; 0x3e8f $BE7F 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lda      #$03                          ; 0x3e91 $BE81 A9 03                    ;;A = #$03 0000_0011
jsr      Music_SoundEffect_Play_index_with_A__maybe; 0x3e93 $BE83 20 93 E2     ;
LBE86                                                                          ;
jsr      LBF5C                         ; 0x3e96 $BE86 20 5C BF                 ;
bcc      LBE8E                         ; 0x3e99 $BE89 90 03                    ;
jmp      Monster_Attacks_Player        ; 0x3e9b $BE8B 4C BB C7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBE8E                                                                          ;
rts                                    ; 0x3e9e $BE8E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBE8F                                                                          ;
ldy      #$04                          ; 0x3e9f $BE8F A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3ea1 $BE91 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBE96                         ; 0x3ea3 $BE93 F0 01                    ;
rts                                    ; 0x3ea5 $BE95 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBE96                                                                          ;
jsr      LC884                         ; 0x3ea6 $BE96 20 84 C8                 ;
ldy      #$07                          ; 0x3ea9 $BE99 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x3eab $BE9B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x3ead $BE9D 18                       ;
adc      #$01                          ; 0x3eae $BE9E 69 01                    ;
and      #$03                          ; 0x3eb0 $BEA0 29 03                    ;;Keep Bits:0000_0011
sta      ($8B),y                       ; 0x3eb2 $BEA2 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$09                          ; 0x3eb4 $BEA4 A0 09                    ;;Y = #$09 0000_1001
lda      ($8B),y                       ; 0x3eb6 $BEA6 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x3eb8 $BEA8 38                       ;
sbc      #$01                          ; 0x3eb9 $BEA9 E9 01                    ;
sta      ($8B),y                       ; 0x3ebb $BEAB 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LBEC2                         ; 0x3ebd $BEAD D0 13                    ;
LBEAF                                                                          ;
jsr      LBFCD                         ; 0x3ebf $BEAF 20 CD BF                 ;
jsr      LCB6B                         ; 0x3ec2 $BEB2 20 6B CB                 ;
bne      LBEAF                         ; 0x3ec5 $BEB5 D0 F8                    ;
lda      #$1E                          ; 0x3ec7 $BEB7 A9 1E                    ;;A = #$1e 0001_1110
jsr      RNG_get_random_number__A_is_max; 0x3ec9 $BEB9 20 8E 96                ;
adc      #$28                          ; 0x3ecc $BEBC 69 28                    ;
ldy      #$09                          ; 0x3ece $BEBE A0 09                    ;;Y = #$09 0000_1001
sta      ($8B),y                       ; 0x3ed0 $BEC0 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBEC2                                                                          ;
jsr      LCC7B                         ; 0x3ed2 $BEC2 20 7B CC                 ;
ldy      #$01                          ; 0x3ed5 $BEC5 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x3ed7 $BEC7 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $08                           ; 0x3ed9 $BEC9 85 08                    ;;save calc'd attack strength to $08 ?
iny                                    ; 0x3edb $BECB C8                       ;
lda      ($8B),y                       ; 0x3edc $BECC B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $09                           ; 0x3ede $BECE 85 09                    ;
lda      $8B                           ; 0x3ee0 $BED0 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x3ee2 $BED2 18                       ;
adc      #$0A                          ; 0x3ee3 $BED3 69 0A                    ;
sta      $8B                           ; 0x3ee5 $BED5 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x3ee7 $BED7 A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x3ee9 $BED9 69 00                    ;
sta      $8C                           ; 0x3eeb $BEDB 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
ldy      #$04                          ; 0x3eed $BEDD A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x3eef $BEDF B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LBF46                         ; 0x3ef1 $BEE1 F0 63                    ;
ldy      #$01                          ; 0x3ef3 $BEE3 A0 01                    ;;Y = #$01 0000_0001
inc      $08                           ; 0x3ef5 $BEE5 E6 08                    ;;save calc'd attack strength to $08 ?
lda      $08                           ; 0x3ef7 $BEE7 A5 08                    ;;save calc'd attack strength to $08 ?
sta      ($8B),y                       ; 0x3ef9 $BEE9 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3efb $BEEB C8                       ;
inc      $09                           ; 0x3efc $BEEC E6 09                    ;
lda      $09                           ; 0x3efe $BEEE A5 09                    ;
sta      ($8B),y                       ; 0x3f00 $BEF0 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f02 $BEF2 C8                       ;
lda      #$00                          ; 0x3f03 $BEF3 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x3f05 $BEF5 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f07 $BEF7 C8                       ;
sta      ($8B),y                       ; 0x3f08 $BEF8 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f0a $BEFA C8                       ;
sta      ($8B),y                       ; 0x3f0b $BEFB 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f0d $BEFD C8                       ;
sta      ($8B),y                       ; 0x3f0e $BEFE 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f10 $BF00 C8                       ;
sta      ($8B),y                       ; 0x3f11 $BF01 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f13 $BF03 C8                       ;
lda      #$02                          ; 0x3f14 $BF04 A9 02                    ;;A = #$02 0000_0010
sta      ($8B),y                       ; 0x3f16 $BF06 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3f18 $BF08 C8                       ;
lda      #$00                          ; 0x3f19 $BF09 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x3f1b $BF0B 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lda      $36                           ; 0x3f1d $BF0D A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sec                                    ; 0x3f1f $BF0F 38                       ;
sbc      $08                           ; 0x3f20 $BF10 E5 08                    ;;save calc'd attack strength to $08 ?
bpl      LBF19                         ; 0x3f22 $BF12 10 05                    ;
eor      #$FF                          ; 0x3f24 $BF14 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x3f26 $BF16 18                       ;
adc      #$01                          ; 0x3f27 $BF17 69 01                    ;
LBF19                                                                          ;
sta      $0A                           ; 0x3f29 $BF19 85 0A                    ;
lda      $37                           ; 0x3f2b $BF1B A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0x3f2d $BF1D 38                       ;
sbc      $09                           ; 0x3f2e $BF1E E5 09                    ;
bpl      LBF27                         ; 0x3f30 $BF20 10 05                    ;
eor      #$FF                          ; 0x3f32 $BF22 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x3f34 $BF24 18                       ;
adc      #$01                          ; 0x3f35 $BF25 69 01                    ;
LBF27                                                                          ;
cmp      $0A                           ; 0x3f37 $BF27 C5 0A                    ;
bmi      LBF37                         ; 0x3f39 $BF29 30 0C                    ;
ldx      #$00                          ; 0x3f3b $BF2B A2 00                    ;;X = #$00 0000_0000
lda      $37                           ; 0x3f3d $BF2D A5 37                    ;;player PosY, 0-14 (small meta-tile size)
cmp      $09                           ; 0x3f3f $BF2F C5 09                    ;
bpl      LBF41                         ; 0x3f41 $BF31 10 0E                    ;
ldx      #$02                          ; 0x3f43 $BF33 A2 02                    ;;X = #$02 0000_0010
bne      LBF41                         ; 0x3f45 $BF35 D0 0A                    ;
LBF37                                                                          ;
ldx      #$01                          ; 0x3f47 $BF37 A2 01                    ;;X = #$01 0000_0001
lda      $36                           ; 0x3f49 $BF39 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
cmp      $08                           ; 0x3f4b $BF3B C5 08                    ;;save calc'd attack strength to $08 ?
bmi      LBF41                         ; 0x3f4d $BF3D 30 02                    ;
ldx      #$03                          ; 0x3f4f $BF3F A2 03                    ;;X = #$03 0000_0011
LBF41                                                                          ;
txa                                    ; 0x3f51 $BF41 8A                       ;
ldy      #$05                          ; 0x3f52 $BF42 A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3f54 $BF44 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
LBF46                                                                          ;
lda      $8B                           ; 0x3f56 $BF46 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
sec                                    ; 0x3f58 $BF48 38                       ;
sbc      #$0A                          ; 0x3f59 $BF49 E9 0A                    ;
sta      $8B                           ; 0x3f5b $BF4B 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x3f5d $BF4D A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
sbc      #$00                          ; 0x3f5f $BF4F E9 00                    ;
sta      $8C                           ; 0x3f61 $BF51 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
jsr      LBF60                         ; 0x3f63 $BF53 20 60 BF                 ;
bcs      LBF59                         ; 0x3f66 $BF56 B0 01                    ;
rts                                    ; 0x3f68 $BF58 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBF59                                                                          ;
jmp      Monster_Attacks_Player        ; 0x3f69 $BF59 4C BB C7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBF5C                                                                          ;
ldy      #$02                          ; 0x3f6c $BF5C A0 02                    ;;Y = #$02 0000_0010
bne      LBF62                         ; 0x3f6e $BF5E D0 02                    ;
LBF60                                                                          ;
ldy      #$03                          ; 0x3f70 $BF60 A0 03                    ;;Y = #$03 0000_0011
LBF62                                                                          ;
ldx      #$03                          ; 0x3f72 $BF62 A2 03                    ;;X = #$03 0000_0011
stx      $97                           ; 0x3f74 $BF64 86 97                    ;
sty      $98                           ; 0x3f76 $BF66 84 98                    ;
lda      $36                           ; 0x3f78 $BF68 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sec                                    ; 0x3f7a $BF6A 38                       ;
sbc      $97                           ; 0x3f7b $BF6B E5 97                    ;
bpl      LBF71                         ; 0x3f7d $BF6D 10 02                    ;
lda      #$00                          ; 0x3f7f $BF6F A9 00                    ;;A = #$00 0000_0000
LBF71                                                                          ;
sta      $08                           ; 0x3f81 $BF71 85 08                    ;;save calc'd attack strength to $08 ?
lda      $36                           ; 0x3f83 $BF73 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
clc                                    ; 0x3f85 $BF75 18                       ;
adc      #$02                          ; 0x3f86 $BF76 69 02                    ;
sta      $09                           ; 0x3f88 $BF78 85 09                    ;
lda      $37                           ; 0x3f8a $BF7A A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x3f8c $BF7C 18                       ;
adc      #$01                          ; 0x3f8d $BF7D 69 01                    ;
sta      $0B                           ; 0x3f8f $BF7F 85 0B                    ;
sec                                    ; 0x3f91 $BF81 38                       ;
sbc      $98                           ; 0x3f92 $BF82 E5 98                    ;
bpl      LBF88                         ; 0x3f94 $BF84 10 02                    ;
lda      #$00                          ; 0x3f96 $BF86 A9 00                    ;;A = #$00 0000_0000
LBF88                                                                          ;
sta      $0A                           ; 0x3f98 $BF88 85 0A                    ;
jsr      LBFAE                         ; 0x3f9a $BF8A 20 AE BF                 ;
bcc      LBF90                         ; 0x3f9d $BF8D 90 01                    ;
rts                                    ; 0x3f9f $BF8F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBF90                                                                          ;
lda      $36                           ; 0x3fa0 $BF90 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
clc                                    ; 0x3fa2 $BF92 18                       ;
adc      #$01                          ; 0x3fa3 $BF93 69 01                    ;
sta      $09                           ; 0x3fa5 $BF95 85 09                    ;
sec                                    ; 0x3fa7 $BF97 38                       ;
sbc      $97                           ; 0x3fa8 $BF98 E5 97                    ;
bpl      LBF9E                         ; 0x3faa $BF9A 10 02                    ;
lda      #$00                          ; 0x3fac $BF9C A9 00                    ;;A = #$00 0000_0000
LBF9E                                                                          ;
sta      $08                           ; 0x3fae $BF9E 85 08                    ;;save calc'd attack strength to $08 ?
lda      $37                           ; 0x3fb0 $BFA0 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0x3fb2 $BFA2 38                       ;
sbc      $98                           ; 0x3fb3 $BFA3 E5 98                    ;
sta      $0A                           ; 0x3fb5 $BFA5 85 0A                    ;
lda      $37                           ; 0x3fb7 $BFA7 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
clc                                    ; 0x3fb9 $BFA9 18                       ;
adc      #$02                          ; 0x3fba $BFAA 69 02                    ;
sta      $0B                           ; 0x3fbc $BFAC 85 0B                    ;
LBFAE                                                                          ;
ldy      #$01                          ; 0x3fbe $BFAE A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x3fc0 $BFB0 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      $08                           ; 0x3fc2 $BFB2 C5 08                    ;;save calc'd attack strength to $08 ?
bmi      LBFCB                         ; 0x3fc4 $BFB4 30 15                    ;
inc      $09                           ; 0x3fc6 $BFB6 E6 09                    ;
cmp      $09                           ; 0x3fc8 $BFB8 C5 09                    ;
bpl      LBFCB                         ; 0x3fca $BFBA 10 0F                    ;
iny                                    ; 0x3fcc $BFBC C8                       ;
lda      ($8B),y                       ; 0x3fcd $BFBD B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      $0A                           ; 0x3fcf $BFBF C5 0A                    ;
bmi      LBFCB                         ; 0x3fd1 $BFC1 30 08                    ;
inc      $0B                           ; 0x3fd3 $BFC3 E6 0B                    ;
cmp      $0B                           ; 0x3fd5 $BFC5 C5 0B                    ;
bpl      LBFCB                         ; 0x3fd7 $BFC7 10 02                    ;
sec                                    ; 0x3fd9 $BFC9 38                       ;
rts                                    ; 0x3fda $BFCA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBFCB                                                                          ;
clc                                    ; 0x3fdb $BFCB 18                       ;
rts                                    ; 0x3fdc $BFCC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBFCD                                                                          ;
ldy      #$01                          ; 0x3fdd $BFCD A0 01                    ;;Y = #$01 0000_0001
lda      #$13                          ; 0x3fdf $BFCF A9 13                    ;;A = #$13 0001_0011
jsr      RNG_get_random_number__A_is_max; 0x3fe1 $BFD1 20 8E 96                ;
sta      ($8B),y                       ; 0x3fe4 $BFD4 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x3fe6 $BFD6 C8                       ;
lda      #$11                          ; 0x3fe7 $BFD7 A9 11                    ;;A = #$11 0001_0001
jsr      RNG_get_random_number__A_is_max; 0x3fe9 $BFD9 20 8E 96                ;
sta      ($8B),y                       ; 0x3fec $BFDC 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
rts                                    ; 0x3fee $BFDE 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBFDF                                                                          ;
ldx      $87                           ; 0x3fef $BFDF A6 87                    ;
inx                                    ; 0x3ff1 $BFE1 E8                       ;
txa                                    ; 0x3ff2 $BFE2 8A                       ;
and      #$03                          ; 0x3ff3 $BFE3 29 03                    ;;Keep Bits:0000_0011
sta      $87                           ; 0x3ff5 $BFE5 85 87                    ;
eor      #$02                          ; 0x3ff7 $BFE7 49 02                    ;;Flip Bits:0000_0010
ldy      #$05                          ; 0x3ff9 $BFE9 A0 05                    ;;Y = #$05 0000_0101
sta      ($8B),y                       ; 0x3ffb $BFEB 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lda      $88                           ; 0x3ffd $BFED A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
cmp      #$07                          ; 0x3fff $BFEF C9 07                    ;
beq      LC02F                         ; 0x4001 $BFF1 F0 3C                    ;
cmp      #$08                          ; 0x4003 $BFF3 C9 08                    ;
beq      LC063                         ; 0x4005 $BFF5 F0 6C                    ;
cmp      #$0E                          ; 0x4007 $BFF7 C9 0E                    ;
beq      LC02F                         ; 0x4009 $BFF9 F0 34                    ;
ldx      $87                           ; 0x400b $BFFB A6 87                    ;
beq      LC02B                         ; 0x400d $BFFD F0 2C                    ;
dex                                    ; 0x400f $BFFF CA                       ;
beq      LC027                         ; 0x4010 $C000 F0 25                    ;
dex                                    ; 0x4012 $C002 CA                       ;
beq      LC016                         ; 0x4013 $C003 F0 11                    ;
lda      #$14                          ; 0x4015 $C005 A9 14                    ;;A = #$14 0001_0100
LC007                                                                          ;
ldy      #$01                          ; 0x4017 $C007 A0 01                    ;;Y = #$01 0000_0001
sta      ($8B),y                       ; 0x4019 $C009 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x401b $C00B C8                       ;
lda      #$14                          ; 0x401c $C00C A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x401e $C00E 20 8E 96                ;
sta      ($8B),y                       ; 0x4021 $C011 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB6B                         ; 0x4023 $C013 4C 6B CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC016                                                                          ;
lda      #$00                          ; 0x4026 $C016 A9 00                    ;;A = #$00 0000_0000
LC018                                                                          ;
ldy      #$02                          ; 0x4028 $C018 A0 02                    ;;Y = #$02 0000_0010
sta      ($8B),y                       ; 0x402a $C01A 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
dey                                    ; 0x402c $C01C 88                       ;
lda      #$14                          ; 0x402d $C01D A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x402f $C01F 20 8E 96                ;
sta      ($8B),y                       ; 0x4032 $C022 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB6B                         ; 0x4034 $C024 4C 6B CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC027                                                                          ;
lda      #$00                          ; 0x4037 $C027 A9 00                    ;;A = #$00 0000_0000
beq      LC007                         ; 0x4039 $C029 F0 DC                    ;
LC02B                                                                          ;
lda      #$14                          ; 0x403b $C02B A9 14                    ;;A = #$14 0001_0100
bne      LC018                         ; 0x403d $C02D D0 E9                    ;
LC02F                                                                          ;
ldx      $87                           ; 0x403f $C02F A6 87                    ;
beq      LC05F                         ; 0x4041 $C031 F0 2C                    ;
dex                                    ; 0x4043 $C033 CA                       ;
beq      LC05B                         ; 0x4044 $C034 F0 25                    ;
dex                                    ; 0x4046 $C036 CA                       ;
beq      LC04A                         ; 0x4047 $C037 F0 11                    ;
lda      #$14                          ; 0x4049 $C039 A9 14                    ;;A = #$14 0001_0100
LC03B                                                                          ;
ldy      #$01                          ; 0x404b $C03B A0 01                    ;;Y = #$01 0000_0001
sta      ($8B),y                       ; 0x404d $C03D 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x404f $C03F C8                       ;
lda      #$15                          ; 0x4050 $C040 A9 15                    ;;A = #$15 0001_0101
jsr      RNG_get_random_number__A_is_max; 0x4052 $C042 20 8E 96                ;
sta      ($8B),y                       ; 0x4055 $C045 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB6B                         ; 0x4057 $C047 4C 6B CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC04A                                                                          ;
lda      #$00                          ; 0x405a $C04A A9 00                    ;;A = #$00 0000_0000
LC04C                                                                          ;
ldy      #$02                          ; 0x405c $C04C A0 02                    ;;Y = #$02 0000_0010
sta      ($8B),y                       ; 0x405e $C04E 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
dey                                    ; 0x4060 $C050 88                       ;
lda      #$14                          ; 0x4061 $C051 A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x4063 $C053 20 8E 96                ;
sta      ($8B),y                       ; 0x4066 $C056 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB6B                         ; 0x4068 $C058 4C 6B CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC05B                                                                          ;
lda      #$00                          ; 0x406b $C05B A9 00                    ;;A = #$00 0000_0000
beq      LC03B                         ; 0x406d $C05D F0 DC                    ;
LC05F                                                                          ;
lda      #$15                          ; 0x406f $C05F A9 15                    ;;A = #$15 0001_0101
bne      LC04C                         ; 0x4071 $C061 D0 E9                    ;
LC063                                                                          ;
ldx      $87                           ; 0x4073 $C063 A6 87                    ;
beq      LC093                         ; 0x4075 $C065 F0 2C                    ;
dex                                    ; 0x4077 $C067 CA                       ;
beq      LC08F                         ; 0x4078 $C068 F0 25                    ;
dex                                    ; 0x407a $C06A CA                       ;
beq      LC07E                         ; 0x407b $C06B F0 11                    ;
lda      #$15                          ; 0x407d $C06D A9 15                    ;;A = #$15 0001_0101
LC06F                                                                          ;
ldy      #$01                          ; 0x407f $C06F A0 01                    ;;Y = #$01 0000_0001
sta      ($8B),y                       ; 0x4081 $C071 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4083 $C073 C8                       ;
lda      #$14                          ; 0x4084 $C074 A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x4086 $C076 20 8E 96                ;
sta      ($8B),y                       ; 0x4089 $C079 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB6B                         ; 0x408b $C07B 4C 6B CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC07E                                                                          ;
lda      #$00                          ; 0x408e $C07E A9 00                    ;;A = #$00 0000_0000
LC080                                                                          ;
ldy      #$02                          ; 0x4090 $C080 A0 02                    ;;Y = #$02 0000_0010
sta      ($8B),y                       ; 0x4092 $C082 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
dey                                    ; 0x4094 $C084 88                       ;
lda      #$15                          ; 0x4095 $C085 A9 15                    ;;A = #$15 0001_0101
jsr      RNG_get_random_number__A_is_max; 0x4097 $C087 20 8E 96                ;
sta      ($8B),y                       ; 0x409a $C08A 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB6B                         ; 0x409c $C08C 4C 6B CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC08F                                                                          ;
lda      #$00                          ; 0x409f $C08F A9 00                    ;;A = #$00 0000_0000
beq      LC06F                         ; 0x40a1 $C091 F0 DC                    ;
LC093                                                                          ;
lda      #$14                          ; 0x40a3 $C093 A9 14                    ;;A = #$14 0001_0100
bne      LC080                         ; 0x40a5 $C095 D0 E9                    ;
LC097                                                                          ;
jsr      LC79E                         ; 0x40a7 $C097 20 9E C7                 ;
lda      LC0A9,x                       ; 0x40aa $C09A BD A9 C0                 ;
sta      L0000                         ; 0x40ad $C09D 85 00                    ;
lda      LC0A9+$01,x                   ; 0x40af $C09F BD AA C0                 ;
sta      $01                           ; 0x40b2 $C0A2 85 01                    ;
ldy      #$05                          ; 0x40b4 $C0A4 A0 05                    ;;Y = #$05 0000_0101
jmp      (L0000)                       ; 0x40b6 $C0A6 6C 00 00                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC0A9                                                                          ;
.word    LC0D5                         ; 0x40b9 $C0A9 D5 C0                    ;
.word    LC0D5                         ; 0x40bb $C0AB D5 C0                    ;
.word    LC0D5                         ; 0x40bd $C0AD D5 C0                    ;
.word    LC0D5                         ; 0x40bf $C0AF D5 C0                    ;
.word    LC0D5                         ; 0x40c1 $C0B1 D5 C0                    ;
.word    LC0D5                         ; 0x40c3 $C0B3 D5 C0                    ;
.word    LC0D5                         ; 0x40c5 $C0B5 D5 C0                    ;
.word    LC1F4                         ; 0x40c7 $C0B7 F4 C1                    ;
.word    LC28D                         ; 0x40c9 $C0B9 8D C2                    ;
.word    LC0D5                         ; 0x40cb $C0BB D5 C0                    ;
.word    LC28D                         ; 0x40cd $C0BD 8D C2                    ;
.word    LC0D5                         ; 0x40cf $C0BF D5 C0                    ;
.word    LC68B                         ; 0x40d1 $C0C1 8B C6                    ;
.word    LC68B                         ; 0x40d3 $C0C3 8B C6                    ;
.word    LC40C                         ; 0x40d5 $C0C5 0C C4                    ;
.word    LC4EE                         ; 0x40d7 $C0C7 EE C4                    ;
.word    LC321                         ; 0x40d9 $C0C9 21 C3                    ;
.word    LC5C1                         ; 0x40db $C0CB C1 C5                    ;
.word    LC743                         ; 0x40dd $C0CD 43 C7                    ;
.word    LC0D5                         ; 0x40df $C0CF D5 C0                    ;
.word    LC0D5                         ; 0x40e1 $C0D1 D5 C0                    ;
.word    LC0D5                         ; 0x40e3 $C0D3 D5 C0                    ;
; ---------------------------------------------------------------------------- ;
LC0D5                                                                          ;
lda      ($8B),y                       ; 0x40e5 $C0D5 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x40e7 $C0D7 AA                       ;
beq      LC0E3                         ; 0x40e8 $C0D8 F0 09                    ;
dex                                    ; 0x40ea $C0DA CA                       ;
beq      LC0FF                         ; 0x40eb $C0DB F0 22                    ;
dex                                    ; 0x40ed $C0DD CA                       ;
beq      LC11A                         ; 0x40ee $C0DE F0 3A                    ;
jmp      LC185                         ; 0x40f0 $C0E0 4C 85 C1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC0E3                                                                          ;
ldy      #$02                          ; 0x40f3 $C0E3 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x40f5 $C0E5 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x40f7 $C0E7 C9 14                    ;
bne      LC0EE                         ; 0x40f9 $C0E9 D0 03                    ;
lda      #$03                          ; 0x40fb $C0EB A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x40fd $C0ED 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC0EE                                                                          ;
lda      $0E                           ; 0x40fe $C0EE A5 0E                    ;
clc                                    ; 0x4100 $C0F0 18                       ;
adc      #$2C                          ; 0x4101 $C0F1 69 2C                    ;
sta      $0E                           ; 0x4103 $C0F3 85 0E                    ;
lda      $0F                           ; 0x4105 $C0F5 A5 0F                    ;
adc      #$00                          ; 0x4107 $C0F7 69 00                    ;
sta      $0F                           ; 0x4109 $C0F9 85 0F                    ;
lda      #$FE                          ; 0x410b $C0FB A9 FE                    ;;A = #$fe 1111_1110
bne      LC132                         ; 0x410d $C0FD D0 33                    ;
LC0FF                                                                          ;
ldy      #$01                          ; 0x410f $C0FF A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4111 $C101 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC108                         ; 0x4113 $C103 D0 03                    ;
lda      #$03                          ; 0x4115 $C105 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4117 $C107 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC108                                                                          ;
lda      $0E                           ; 0x4118 $C108 A5 0E                    ;
sec                                    ; 0x411a $C10A 38                       ;
sbc      #$01                          ; 0x411b $C10B E9 01                    ;
sta      $0E                           ; 0x411d $C10D 85 0E                    ;
lda      $0F                           ; 0x411f $C10F A5 0F                    ;
sbc      #$00                          ; 0x4121 $C111 E9 00                    ;
sta      $0F                           ; 0x4123 $C113 85 0F                    ;
lda      #$02                          ; 0x4125 $C115 A9 02                    ;;A = #$02 0000_0010
jmp      LC19F                         ; 0x4127 $C117 4C 9F C1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC11A                                                                          ;
ldy      #$02                          ; 0x412a $C11A A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x412c $C11C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC123                         ; 0x412e $C11E D0 03                    ;
lda      #$03                          ; 0x4130 $C120 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4132 $C122 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC123                                                                          ;
lda      $0E                           ; 0x4133 $C123 A5 0E                    ;
sec                                    ; 0x4135 $C125 38                       ;
sbc      #$16                          ; 0x4136 $C126 E9 16                    ;
sta      $0E                           ; 0x4138 $C128 85 0E                    ;
lda      $0F                           ; 0x413a $C12A A5 0F                    ;
sbc      #$00                          ; 0x413c $C12C E9 00                    ;
sta      $0F                           ; 0x413e $C12E 85 0F                    ;
lda      #$02                          ; 0x4140 $C130 A9 02                    ;;A = #$02 0000_0010
LC132                                                                          ;
clc                                    ; 0x4142 $C132 18                       ;
adc      $37                           ; 0x4143 $C133 65 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $93                           ; 0x4145 $C135 85 93                    ;
ldy      #$00                          ; 0x4147 $C137 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x4149 $C139 B1 0E                    ;
iny                                    ; 0x414b $C13B C8                       ;
ora      ($0E),y                       ; 0x414c $C13C 11 0E                    ;
and      #$C0                          ; 0x414e $C13E 29 C0                    ;;Keep Bits:1100_0000
bne      LC166                         ; 0x4150 $C140 D0 24                    ;
lda      ($0E),y                       ; 0x4152 $C142 B1 0E                    ;
beq      LC152                         ; 0x4154 $C144 F0 0C                    ;
cmp      $8F                           ; 0x4156 $C146 C5 8F                    ;
beq      LC152                         ; 0x4158 $C148 F0 08                    ;
cmp      $90                           ; 0x415a $C14A C5 90                    ;
beq      LC152                         ; 0x415c $C14C F0 04                    ;
cmp      #$09                          ; 0x415e $C14E C9 09                    ;
bmi      LC182                         ; 0x4160 $C150 30 30                    ;
LC152                                                                          ;
dey                                    ; 0x4162 $C152 88                       ;
lda      ($0E),y                       ; 0x4163 $C153 B1 0E                    ;
beq      LC163                         ; 0x4165 $C155 F0 0C                    ;
cmp      $8F                           ; 0x4167 $C157 C5 8F                    ;
beq      LC163                         ; 0x4169 $C159 F0 08                    ;
cmp      $90                           ; 0x416b $C15B C5 90                    ;
beq      LC163                         ; 0x416d $C15D F0 04                    ;
cmp      #$09                          ; 0x416f $C15F C9 09                    ;
bmi      LC182                         ; 0x4171 $C161 30 1F                    ;
LC163                                                                          ;
lda      #$00                          ; 0x4173 $C163 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4175 $C165 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC166                                                                          ;
lda      $93                           ; 0x4176 $C166 A5 93                    ;
ldy      #$02                          ; 0x4178 $C168 A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x417a $C16A D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC182                         ; 0x417c $C16C D0 14                    ;
dey                                    ; 0x417e $C16E 88                       ;
lda      $36                           ; 0x417f $C16F A5 36                    ;;player PosX, 0-14 (small meta-tile size)
sec                                    ; 0x4181 $C171 38                       ;
sbc      ($8B),y                       ; 0x4182 $C172 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bpl      LC17B                         ; 0x4184 $C174 10 05                    ;
eor      #$FF                          ; 0x4186 $C176 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x4188 $C178 18                       ;
adc      #$01                          ; 0x4189 $C179 69 01                    ;
LC17B                                                                          ;
cmp      #$02                          ; 0x418b $C17B C9 02                    ;
bpl      LC182                         ; 0x418d $C17D 10 03                    ;
lda      #$02                          ; 0x418f $C17F A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4191 $C181 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC182                                                                          ;
lda      #$01                          ; 0x4192 $C182 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4194 $C184 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC185                                                                          ;
ldy      #$01                          ; 0x4195 $C185 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4197 $C187 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x4199 $C189 C9 14                    ;
bne      LC190                         ; 0x419b $C18B D0 03                    ;
lda      #$03                          ; 0x419d $C18D A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x419f $C18F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC190                                                                          ;
lda      $0E                           ; 0x41a0 $C190 A5 0E                    ;
clc                                    ; 0x41a2 $C192 18                       ;
adc      #$02                          ; 0x41a3 $C193 69 02                    ;
sta      $0E                           ; 0x41a5 $C195 85 0E                    ;
lda      $0F                           ; 0x41a7 $C197 A5 0F                    ;
adc      #$00                          ; 0x41a9 $C199 69 00                    ;
sta      $0F                           ; 0x41ab $C19B 85 0F                    ;
lda      #$FE                          ; 0x41ad $C19D A9 FE                    ;;A = #$fe 1111_1110
LC19F                                                                          ;
clc                                    ; 0x41af $C19F 18                       ;
adc      $36                           ; 0x41b0 $C1A0 65 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $93                           ; 0x41b2 $C1A2 85 93                    ;
ldy      #$00                          ; 0x41b4 $C1A4 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x41b6 $C1A6 B1 0E                    ;
ldy      #$16                          ; 0x41b8 $C1A8 A0 16                    ;;Y = #$16 0001_0110
ora      ($0E),y                       ; 0x41ba $C1AA 11 0E                    ;
and      #$C0                          ; 0x41bc $C1AC 29 C0                    ;;Keep Bits:1100_0000
bne      LC1D5                         ; 0x41be $C1AE D0 25                    ;
lda      ($0E),y                       ; 0x41c0 $C1B0 B1 0E                    ;
beq      LC1C0                         ; 0x41c2 $C1B2 F0 0C                    ;
cmp      $8F                           ; 0x41c4 $C1B4 C5 8F                    ;
beq      LC1C0                         ; 0x41c6 $C1B6 F0 08                    ;
cmp      $90                           ; 0x41c8 $C1B8 C5 90                    ;
beq      LC1C0                         ; 0x41ca $C1BA F0 04                    ;
cmp      #$09                          ; 0x41cc $C1BC C9 09                    ;
bmi      LC1F1                         ; 0x41ce $C1BE 30 31                    ;
LC1C0                                                                          ;
ldy      #$00                          ; 0x41d0 $C1C0 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x41d2 $C1C2 B1 0E                    ;
beq      LC1D2                         ; 0x41d4 $C1C4 F0 0C                    ;
cmp      $8F                           ; 0x41d6 $C1C6 C5 8F                    ;
beq      LC1D2                         ; 0x41d8 $C1C8 F0 08                    ;
cmp      $90                           ; 0x41da $C1CA C5 90                    ;
beq      LC1D2                         ; 0x41dc $C1CC F0 04                    ;
cmp      #$09                          ; 0x41de $C1CE C9 09                    ;
bmi      LC1F1                         ; 0x41e0 $C1D0 30 1F                    ;
LC1D2                                                                          ;
lda      #$00                          ; 0x41e2 $C1D2 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x41e4 $C1D4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1D5                                                                          ;
lda      $93                           ; 0x41e5 $C1D5 A5 93                    ;
ldy      #$01                          ; 0x41e7 $C1D7 A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x41e9 $C1D9 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC1F1                         ; 0x41eb $C1DB D0 14                    ;
iny                                    ; 0x41ed $C1DD C8                       ;
lda      $37                           ; 0x41ee $C1DE A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0x41f0 $C1E0 38                       ;
sbc      ($8B),y                       ; 0x41f1 $C1E1 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bpl      LC1EA                         ; 0x41f3 $C1E3 10 05                    ;
eor      #$FF                          ; 0x41f5 $C1E5 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x41f7 $C1E7 18                       ;
adc      #$01                          ; 0x41f8 $C1E8 69 01                    ;
LC1EA                                                                          ;
cmp      #$02                          ; 0x41fa $C1EA C9 02                    ;
bpl      LC1F1                         ; 0x41fc $C1EC 10 03                    ;
lda      #$02                          ; 0x41fe $C1EE A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4200 $C1F0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1F1                                                                          ;
lda      #$01                          ; 0x4201 $C1F1 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4203 $C1F3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1F4                                                                          ;
lda      ($8B),y                       ; 0x4204 $C1F4 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x4206 $C1F6 AA                       ;
beq      LC202                         ; 0x4207 $C1F7 F0 09                    ;
dex                                    ; 0x4209 $C1F9 CA                       ;
beq      LC21F                         ; 0x420a $C1FA F0 23                    ;
dex                                    ; 0x420c $C1FC CA                       ;
bne      LC239                         ; 0x420d $C1FD D0 3A                    ;
jmp      LC11A                         ; 0x420f $C1FF 4C 1A C1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC202                                                                          ;
LC203     = * + $0001                                                          ;
ldy      #$02                          ; 0x4212 $C202 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x4214 $C204 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x4216 $C206 C9 15                    ;
bne      LC20D                         ; 0x4218 $C208 D0 03                    ;
lda      #$03                          ; 0x421a $C20A A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x421c $C20C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC20D                                                                          ;
lda      $0E                           ; 0x421d $C20D A5 0E                    ;
clc                                    ; 0x421f $C20F 18                       ;
adc      #$16                          ; 0x4220 $C210 69 16                    ;
sta      $0E                           ; 0x4222 $C212 85 0E                    ;
lda      $0F                           ; 0x4224 $C214 A5 0F                    ;
adc      #$00                          ; 0x4226 $C216 69 00                    ;
sta      $0F                           ; 0x4228 $C218 85 0F                    ;
lda      #$FF                          ; 0x422a $C21A A9 FF                    ;;A = #$ff 1111_1111
jmp      LC132                         ; 0x422c $C21C 4C 32 C1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC21F                                                                          ;
ldy      #$01                          ; 0x422f $C21F A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4231 $C221 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC228                         ; 0x4233 $C223 D0 03                    ;
lda      #$03                          ; 0x4235 $C225 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4237 $C227 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC228                                                                          ;
lda      $0E                           ; 0x4238 $C228 A5 0E                    ;
sec                                    ; 0x423a $C22A 38                       ;
sbc      #$01                          ; 0x423b $C22B E9 01                    ;
sta      $0E                           ; 0x423d $C22D 85 0E                    ;
lda      $0F                           ; 0x423f $C22F A5 0F                    ;
sbc      #$00                          ; 0x4241 $C231 E9 00                    ;
sta      $0F                           ; 0x4243 $C233 85 0F                    ;
lda      #$02                          ; 0x4245 $C235 A9 02                    ;;A = #$02 0000_0010
bne      LC253                         ; 0x4247 $C237 D0 1A                    ;
LC239                                                                          ;
ldy      #$01                          ; 0x4249 $C239 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x424b $C23B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x424d $C23D C9 14                    ;
bne      LC244                         ; 0x424f $C23F D0 03                    ;
lda      #$03                          ; 0x4251 $C241 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4253 $C243 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC244                                                                          ;
lda      $0E                           ; 0x4254 $C244 A5 0E                    ;
clc                                    ; 0x4256 $C246 18                       ;
adc      #$02                          ; 0x4257 $C247 69 02                    ;
sta      $0E                           ; 0x4259 $C249 85 0E                    ;
lda      $0F                           ; 0x425b $C24B A5 0F                    ;
adc      #$00                          ; 0x425d $C24D 69 00                    ;
sta      $0F                           ; 0x425f $C24F 85 0F                    ;
lda      #$FE                          ; 0x4261 $C251 A9 FE                    ;;A = #$fe 1111_1110
LC253                                                                          ;
clc                                    ; 0x4263 $C253 18                       ;
adc      $36                           ; 0x4264 $C254 65 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $93                           ; 0x4266 $C256 85 93                    ;
ldy      #$00                          ; 0x4268 $C258 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x426a $C25A B1 0E                    ;
and      #$C0                          ; 0x426c $C25C 29 C0                    ;;Keep Bits:1100_0000
bne      LC273                         ; 0x426e $C25E D0 13                    ;
lda      ($0E),y                       ; 0x4270 $C260 B1 0E                    ;
beq      LC270                         ; 0x4272 $C262 F0 0C                    ;
cmp      $8F                           ; 0x4274 $C264 C5 8F                    ;
beq      LC270                         ; 0x4276 $C266 F0 08                    ;
cmp      $90                           ; 0x4278 $C268 C5 90                    ;
beq      LC270                         ; 0x427a $C26A F0 04                    ;
cmp      #$09                          ; 0x427c $C26C C9 09                    ;
bmi      LC28A                         ; 0x427e $C26E 30 1A                    ;
LC270                                                                          ;
lda      #$00                          ; 0x4280 $C270 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4282 $C272 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC273                                                                          ;
lda      $93                           ; 0x4283 $C273 A5 93                    ;
ldy      #$01                          ; 0x4285 $C275 A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x4287 $C277 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC28A                         ; 0x4289 $C279 D0 0F                    ;
iny                                    ; 0x428b $C27B C8                       ;
lda      $37                           ; 0x428c $C27C A5 37                    ;;player PosY, 0-14 (small meta-tile size)
sec                                    ; 0x428e $C27E 38                       ;
sbc      ($8B),y                       ; 0x428f $C27F F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC287                         ; 0x4291 $C281 F0 04                    ;
cmp      #$FF                          ; 0x4293 $C283 C9 FF                    ;
bne      LC28A                         ; 0x4295 $C285 D0 03                    ;
LC287                                                                          ;
lda      #$02                          ; 0x4297 $C287 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4299 $C289 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC28A                                                                          ;
lda      #$01                          ; 0x429a $C28A A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x429c $C28C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC28D                                                                          ;
lda      ($8B),y                       ; 0x429d $C28D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x429f $C28F AA                       ;
beq      LC29D                         ; 0x42a0 $C290 F0 0B                    ;
dex                                    ; 0x42a2 $C292 CA                       ;
bne      LC298                         ; 0x42a3 $C293 D0 03                    ;
jmp      LC0FF                         ; 0x42a5 $C295 4C FF C0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC298                                                                          ;
dex                                    ; 0x42a8 $C298 CA                       ;
beq      LC2B9                         ; 0x42a9 $C299 F0 1E                    ;
bne      LC30B                         ; 0x42ab $C29B D0 6E                    ;
LC29D                                                                          ;
ldy      #$02                          ; 0x42ad $C29D A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x42af $C29F B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x42b1 $C2A1 C9 14                    ;
bne      LC2A8                         ; 0x42b3 $C2A3 D0 03                    ;
lda      #$03                          ; 0x42b5 $C2A5 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x42b7 $C2A7 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2A8                                                                          ;
lda      $0E                           ; 0x42b8 $C2A8 A5 0E                    ;
clc                                    ; 0x42ba $C2AA 18                       ;
adc      #$2C                          ; 0x42bb $C2AB 69 2C                    ;
sta      $0E                           ; 0x42bd $C2AD 85 0E                    ;
lda      $0F                           ; 0x42bf $C2AF A5 0F                    ;
adc      #$00                          ; 0x42c1 $C2B1 69 00                    ;
sta      $0F                           ; 0x42c3 $C2B3 85 0F                    ;
lda      #$FE                          ; 0x42c5 $C2B5 A9 FE                    ;;A = #$fe 1111_1110
bne      LC2D1                         ; 0x42c7 $C2B7 D0 18                    ;
LC2B9                                                                          ;
ldy      #$02                          ; 0x42c9 $C2B9 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x42cb $C2BB B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC2C2                         ; 0x42cd $C2BD D0 03                    ;
lda      #$03                          ; 0x42cf $C2BF A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x42d1 $C2C1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2C2                                                                          ;
lda      $0E                           ; 0x42d2 $C2C2 A5 0E                    ;
sec                                    ; 0x42d4 $C2C4 38                       ;
sbc      #$16                          ; 0x42d5 $C2C5 E9 16                    ;
sta      $0E                           ; 0x42d7 $C2C7 85 0E                    ;
lda      $0F                           ; 0x42d9 $C2C9 A5 0F                    ;
sbc      #$00                          ; 0x42db $C2CB E9 00                    ;
sta      $0F                           ; 0x42dd $C2CD 85 0F                    ;
lda      #$02                          ; 0x42df $C2CF A9 02                    ;;A = #$02 0000_0010
LC2D1                                                                          ;
clc                                    ; 0x42e1 $C2D1 18                       ;
adc      $37                           ; 0x42e2 $C2D2 65 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $93                           ; 0x42e4 $C2D4 85 93                    ;
ldy      #$00                          ; 0x42e6 $C2D6 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x42e8 $C2D8 B1 0E                    ;
and      #$C0                          ; 0x42ea $C2DA 29 C0                    ;;Keep Bits:1100_0000
bne      LC2F1                         ; 0x42ec $C2DC D0 13                    ;
lda      ($0E),y                       ; 0x42ee $C2DE B1 0E                    ;
beq      LC2EE                         ; 0x42f0 $C2E0 F0 0C                    ;
cmp      $8F                           ; 0x42f2 $C2E2 C5 8F                    ;
beq      LC2EE                         ; 0x42f4 $C2E4 F0 08                    ;
cmp      $90                           ; 0x42f6 $C2E6 C5 90                    ;
beq      LC2EE                         ; 0x42f8 $C2E8 F0 04                    ;
cmp      #$09                          ; 0x42fa $C2EA C9 09                    ;
bmi      LC308                         ; 0x42fc $C2EC 30 1A                    ;
LC2EE                                                                          ;
lda      #$00                          ; 0x42fe $C2EE A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4300 $C2F0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2F1                                                                          ;
lda      $93                           ; 0x4301 $C2F1 A5 93                    ;
ldy      #$02                          ; 0x4303 $C2F3 A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x4305 $C2F5 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC308                         ; 0x4307 $C2F7 D0 0F                    ;
lda      $36                           ; 0x4309 $C2F9 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
dey                                    ; 0x430b $C2FB 88                       ;
sec                                    ; 0x430c $C2FC 38                       ;
sbc      ($8B),y                       ; 0x430d $C2FD F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC305                         ; 0x430f $C2FF F0 04                    ;
cmp      #$FF                          ; 0x4311 $C301 C9 FF                    ;
bne      LC308                         ; 0x4313 $C303 D0 03                    ;
LC305                                                                          ;
lda      #$02                          ; 0x4315 $C305 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4317 $C307 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC308                                                                          ;
lda      #$01                          ; 0x4318 $C308 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x431a $C30A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC30B                                                                          ;
ldy      #$01                          ; 0x431b $C30B A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x431d $C30D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x431f $C30F C9 15                    ;
bne      LC316                         ; 0x4321 $C311 D0 03                    ;
lda      #$03                          ; 0x4323 $C313 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4325 $C315 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC316                                                                          ;
inc      $0E                           ; 0x4326 $C316 E6 0E                    ;
bne      LC31C                         ; 0x4328 $C318 D0 02                    ;
inc      $0F                           ; 0x432a $C31A E6 0F                    ;
LC31C                                                                          ;
lda      #$FF                          ; 0x432c $C31C A9 FF                    ;;A = #$ff 1111_1111
jmp      LC19F                         ; 0x432e $C31E 4C 9F C1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC321                                                                          ;
lda      ($8B),y                       ; 0x4331 $C321 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x4333 $C323 AA                       ;
beq      LC32F                         ; 0x4334 $C324 F0 09                    ;
dex                                    ; 0x4336 $C326 CA                       ;
beq      LC34B                         ; 0x4337 $C327 F0 22                    ;
dex                                    ; 0x4339 $C329 CA                       ;
beq      LC365                         ; 0x433a $C32A F0 39                    ;
jmp      LC3B7                         ; 0x433c $C32C 4C B7 C3                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC32F                                                                          ;
ldy      #$02                          ; 0x433f $C32F A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x4341 $C331 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x4343 $C333 C9 14                    ;
bne      LC33A                         ; 0x4345 $C335 D0 03                    ;
lda      #$03                          ; 0x4347 $C337 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4349 $C339 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC33A                                                                          ;
lda      $0E                           ; 0x434a $C33A A5 0E                    ;
clc                                    ; 0x434c $C33C 18                       ;
adc      #$2C                          ; 0x434d $C33D 69 2C                    ;
sta      $0E                           ; 0x434f $C33F 85 0E                    ;
lda      $0F                           ; 0x4351 $C341 A5 0F                    ;
adc      #$00                          ; 0x4353 $C343 69 00                    ;
sta      $0F                           ; 0x4355 $C345 85 0F                    ;
lda      #$FE                          ; 0x4357 $C347 A9 FE                    ;;A = #$fe 1111_1110
bne      LC37D                         ; 0x4359 $C349 D0 32                    ;
LC34B                                                                          ;
ldy      #$01                          ; 0x435b $C34B A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x435d $C34D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC354                         ; 0x435f $C34F D0 03                    ;
lda      #$03                          ; 0x4361 $C351 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4363 $C353 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC354                                                                          ;
lda      $0E                           ; 0x4364 $C354 A5 0E                    ;
sec                                    ; 0x4366 $C356 38                       ;
sbc      #$01                          ; 0x4367 $C357 E9 01                    ;
sta      $0E                           ; 0x4369 $C359 85 0E                    ;
lda      $0F                           ; 0x436b $C35B A5 0F                    ;
sbc      #$00                          ; 0x436d $C35D E9 00                    ;
sta      $0F                           ; 0x436f $C35F 85 0F                    ;
lda      #$02                          ; 0x4371 $C361 A9 02                    ;;A = #$02 0000_0010
bne      LC3D1                         ; 0x4373 $C363 D0 6C                    ;
LC365                                                                          ;
ldy      #$02                          ; 0x4375 $C365 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x4377 $C367 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC36E                         ; 0x4379 $C369 D0 03                    ;
lda      #$03                          ; 0x437b $C36B A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x437d $C36D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC36E                                                                          ;
lda      $0E                           ; 0x437e $C36E A5 0E                    ;
sec                                    ; 0x4380 $C370 38                       ;
sbc      #$16                          ; 0x4381 $C371 E9 16                    ;
sta      $0E                           ; 0x4383 $C373 85 0E                    ;
lda      $0F                           ; 0x4385 $C375 A5 0F                    ;
sbc      #$00                          ; 0x4387 $C377 E9 00                    ;
sta      $0F                           ; 0x4389 $C379 85 0F                    ;
lda      #$02                          ; 0x438b $C37B A9 02                    ;;A = #$02 0000_0010
LC37D                                                                          ;
clc                                    ; 0x438d $C37D 18                       ;
adc      $37                           ; 0x438e $C37E 65 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $93                           ; 0x4390 $C380 85 93                    ;
ldy      #$00                          ; 0x4392 $C382 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x4394 $C384 B1 0E                    ;
iny                                    ; 0x4396 $C386 C8                       ;
ora      ($0E),y                       ; 0x4397 $C387 11 0E                    ;
sta      $08                           ; 0x4399 $C389 85 08                    ;;save calc'd attack strength to $08 ?
and      #$C0                          ; 0x439b $C38B 29 C0                    ;;Keep Bits:1100_0000
beq      LC3B4                         ; 0x439d $C38D F0 25                    ;
lda      $08                           ; 0x439f $C38F A5 08                    ;;save calc'd attack strength to $08 ?
and      #$40                          ; 0x43a1 $C391 29 40                    ;;Keep Bits:0100_0000
beq      LC398                         ; 0x43a3 $C393 F0 03                    ;
lda      #$01                          ; 0x43a5 $C395 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x43a7 $C397 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC398                                                                          ;
lda      $93                           ; 0x43a8 $C398 A5 93                    ;
ldy      #$02                          ; 0x43aa $C39A A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x43ac $C39C D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC3B4                         ; 0x43ae $C39E D0 14                    ;
lda      $36                           ; 0x43b0 $C3A0 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
dey                                    ; 0x43b2 $C3A2 88                       ;
sec                                    ; 0x43b3 $C3A3 38                       ;
sbc      ($8B),y                       ; 0x43b4 $C3A4 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bpl      LC3AD                         ; 0x43b6 $C3A6 10 05                    ;
eor      #$FF                          ; 0x43b8 $C3A8 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x43ba $C3AA 18                       ;
adc      #$01                          ; 0x43bb $C3AB 69 01                    ;
LC3AD                                                                          ;
cmp      #$02                          ; 0x43bd $C3AD C9 02                    ;
bpl      LC3B4                         ; 0x43bf $C3AF 10 03                    ;
lda      #$02                          ; 0x43c1 $C3B1 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x43c3 $C3B3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3B4                                                                          ;
lda      #$00                          ; 0x43c4 $C3B4 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x43c6 $C3B6 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3B7                                                                          ;
ldy      #$01                          ; 0x43c7 $C3B7 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x43c9 $C3B9 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x43cb $C3BB C9 14                    ;
bne      LC3C2                         ; 0x43cd $C3BD D0 03                    ;
lda      #$03                          ; 0x43cf $C3BF A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x43d1 $C3C1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3C2                                                                          ;
lda      $0E                           ; 0x43d2 $C3C2 A5 0E                    ;
clc                                    ; 0x43d4 $C3C4 18                       ;
adc      #$02                          ; 0x43d5 $C3C5 69 02                    ;
sta      $0E                           ; 0x43d7 $C3C7 85 0E                    ;
lda      $0F                           ; 0x43d9 $C3C9 A5 0F                    ;
adc      #$00                          ; 0x43db $C3CB 69 00                    ;
sta      $0F                           ; 0x43dd $C3CD 85 0F                    ;
lda      #$FE                          ; 0x43df $C3CF A9 FE                    ;;A = #$fe 1111_1110
LC3D1                                                                          ;
clc                                    ; 0x43e1 $C3D1 18                       ;
adc      $36                           ; 0x43e2 $C3D2 65 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $93                           ; 0x43e4 $C3D4 85 93                    ;
ldy      #$00                          ; 0x43e6 $C3D6 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x43e8 $C3D8 B1 0E                    ;
ldy      #$16                          ; 0x43ea $C3DA A0 16                    ;;Y = #$16 0001_0110
ora      ($0E),y                       ; 0x43ec $C3DC 11 0E                    ;
sta      $08                           ; 0x43ee $C3DE 85 08                    ;;save calc'd attack strength to $08 ?
and      #$C0                          ; 0x43f0 $C3E0 29 C0                    ;;Keep Bits:1100_0000
beq      LC409                         ; 0x43f2 $C3E2 F0 25                    ;
lda      $08                           ; 0x43f4 $C3E4 A5 08                    ;;save calc'd attack strength to $08 ?
and      #$40                          ; 0x43f6 $C3E6 29 40                    ;;Keep Bits:0100_0000
beq      LC3ED                         ; 0x43f8 $C3E8 F0 03                    ;
lda      #$01                          ; 0x43fa $C3EA A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x43fc $C3EC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3ED                                                                          ;
lda      $93                           ; 0x43fd $C3ED A5 93                    ;
ldy      #$01                          ; 0x43ff $C3EF A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x4401 $C3F1 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC409                         ; 0x4403 $C3F3 D0 14                    ;
lda      $37                           ; 0x4405 $C3F5 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
iny                                    ; 0x4407 $C3F7 C8                       ;
sec                                    ; 0x4408 $C3F8 38                       ;
sbc      ($8B),y                       ; 0x4409 $C3F9 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bpl      LC402                         ; 0x440b $C3FB 10 05                    ;
eor      #$FF                          ; 0x440d $C3FD 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x440f $C3FF 18                       ;
adc      #$01                          ; 0x4410 $C400 69 01                    ;
LC402                                                                          ;
cmp      #$02                          ; 0x4412 $C402 C9 02                    ;
bpl      LC409                         ; 0x4414 $C404 10 03                    ;
lda      #$02                          ; 0x4416 $C406 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4418 $C408 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC409                                                                          ;
lda      #$00                          ; 0x4419 $C409 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x441b $C40B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC40C                                                                          ;
lda      ($8B),y                       ; 0x441c $C40C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x441e $C40E AA                       ;
beq      LC41A                         ; 0x441f $C40F F0 09                    ;
dex                                    ; 0x4421 $C411 CA                       ;
beq      LC436                         ; 0x4422 $C412 F0 22                    ;
dex                                    ; 0x4424 $C414 CA                       ;
beq      LC450                         ; 0x4425 $C415 F0 39                    ;
jmp      LC4A2                         ; 0x4427 $C417 4C A2 C4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC41A                                                                          ;
ldy      #$02                          ; 0x442a $C41A A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x442c $C41C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x442e $C41E C9 15                    ;
bne      LC425                         ; 0x4430 $C420 D0 03                    ;
lda      #$03                          ; 0x4432 $C422 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4434 $C424 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC425                                                                          ;
lda      $0E                           ; 0x4435 $C425 A5 0E                    ;
clc                                    ; 0x4437 $C427 18                       ;
adc      #$16                          ; 0x4438 $C428 69 16                    ;
sta      $0E                           ; 0x443a $C42A 85 0E                    ;
lda      $0F                           ; 0x443c $C42C A5 0F                    ;
adc      #$00                          ; 0x443e $C42E 69 00                    ;
sta      $0F                           ; 0x4440 $C430 85 0F                    ;
lda      #$FF                          ; 0x4442 $C432 A9 FF                    ;;A = #$ff 1111_1111
bne      LC468                         ; 0x4444 $C434 D0 32                    ;
LC436                                                                          ;
ldy      #$01                          ; 0x4446 $C436 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4448 $C438 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC43F                         ; 0x444a $C43A D0 03                    ;
lda      #$03                          ; 0x444c $C43C A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x444e $C43E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC43F                                                                          ;
lda      $0E                           ; 0x444f $C43F A5 0E                    ;
sec                                    ; 0x4451 $C441 38                       ;
sbc      #$01                          ; 0x4452 $C442 E9 01                    ;
sta      $0E                           ; 0x4454 $C444 85 0E                    ;
lda      $0F                           ; 0x4456 $C446 A5 0F                    ;
sbc      #$00                          ; 0x4458 $C448 E9 00                    ;
sta      $0F                           ; 0x445a $C44A 85 0F                    ;
lda      #$02                          ; 0x445c $C44C A9 02                    ;;A = #$02 0000_0010
bne      LC4BC                         ; 0x445e $C44E D0 6C                    ;
LC450                                                                          ;
ldy      #$02                          ; 0x4460 $C450 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x4462 $C452 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC459                         ; 0x4464 $C454 D0 03                    ;
lda      #$03                          ; 0x4466 $C456 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4468 $C458 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC459                                                                          ;
lda      $0E                           ; 0x4469 $C459 A5 0E                    ;
sec                                    ; 0x446b $C45B 38                       ;
sbc      #$16                          ; 0x446c $C45C E9 16                    ;
sta      $0E                           ; 0x446e $C45E 85 0E                    ;
lda      $0F                           ; 0x4470 $C460 A5 0F                    ;
sbc      #$00                          ; 0x4472 $C462 E9 00                    ;
sta      $0F                           ; 0x4474 $C464 85 0F                    ;
lda      #$02                          ; 0x4476 $C466 A9 02                    ;;A = #$02 0000_0010
LC468                                                                          ;
clc                                    ; 0x4478 $C468 18                       ;
adc      $37                           ; 0x4479 $C469 65 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $93                           ; 0x447b $C46B 85 93                    ;
ldy      #$00                          ; 0x447d $C46D A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x447f $C46F B1 0E                    ;
iny                                    ; 0x4481 $C471 C8                       ;
ora      ($0E),y                       ; 0x4482 $C472 11 0E                    ;
sta      $08                           ; 0x4484 $C474 85 08                    ;;save calc'd attack strength to $08 ?
and      #$C0                          ; 0x4486 $C476 29 C0                    ;;Keep Bits:1100_0000
beq      LC49F                         ; 0x4488 $C478 F0 25                    ;
lda      $08                           ; 0x448a $C47A A5 08                    ;;save calc'd attack strength to $08 ?
and      #$40                          ; 0x448c $C47C 29 40                    ;;Keep Bits:0100_0000
beq      LC483                         ; 0x448e $C47E F0 03                    ;
lda      #$01                          ; 0x4490 $C480 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4492 $C482 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC483                                                                          ;
lda      $93                           ; 0x4493 $C483 A5 93                    ;
ldy      #$02                          ; 0x4495 $C485 A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x4497 $C487 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC49F                         ; 0x4499 $C489 D0 14                    ;
lda      $36                           ; 0x449b $C48B A5 36                    ;;player PosX, 0-14 (small meta-tile size)
dey                                    ; 0x449d $C48D 88                       ;
sec                                    ; 0x449e $C48E 38                       ;
sbc      ($8B),y                       ; 0x449f $C48F F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bpl      LC498                         ; 0x44a1 $C491 10 05                    ;
eor      #$FF                          ; 0x44a3 $C493 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x44a5 $C495 18                       ;
adc      #$01                          ; 0x44a6 $C496 69 01                    ;
LC498                                                                          ;
cmp      #$02                          ; 0x44a8 $C498 C9 02                    ;
bpl      LC49F                         ; 0x44aa $C49A 10 03                    ;
lda      #$02                          ; 0x44ac $C49C A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x44ae $C49E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC49F                                                                          ;
lda      #$00                          ; 0x44af $C49F A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x44b1 $C4A1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC4A2                                                                          ;
ldy      #$01                          ; 0x44b2 $C4A2 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x44b4 $C4A4 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$14                          ; 0x44b6 $C4A6 C9 14                    ;
bne      LC4AD                         ; 0x44b8 $C4A8 D0 03                    ;
lda      #$03                          ; 0x44ba $C4AA A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x44bc $C4AC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC4AD                                                                          ;
lda      $0E                           ; 0x44bd $C4AD A5 0E                    ;
clc                                    ; 0x44bf $C4AF 18                       ;
adc      #$02                          ; 0x44c0 $C4B0 69 02                    ;
sta      $0E                           ; 0x44c2 $C4B2 85 0E                    ;
lda      $0F                           ; 0x44c4 $C4B4 A5 0F                    ;
adc      #$00                          ; 0x44c6 $C4B6 69 00                    ;
sta      $0F                           ; 0x44c8 $C4B8 85 0F                    ;
lda      #$FE                          ; 0x44ca $C4BA A9 FE                    ;;A = #$fe 1111_1110
LC4BC                                                                          ;
clc                                    ; 0x44cc $C4BC 18                       ;
adc      $36                           ; 0x44cd $C4BD 65 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $93                           ; 0x44cf $C4BF 85 93                    ;
ldy      #$00                          ; 0x44d1 $C4C1 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x44d3 $C4C3 B1 0E                    ;
sta      $08                           ; 0x44d5 $C4C5 85 08                    ;;save calc'd attack strength to $08 ?
and      #$C0                          ; 0x44d7 $C4C7 29 C0                    ;;Keep Bits:1100_0000
beq      LC4EB                         ; 0x44d9 $C4C9 F0 20                    ;
lda      $08                           ; 0x44db $C4CB A5 08                    ;;save calc'd attack strength to $08 ?
and      #$40                          ; 0x44dd $C4CD 29 40                    ;;Keep Bits:0100_0000
beq      LC4D4                         ; 0x44df $C4CF F0 03                    ;
lda      #$01                          ; 0x44e1 $C4D1 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x44e3 $C4D3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC4D4                                                                          ;
lda      $93                           ; 0x44e4 $C4D4 A5 93                    ;
ldy      #$01                          ; 0x44e6 $C4D6 A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x44e8 $C4D8 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC4EB                         ; 0x44ea $C4DA D0 0F                    ;
lda      $37                           ; 0x44ec $C4DC A5 37                    ;;player PosY, 0-14 (small meta-tile size)
iny                                    ; 0x44ee $C4DE C8                       ;
sec                                    ; 0x44ef $C4DF 38                       ;
sbc      ($8B),y                       ; 0x44f0 $C4E0 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC4E8                         ; 0x44f2 $C4E2 F0 04                    ;
cmp      #$FF                          ; 0x44f4 $C4E4 C9 FF                    ;
bne      LC4EB                         ; 0x44f6 $C4E6 D0 03                    ;
LC4E8                                                                          ;
lda      #$02                          ; 0x44f8 $C4E8 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x44fa $C4EA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC4EB                                                                          ;
lda      #$00                          ; 0x44fb $C4EB A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x44fd $C4ED 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC4EE                                                                          ;
lda      ($8B),y                       ; 0x44fe $C4EE B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x4500 $C4F0 AA                       ;
beq      LC4FC                         ; 0x4501 $C4F1 F0 09                    ;
dex                                    ; 0x4503 $C4F3 CA                       ;
beq      LC518                         ; 0x4504 $C4F4 F0 22                    ;
dex                                    ; 0x4506 $C4F6 CA                       ;
beq      LC532                         ; 0x4507 $C4F7 F0 39                    ;
jmp      LC57C                         ; 0x4509 $C4F9 4C 7C C5                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC4FC                                                                          ;
ldy      #$02                          ; 0x450c $C4FC A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x450e $C4FE B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x4510 $C500 C9 15                    ;
bne      LC507                         ; 0x4512 $C502 D0 03                    ;
lda      #$03                          ; 0x4514 $C504 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4516 $C506 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC507                                                                          ;
lda      $0E                           ; 0x4517 $C507 A5 0E                    ;
clc                                    ; 0x4519 $C509 18                       ;
adc      #$16                          ; 0x451a $C50A 69 16                    ;
sta      $0E                           ; 0x451c $C50C 85 0E                    ;
lda      $0F                           ; 0x451e $C50E A5 0F                    ;
adc      #$00                          ; 0x4520 $C510 69 00                    ;
sta      $0F                           ; 0x4522 $C512 85 0F                    ;
lda      #$FF                          ; 0x4524 $C514 A9 FF                    ;;A = #$ff 1111_1111
bne      LC54A                         ; 0x4526 $C516 D0 32                    ;
LC518                                                                          ;
ldy      #$01                          ; 0x4528 $C518 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x452a $C51A B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC521                         ; 0x452c $C51C D0 03                    ;
lda      #$03                          ; 0x452e $C51E A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4530 $C520 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC521                                                                          ;
lda      $0E                           ; 0x4531 $C521 A5 0E                    ;
sec                                    ; 0x4533 $C523 38                       ;
sbc      #$01                          ; 0x4534 $C524 E9 01                    ;
sta      $0E                           ; 0x4536 $C526 85 0E                    ;
lda      $0F                           ; 0x4538 $C528 A5 0F                    ;
sbc      #$00                          ; 0x453a $C52A E9 00                    ;
sta      $0F                           ; 0x453c $C52C 85 0F                    ;
lda      #$02                          ; 0x453e $C52E A9 02                    ;;A = #$02 0000_0010
bne      LC58F                         ; 0x4540 $C530 D0 5D                    ;
LC532                                                                          ;
ldy      #$02                          ; 0x4542 $C532 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x4544 $C534 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC53B                         ; 0x4546 $C536 D0 03                    ;
lda      #$03                          ; 0x4548 $C538 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x454a $C53A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC53B                                                                          ;
lda      $0E                           ; 0x454b $C53B A5 0E                    ;
sec                                    ; 0x454d $C53D 38                       ;
sbc      #$16                          ; 0x454e $C53E E9 16                    ;
sta      $0E                           ; 0x4550 $C540 85 0E                    ;
lda      $0F                           ; 0x4552 $C542 A5 0F                    ;
sbc      #$00                          ; 0x4554 $C544 E9 00                    ;
sta      $0F                           ; 0x4556 $C546 85 0F                    ;
lda      #$02                          ; 0x4558 $C548 A9 02                    ;;A = #$02 0000_0010
LC54A                                                                          ;
clc                                    ; 0x455a $C54A 18                       ;
adc      $37                           ; 0x455b $C54B 65 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $93                           ; 0x455d $C54D 85 93                    ;
ldy      #$00                          ; 0x455f $C54F A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x4561 $C551 B1 0E                    ;
sta      $08                           ; 0x4563 $C553 85 08                    ;;save calc'd attack strength to $08 ?
and      #$C0                          ; 0x4565 $C555 29 C0                    ;;Keep Bits:1100_0000
beq      LC579                         ; 0x4567 $C557 F0 20                    ;
lda      $08                           ; 0x4569 $C559 A5 08                    ;;save calc'd attack strength to $08 ?
and      #$40                          ; 0x456b $C55B 29 40                    ;;Keep Bits:0100_0000
beq      LC562                         ; 0x456d $C55D F0 03                    ;
lda      #$01                          ; 0x456f $C55F A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4571 $C561 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC562                                                                          ;
lda      $93                           ; 0x4572 $C562 A5 93                    ;
ldy      #$02                          ; 0x4574 $C564 A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x4576 $C566 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC579                         ; 0x4578 $C568 D0 0F                    ;
lda      $36                           ; 0x457a $C56A A5 36                    ;;player PosX, 0-14 (small meta-tile size)
dey                                    ; 0x457c $C56C 88                       ;
sec                                    ; 0x457d $C56D 38                       ;
sbc      ($8B),y                       ; 0x457e $C56E F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC576                         ; 0x4580 $C570 F0 04                    ;
cmp      #$FF                          ; 0x4582 $C572 C9 FF                    ;
bne      LC579                         ; 0x4584 $C574 D0 03                    ;
LC576                                                                          ;
lda      #$02                          ; 0x4586 $C576 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4588 $C578 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC579                                                                          ;
lda      #$00                          ; 0x4589 $C579 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x458b $C57B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC57C                                                                          ;
ldy      #$01                          ; 0x458c $C57C A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x458e $C57E B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x4590 $C580 C9 15                    ;
bne      LC587                         ; 0x4592 $C582 D0 03                    ;
lda      #$03                          ; 0x4594 $C584 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4596 $C586 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC587                                                                          ;
inc      $0E                           ; 0x4597 $C587 E6 0E                    ;
bne      LC58D                         ; 0x4599 $C589 D0 02                    ;
inc      $0F                           ; 0x459b $C58B E6 0F                    ;
LC58D                                                                          ;
lda      #$FF                          ; 0x459d $C58D A9 FF                    ;;A = #$ff 1111_1111
LC58F                                                                          ;
clc                                    ; 0x459f $C58F 18                       ;
adc      $36                           ; 0x45a0 $C590 65 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $93                           ; 0x45a2 $C592 85 93                    ;
ldy      #$00                          ; 0x45a4 $C594 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x45a6 $C596 B1 0E                    ;
sta      $08                           ; 0x45a8 $C598 85 08                    ;;save calc'd attack strength to $08 ?
and      #$C0                          ; 0x45aa $C59A 29 C0                    ;;Keep Bits:1100_0000
beq      LC5BE                         ; 0x45ac $C59C F0 20                    ;
lda      $08                           ; 0x45ae $C59E A5 08                    ;;save calc'd attack strength to $08 ?
and      #$40                          ; 0x45b0 $C5A0 29 40                    ;;Keep Bits:0100_0000
beq      LC5A7                         ; 0x45b2 $C5A2 F0 03                    ;
lda      #$01                          ; 0x45b4 $C5A4 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x45b6 $C5A6 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC5A7                                                                          ;
lda      $93                           ; 0x45b7 $C5A7 A5 93                    ;
ldy      #$01                          ; 0x45b9 $C5A9 A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x45bb $C5AB D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC5BE                         ; 0x45bd $C5AD D0 0F                    ;
lda      $37                           ; 0x45bf $C5AF A5 37                    ;;player PosY, 0-14 (small meta-tile size)
iny                                    ; 0x45c1 $C5B1 C8                       ;
sec                                    ; 0x45c2 $C5B2 38                       ;
sbc      ($8B),y                       ; 0x45c3 $C5B3 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC5BB                         ; 0x45c5 $C5B5 F0 04                    ;
cmp      #$FF                          ; 0x45c7 $C5B7 C9 FF                    ;
bne      LC5BE                         ; 0x45c9 $C5B9 D0 03                    ;
LC5BB                                                                          ;
lda      #$02                          ; 0x45cb $C5BB A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x45cd $C5BD 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC5BE                                                                          ;
lda      #$00                          ; 0x45ce $C5BE A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x45d0 $C5C0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC5C1                                                                          ;
lda      ($8B),y                       ; 0x45d1 $C5C1 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x45d3 $C5C3 AA                       ;
beq      LC5CE                         ; 0x45d4 $C5C4 F0 08                    ;
dex                                    ; 0x45d6 $C5C6 CA                       ;
beq      LC5EA                         ; 0x45d7 $C5C7 F0 21                    ;
dex                                    ; 0x45d9 $C5C9 CA                       ;
beq      LC604                         ; 0x45da $C5CA F0 38                    ;
bne      LC64A                         ; 0x45dc $C5CC D0 7C                    ;
LC5CE                                                                          ;
ldy      #$02                          ; 0x45de $C5CE A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x45e0 $C5D0 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x45e2 $C5D2 C9 15                    ;
bne      LC5D9                         ; 0x45e4 $C5D4 D0 03                    ;
lda      #$03                          ; 0x45e6 $C5D6 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x45e8 $C5D8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC5D9                                                                          ;
lda      $0E                           ; 0x45e9 $C5D9 A5 0E                    ;
clc                                    ; 0x45eb $C5DB 18                       ;
adc      #$16                          ; 0x45ec $C5DC 69 16                    ;
sta      $0E                           ; 0x45ee $C5DE 85 0E                    ;
lda      $0F                           ; 0x45f0 $C5E0 A5 0F                    ;
adc      #$00                          ; 0x45f2 $C5E2 69 00                    ;
sta      $0F                           ; 0x45f4 $C5E4 85 0F                    ;
lda      #$FF                          ; 0x45f6 $C5E6 A9 FF                    ;;A = #$ff 1111_1111
bne      LC61C                         ; 0x45f8 $C5E8 D0 32                    ;
LC5EA                                                                          ;
ldy      #$01                          ; 0x45fa $C5EA A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x45fc $C5EC B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC5F3                         ; 0x45fe $C5EE D0 03                    ;
lda      #$03                          ; 0x4600 $C5F0 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4602 $C5F2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC5F3                                                                          ;
lda      $0E                           ; 0x4603 $C5F3 A5 0E                    ;
sec                                    ; 0x4605 $C5F5 38                       ;
sbc      #$01                          ; 0x4606 $C5F6 E9 01                    ;
sta      $0E                           ; 0x4608 $C5F8 85 0E                    ;
lda      $0F                           ; 0x460a $C5FA A5 0F                    ;
sbc      #$00                          ; 0x460c $C5FC E9 00                    ;
sta      $0F                           ; 0x460e $C5FE 85 0F                    ;
lda      #$01                          ; 0x4610 $C600 A9 01                    ;;A = #$01 0000_0001
bne      LC65D                         ; 0x4612 $C602 D0 59                    ;
LC604                                                                          ;
ldy      #$02                          ; 0x4614 $C604 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x4616 $C606 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC60D                         ; 0x4618 $C608 D0 03                    ;
lda      #$03                          ; 0x461a $C60A A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x461c $C60C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC60D                                                                          ;
lda      $0E                           ; 0x461d $C60D A5 0E                    ;
sec                                    ; 0x461f $C60F 38                       ;
sbc      #$16                          ; 0x4620 $C610 E9 16                    ;
sta      $0E                           ; 0x4622 $C612 85 0E                    ;
lda      $0F                           ; 0x4624 $C614 A5 0F                    ;
sbc      #$00                          ; 0x4626 $C616 E9 00                    ;
sta      $0F                           ; 0x4628 $C618 85 0F                    ;
lda      #$01                          ; 0x462a $C61A A9 01                    ;;A = #$01 0000_0001
LC61C                                                                          ;
clc                                    ; 0x462c $C61C 18                       ;
adc      $37                           ; 0x462d $C61D 65 37                    ;;player PosY, 0-14 (small meta-tile size)
sta      $93                           ; 0x462f $C61F 85 93                    ;
ldy      #$00                          ; 0x4631 $C621 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x4633 $C623 B1 0E                    ;
and      #$80                          ; 0x4635 $C625 29 80                    ;;Keep Bits:1000_0000
beq      LC647                         ; 0x4637 $C627 F0 1E                    ;
lda      $93                           ; 0x4639 $C629 A5 93                    ;
ldy      #$02                          ; 0x463b $C62B A0 02                    ;;Y = #$02 0000_0010
cmp      ($8B),y                       ; 0x463d $C62D D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC638                         ; 0x463f $C62F F0 07                    ;
clc                                    ; 0x4641 $C631 18                       ;
adc      #$01                          ; 0x4642 $C632 69 01                    ;
cmp      ($8B),y                       ; 0x4644 $C634 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC647                         ; 0x4646 $C636 D0 0F                    ;
LC638                                                                          ;
lda      $36                           ; 0x4648 $C638 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
dey                                    ; 0x464a $C63A 88                       ;
sec                                    ; 0x464b $C63B 38                       ;
sbc      ($8B),y                       ; 0x464c $C63C F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC644                         ; 0x464e $C63E F0 04                    ;
cmp      #$FF                          ; 0x4650 $C640 C9 FF                    ;
bne      LC647                         ; 0x4652 $C642 D0 03                    ;
LC644                                                                          ;
lda      #$02                          ; 0x4654 $C644 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4656 $C646 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC647                                                                          ;
lda      #$00                          ; 0x4657 $C647 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4659 $C649 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC64A                                                                          ;
ldy      #$01                          ; 0x465a $C64A A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x465c $C64C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$15                          ; 0x465e $C64E C9 15                    ;
bne      LC655                         ; 0x4660 $C650 D0 03                    ;
lda      #$03                          ; 0x4662 $C652 A9 03                    ;;A = #$03 0000_0011
rts                                    ; 0x4664 $C654 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC655                                                                          ;
inc      $0E                           ; 0x4665 $C655 E6 0E                    ;
bne      LC65B                         ; 0x4667 $C657 D0 02                    ;
inc      $0F                           ; 0x4669 $C659 E6 0F                    ;
LC65B                                                                          ;
lda      #$FF                          ; 0x466b $C65B A9 FF                    ;;A = #$ff 1111_1111
LC65D                                                                          ;
clc                                    ; 0x466d $C65D 18                       ;
adc      $36                           ; 0x466e $C65E 65 36                    ;;player PosX, 0-14 (small meta-tile size)
sta      $93                           ; 0x4670 $C660 85 93                    ;
ldy      #$00                          ; 0x4672 $C662 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x4674 $C664 B1 0E                    ;
and      #$80                          ; 0x4676 $C666 29 80                    ;;Keep Bits:1000_0000
beq      LC688                         ; 0x4678 $C668 F0 1E                    ;
lda      $93                           ; 0x467a $C66A A5 93                    ;
ldy      #$01                          ; 0x467c $C66C A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x467e $C66E D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC679                         ; 0x4680 $C670 F0 07                    ;
clc                                    ; 0x4682 $C672 18                       ;
adc      #$01                          ; 0x4683 $C673 69 01                    ;
cmp      ($8B),y                       ; 0x4685 $C675 D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC688                         ; 0x4687 $C677 D0 0F                    ;
LC679                                                                          ;
lda      $37                           ; 0x4689 $C679 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
iny                                    ; 0x468b $C67B C8                       ;
sec                                    ; 0x468c $C67C 38                       ;
sbc      ($8B),y                       ; 0x468d $C67D F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
beq      LC685                         ; 0x468f $C67F F0 04                    ;
cmp      #$FF                          ; 0x4691 $C681 C9 FF                    ;
bne      LC688                         ; 0x4693 $C683 D0 03                    ;
LC685                                                                          ;
lda      #$02                          ; 0x4695 $C685 A9 02                    ;;A = #$02 0000_0010
rts                                    ; 0x4697 $C687 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC688                                                                          ;
lda      #$00                          ; 0x4698 $C688 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x469a $C68A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC68B                                                                          ;
lda      ($8B),y                       ; 0x469b $C68B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
tax                                    ; 0x469d $C68D AA                       ;
beq      LC698                         ; 0x469e $C68E F0 08                    ;
dex                                    ; 0x46a0 $C690 CA                       ;
beq      LC6B0                         ; 0x46a1 $C691 F0 1D                    ;
dex                                    ; 0x46a3 $C693 CA                       ;
beq      LC6CB                         ; 0x46a4 $C694 F0 35                    ;
bne      LC706                         ; 0x46a6 $C696 D0 6E                    ;
LC698                                                                          ;
ldy      #$02                          ; 0x46a8 $C698 A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x46aa $C69A B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$12                          ; 0x46ac $C69C C9 12                    ;
beq      LC703                         ; 0x46ae $C69E F0 63                    ;
lda      $0E                           ; 0x46b0 $C6A0 A5 0E                    ;
clc                                    ; 0x46b2 $C6A2 18                       ;
adc      #$2C                          ; 0x46b3 $C6A3 69 2C                    ;
sta      $0E                           ; 0x46b5 $C6A5 85 0E                    ;
lda      $0F                           ; 0x46b7 $C6A7 A5 0F                    ;
adc      #$00                          ; 0x46b9 $C6A9 69 00                    ;
sta      $0F                           ; 0x46bb $C6AB 85 0F                    ;
jmp      LC6E0                         ; 0x46bd $C6AD 4C E0 C6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC6B0                                                                          ;
ldy      #$01                          ; 0x46c0 $C6B0 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x46c2 $C6B2 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$02                          ; 0x46c4 $C6B4 C9 02                    ;
bne      LC6BB                         ; 0x46c6 $C6B6 D0 03                    ;
jmp      LC740                         ; 0x46c8 $C6B8 4C 40 C7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC6BB                                                                          ;
lda      $0E                           ; 0x46cb $C6BB A5 0E                    ;
sec                                    ; 0x46cd $C6BD 38                       ;
sbc      #$01                          ; 0x46ce $C6BE E9 01                    ;
sta      $0E                           ; 0x46d0 $C6C0 85 0E                    ;
lda      $0F                           ; 0x46d2 $C6C2 A5 0F                    ;
sbc      #$00                          ; 0x46d4 $C6C4 E9 00                    ;
sta      $0F                           ; 0x46d6 $C6C6 85 0F                    ;
jmp      LC71B                         ; 0x46d8 $C6C8 4C 1B C7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC6CB                                                                          ;
ldy      #$02                          ; 0x46db $C6CB A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x46dd $C6CD B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$02                          ; 0x46df $C6CF C9 02                    ;
beq      LC703                         ; 0x46e1 $C6D1 F0 30                    ;
lda      $0E                           ; 0x46e3 $C6D3 A5 0E                    ;
sec                                    ; 0x46e5 $C6D5 38                       ;
sbc      #$16                          ; 0x46e6 $C6D6 E9 16                    ;
sta      $0E                           ; 0x46e8 $C6D8 85 0E                    ;
lda      $0F                           ; 0x46ea $C6DA A5 0F                    ;
sbc      #$00                          ; 0x46ec $C6DC E9 00                    ;
sta      $0F                           ; 0x46ee $C6DE 85 0F                    ;
LC6E0                                                                          ;
ldy      #$00                          ; 0x46f0 $C6E0 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x46f2 $C6E2 B1 0E                    ;
iny                                    ; 0x46f4 $C6E4 C8                       ;
ora      ($8B),y                       ; 0x46f5 $C6E5 11 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$C0                          ; 0x46f7 $C6E7 29 C0                    ;;Keep Bits:1100_0000
bne      LC703                         ; 0x46f9 $C6E9 D0 18                    ;
lda      ($0E),y                       ; 0x46fb $C6EB B1 0E                    ;
cmp      $8F                           ; 0x46fd $C6ED C5 8F                    ;
beq      LC6F5                         ; 0x46ff $C6EF F0 04                    ;
cmp      $90                           ; 0x4701 $C6F1 C5 90                    ;
bne      LC703                         ; 0x4703 $C6F3 D0 0E                    ;
LC6F5                                                                          ;
dey                                    ; 0x4705 $C6F5 88                       ;
lda      ($0E),y                       ; 0x4706 $C6F6 B1 0E                    ;
cmp      $8F                           ; 0x4708 $C6F8 C5 8F                    ;
beq      LC700                         ; 0x470a $C6FA F0 04                    ;
cmp      $90                           ; 0x470c $C6FC C5 90                    ;
bne      LC703                         ; 0x470e $C6FE D0 03                    ;
LC700                                                                          ;
lda      #$00                          ; 0x4710 $C700 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4712 $C702 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC703                                                                          ;
lda      #$01                          ; 0x4713 $C703 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4715 $C705 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC706                                                                          ;
ldy      #$01                          ; 0x4716 $C706 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4718 $C708 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$12                          ; 0x471a $C70A C9 12                    ;
beq      LC740                         ; 0x471c $C70C F0 32                    ;
lda      $0E                           ; 0x471e $C70E A5 0E                    ;
clc                                    ; 0x4720 $C710 18                       ;
adc      #$02                          ; 0x4721 $C711 69 02                    ;
sta      $0E                           ; 0x4723 $C713 85 0E                    ;
lda      $0F                           ; 0x4725 $C715 A5 0F                    ;
adc      #$00                          ; 0x4727 $C717 69 00                    ;
sta      $0F                           ; 0x4729 $C719 85 0F                    ;
LC71B                                                                          ;
ldy      #$00                          ; 0x472b $C71B A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x472d $C71D B1 0E                    ;
ldy      #$16                          ; 0x472f $C71F A0 16                    ;;Y = #$16 0001_0110
ora      ($0E),y                       ; 0x4731 $C721 11 0E                    ;
and      #$C0                          ; 0x4733 $C723 29 C0                    ;;Keep Bits:1100_0000
bne      LC740                         ; 0x4735 $C725 D0 19                    ;
lda      ($0E),y                       ; 0x4737 $C727 B1 0E                    ;
cmp      $8F                           ; 0x4739 $C729 C5 8F                    ;
beq      LC731                         ; 0x473b $C72B F0 04                    ;
cmp      $90                           ; 0x473d $C72D C5 90                    ;
bne      LC740                         ; 0x473f $C72F D0 0F                    ;
LC731                                                                          ;
ldy      #$00                          ; 0x4741 $C731 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x4743 $C733 B1 0E                    ;
cmp      $8F                           ; 0x4745 $C735 C5 8F                    ;
beq      LC73D                         ; 0x4747 $C737 F0 04                    ;
cmp      $90                           ; 0x4749 $C739 C5 90                    ;
bne      LC740                         ; 0x474b $C73B D0 03                    ;
LC73D                                                                          ;
lda      #$00                          ; 0x474d $C73D A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x474f $C73F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC740                                                                          ;
lda      #$01                          ; 0x4750 $C740 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4752 $C742 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC743                                                                          ;
ldy      #$05                          ; 0x4753 $C743 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x4755 $C745 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$01                          ; 0x4757 $C747 A0 01                    ;;Y = #$01 0000_0001
cmp      #$01                          ; 0x4759 $C749 C9 01                    ;
bne      LC779                         ; 0x475b $C74B D0 2C                    ;
lda      ($8B),y                       ; 0x475d $C74D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sec                                    ; 0x475f $C74F 38                       ;
sbc      #$01                          ; 0x4760 $C750 E9 01                    ;
jsr      LC788                         ; 0x4762 $C752 20 88 C7                 ;
bne      LC776                         ; 0x4765 $C755 D0 1F                    ;
lda      #$02                          ; 0x4767 $C757 A9 02                    ;;A = #$02 0000_0010
LC759                                                                          ;
clc                                    ; 0x4769 $C759 18                       ;
adc      $36                           ; 0x476a $C75A 65 36                    ;;player PosX, 0-14 (small meta-tile size)
ldy      #$01                          ; 0x476c $C75C A0 01                    ;;Y = #$01 0000_0001
cmp      ($8B),y                       ; 0x476e $C75E D1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LC773                         ; 0x4770 $C760 D0 11                    ;
lda      $37                           ; 0x4772 $C762 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
iny                                    ; 0x4774 $C764 C8                       ;
sec                                    ; 0x4775 $C765 38                       ;
sbc      ($8B),y                       ; 0x4776 $C766 F1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bpl      LC76F                         ; 0x4778 $C768 10 05                    ;
eor      #$FF                          ; 0x477a $C76A 49 FF                    ;;Flip Bits:1111_1111
clc                                    ; 0x477c $C76C 18                       ;
adc      #$01                          ; 0x477d $C76D 69 01                    ;
LC76F                                                                          ;
cmp      #$02                          ; 0x477f $C76F C9 02                    ;
bmi      LC776                         ; 0x4781 $C771 30 03                    ;
LC773                                                                          ;
lda      #$00                          ; 0x4783 $C773 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4785 $C775 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC776                                                                          ;
lda      #$01                          ; 0x4786 $C776 A9 01                    ;;A = #$01 0000_0001
rts                                    ; 0x4788 $C778 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC779                                                                          ;
lda      ($8B),y                       ; 0x4789 $C779 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
clc                                    ; 0x478b $C77B 18                       ;
adc      #$03                          ; 0x478c $C77C 69 03                    ;
jsr      LC788                         ; 0x478e $C77E 20 88 C7                 ;
bne      LC776                         ; 0x4791 $C781 D0 F3                    ;
lda      #$FD                          ; 0x4793 $C783 A9 FD                    ;;A = #$fd 1111_1101
jmp      LC759                         ; 0x4795 $C785 4C 59 C7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC788                                                                          ;
sta      $9E                           ; 0x4798 $C788 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$02                          ; 0x479a $C78A A0 02                    ;;Y = #$02 0000_0010
lda      ($8B),y                       ; 0x479c $C78C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9F                           ; 0x479e $C78E 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x47a0 $C790 20 B9 DE                 ;
ldy      #$00                          ; 0x47a3 $C793 A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x47a5 $C795 B1 0E                    ;
ldy      #$16                          ; 0x47a7 $C797 A0 16                    ;;Y = #$16 0001_0110
ora      ($0E),y                       ; 0x47a9 $C799 11 0E                    ;
and      #$40                          ; 0x47ab $C79B 29 40                    ;;Keep Bits:0100_0000
rts                                    ; 0x47ad $C79D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC79E                                                                          ;
ldy      #$01                          ; 0x47ae $C79E A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x47b0 $C7A0 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9E                           ; 0x47b2 $C7A2 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
iny                                    ; 0x47b4 $C7A4 C8                       ;
lda      ($8B),y                       ; 0x47b5 $C7A5 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9F                           ; 0x47b7 $C7A7 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x47b9 $C7A9 20 B9 DE                 ;
lda      $88                           ; 0x47bc $C7AC A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x47be $C7AE 0A                       ;
tax                                    ; 0x47bf $C7AF AA                       ;
lda      LC96E,x                       ; 0x47c0 $C7B0 BD 6E C9                 ;
sta      $8F                           ; 0x47c3 $C7B3 85 8F                    ;
lda      LC96F,x                       ; 0x47c5 $C7B5 BD 6F C9                 ;
sta      $90                           ; 0x47c8 $C7B8 85 90                    ;
rts                                    ; 0x47ca $C7BA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster_Attacks_Player                                                         ;
jsr      LCF77                         ; 0x47cb $C7BB 20 77 CF                 ;
jsr      Monster__Load_HP_SecondEntry_from_Table__index_with_Type; 0x47ce $C7BE 20 4C D1;
LC7C1                                                                          ;
ldx      $B1                           ; 0x47d1 $C7C1 A6 B1                    ;;player defense / attack mode (00=defense, FF=attack)
bne      LC7CC                         ; 0x47d3 $C7C3 D0 07                    ;
lsr                                    ; 0x47d5 $C7C5 4A                       ;
lsr                                    ; 0x47d6 $C7C6 4A                       ;
ldx      $5A                           ; 0x47d7 $C7C7 A6 5A                    ;;FF=got shield 			(appears in ITEM)
beq      LC7CC                         ; 0x47d9 $C7C9 F0 01                    ;
lsr                                    ; 0x47db $C7CB 4A                       ;
LC7CC                                                                          ;
sta      $08                           ; 0x47dc $C7CC 85 08                    ;;save calc'd attack strength to $08 ?
lda      $38                           ; 0x47de $C7CE A5 38                    ;;player hp
sec                                    ; 0x47e0 $C7D0 38                       ;
sbc      $08                           ; 0x47e1 $C7D1 E5 08                    ;;save calc'd attack strength to $08 ?
bpl      LC7D7                         ; 0x47e3 $C7D3 10 02                    ;
lda      #$00                          ; 0x47e5 $C7D5 A9 00                    ;;A = #$00 0000_0000
LC7D7                                                                          ;
sta      $38                           ; 0x47e7 $C7D7 85 38                    ;;player hp
jsr      DrawGraphicBar_for_HP         ; 0x47e9 $C7D9 20 42 97                 ;
lda      #$03                          ; 0x47ec $C7DC A9 03                    ;;A = #$03 0000_0011
jsr      LE271                         ; 0x47ee $C7DE 20 71 E2                 ;
lda      $85                           ; 0x47f1 $C7E1 A5 85                    ;
beq      LC7E8                         ; 0x47f3 $C7E3 F0 03                    ;
jmp      LC86D                         ; 0x47f5 $C7E5 4C 6D C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7E8                                                                          ;
lda      $36                           ; 0x47f8 $C7E8 A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x47fa $C7EA 0A                       ;
asl                                    ; 0x47fb $C7EB 0A                       ;
asl                                    ; 0x47fc $C7EC 0A                       ;
adc      #$08                          ; 0x47fd $C7ED 69 08                    ;
sta      $A8                           ; 0x47ff $C7EF 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0x4801 $C7F1 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x4803 $C7F3 0A                       ;
asl                                    ; 0x4804 $C7F4 0A                       ;
asl                                    ; 0x4805 $C7F5 0A                       ;
adc      #$0F                          ; 0x4806 $C7F6 69 0F                    ;
sta      $A9                           ; 0x4808 $C7F8 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
ldx      $A7                           ; 0x480a $C7FA A6 A7                    ;
lda      $A9                           ; 0x480c $C7FC A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x480e $C7FE 9D 00 02                 ;
inx                                    ; 0x4811 $C801 E8                       ;
lda      #$E8                          ; 0x4812 $C802 A9 E8                    ;;A = #$e8 1110_1000
sta      $0200,x                       ; 0x4814 $C804 9D 00 02                 ;
inx                                    ; 0x4817 $C807 E8                       ;
lda      #$00                          ; 0x4818 $C808 A9 00                    ;;A = #$00 0000_0000
sta      $0200,x                       ; 0x481a $C80A 9D 00 02                 ;
inx                                    ; 0x481d $C80D E8                       ;
lda      $A8                           ; 0x481e $C80E A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x4820 $C810 9D 00 02                 ;
inx                                    ; 0x4823 $C813 E8                       ;
lda      $A9                           ; 0x4824 $C814 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x4826 $C816 9D 00 02                 ;
inx                                    ; 0x4829 $C819 E8                       ;
lda      #$E8                          ; 0x482a $C81A A9 E8                    ;;A = #$e8 1110_1000
sta      $0200,x                       ; 0x482c $C81C 9D 00 02                 ;
inx                                    ; 0x482f $C81F E8                       ;
lda      #$00                          ; 0x4830 $C820 A9 00                    ;;A = #$00 0000_0000
sta      $0200,x                       ; 0x4832 $C822 9D 00 02                 ;
inx                                    ; 0x4835 $C825 E8                       ;
lda      $A8                           ; 0x4836 $C826 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x4838 $C828 18                       ;
adc      #$08                          ; 0x4839 $C829 69 08                    ;
sta      $0200,x                       ; 0x483b $C82B 9D 00 02                 ;
inx                                    ; 0x483e $C82E E8                       ;
lda      $A9                           ; 0x483f $C82F A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x4841 $C831 18                       ;
adc      #$08                          ; 0x4842 $C832 69 08                    ;
sta      $A9                           ; 0x4844 $C834 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x4846 $C836 9D 00 02                 ;
inx                                    ; 0x4849 $C839 E8                       ;
lda      #$E8                          ; 0x484a $C83A A9 E8                    ;;A = #$e8 1110_1000
sta      $0200,x                       ; 0x484c $C83C 9D 00 02                 ;
inx                                    ; 0x484f $C83F E8                       ;
lda      #$00                          ; 0x4850 $C840 A9 00                    ;;A = #$00 0000_0000
sta      $0200,x                       ; 0x4852 $C842 9D 00 02                 ;
inx                                    ; 0x4855 $C845 E8                       ;
lda      $A8                           ; 0x4856 $C846 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x4858 $C848 9D 00 02                 ;
inx                                    ; 0x485b $C84B E8                       ;
lda      $A9                           ; 0x485c $C84C A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x485e $C84E 9D 00 02                 ;
inx                                    ; 0x4861 $C851 E8                       ;
lda      #$E8                          ; 0x4862 $C852 A9 E8                    ;;A = #$e8 1110_1000
sta      $0200,x                       ; 0x4864 $C854 9D 00 02                 ;
inx                                    ; 0x4867 $C857 E8                       ;
lda      #$00                          ; 0x4868 $C858 A9 00                    ;;A = #$00 0000_0000
sta      $0200,x                       ; 0x486a $C85A 9D 00 02                 ;
inx                                    ; 0x486d $C85D E8                       ;
lda      $A8                           ; 0x486e $C85E A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x4870 $C860 18                       ;
adc      #$08                          ; 0x4871 $C861 69 08                    ;
sta      $0200,x                       ; 0x4873 $C863 9D 00 02                 ;
inx                                    ; 0x4876 $C866 E8                       ;
stx      $A7                           ; 0x4877 $C867 86 A7                    ;
lda      #$FF                          ; 0x4879 $C869 A9 FF                    ;;A = #$ff 1111_1111
sta      $85                           ; 0x487b $C86B 85 85                    ;
LC86D                                                                          ;
lda      $38                           ; 0x487d $C86D A5 38                    ;;player hp
bne      LC874                         ; 0x487f $C86F D0 03                    ;
jmp      LAF46                         ; 0x4881 $C871 4C 46 AF                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC874                                                                          ;
rts                                    ; 0x4884 $C874 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__PickAndSetRND_OffscreenTimer                                          ;
;something                                                                     ;
jsr      LC884                         ; 0x4885 $C875 20 84 C8                 ;
;get a random number in range of 3 to 8 ??                                     ;
lda      #$05                          ; 0x4888 $C878 A9 05                    ;;A = #$05 0000_0101
jsr      RNG_get_random_number__A_is_max; 0x488a $C87A 20 8E 96                ;
adc      #$03                          ; 0x488d $C87D 69 03                    ;
;monster variable index 4: 6F0 	Enemy 0 - OffscreenTimerOffset    4            ;
ldy      #$04                          ; 0x488f $C87F A0 04                    ;;Y = #$04 0000_0100
;save random number to monster OffscreenTimerOffset                            ;
sta      ($8B),y                       ; 0x4891 $C881 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
rts                                    ; 0x4893 $C883 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC884                                                                          ;
;monster variable index 1: 6ED 	Enemy 0 - XPosOffset              1            ;
ldy      #$01                          ; 0x4894 $C884 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4896 $C886 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9E                           ; 0x4898 $C888 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
;monster variable index 2: 6EE 	Enemy 0 - YPosOffset              2            ;
iny                                    ; 0x489a $C88A C8                       ;
lda      ($8B),y                       ; 0x489b $C88B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9F                           ; 0x489d $C88D 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
;point                                                                         ;
jsr      Point_0E__based_on_9E_9F      ; 0x489f $C88F 20 B9 DE                 ;
;something, reset Y == #$00                                                    ;
ldy      #$00                          ; 0x48a2 $C892 A0 00                    ;;Y = #$00 0000_0000
;load monster type                                                             ;
lda      $88                           ; 0x48a4 $C894 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;monster 07:	SLIME@@                                                           ;
cmp      #$07                          ; 0x48a6 $C896 C9 07                    ;
beq      LC8BB                         ; 0x48a8 $C898 F0 21                    ;
;monster 08:	KOBOLD@                                                           ;
cmp      #$08                          ; 0x48aa $C89A C9 08                    ;
beq      LC8C9                         ; 0x48ac $C89C F0 2B                    ;
;monster 0A:	EEL@@@@                                                           ;
cmp      #$0A                          ; 0x48ae $C89E C9 0A                    ;
beq      LC8C9                         ; 0x48b0 $C8A0 F0 27                    ;
;monster 0E:	STIRGE@                                                           ;
cmp      #$0E                          ; 0x48b2 $C8A2 C9 0E                    ;
beq      LC8BB                         ; 0x48b4 $C8A4 F0 15                    ;
;monster 0F:	WASP@@@                                                           ;
cmp      #$0F                          ; 0x48b6 $C8A6 C9 0F                    ;
beq      LC8C2                         ; 0x48b8 $C8A8 F0 18                    ;
;monster 11:	FIREBAL                                                           ;
cmp      #$11                          ; 0x48ba $C8AA C9 11                    ;
beq      LC8C8                         ; 0x48bc $C8AC F0 1A                    ;
;monster 12:	DRAGON@                                                           ;
cmp      #$12                          ; 0x48be $C8AE C9 12                    ;
beq      LC8D3                         ; 0x48c0 $C8B0 F0 21                    ;
;monster 13:	VARALYS                                                           ;
cmp      #$13                          ; 0x48c2 $C8B2 C9 13                    ;
beq      LC8DA                         ; 0x48c4 $C8B4 F0 24                    ;
;something                                                                     ;
jsr      LC8BB                         ; 0x48c6 $C8B6 20 BB C8                 ;
;something                                                                     ;
ldy      #$16                          ; 0x48c9 $C8B9 A0 16                    ;;Y = #$16 0001_0110
LC8BB                                                                          ;
;load from $0E........??????                                                   ;
lda      ($0E),y                       ; 0x48cb $C8BB B1 0E                    ;
and      #$BF                          ; 0x48cd $C8BD 29 BF                    ;;Keep Bits:1011_1111
sta      ($0E),y                       ; 0x48cf $C8BF 91 0E                    ;
iny                                    ; 0x48d1 $C8C1 C8                       ;
LC8C2                                                                          ;
lda      ($0E),y                       ; 0x48d2 $C8C2 B1 0E                    ;
and      #$BF                          ; 0x48d4 $C8C4 29 BF                    ;;Keep Bits:1011_1111
sta      ($0E),y                       ; 0x48d6 $C8C6 91 0E                    ;
LC8C8                                                                          ;
rts                                    ; 0x48d8 $C8C8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8C9                                                                          ;
lda      ($0E),y                       ; 0x48d9 $C8C9 B1 0E                    ;
and      #$BF                          ; 0x48db $C8CB 29 BF                    ;;Keep Bits:1011_1111
sta      ($0E),y                       ; 0x48dd $C8CD 91 0E                    ;
ldy      #$16                          ; 0x48df $C8CF A0 16                    ;;Y = #$16 0001_0110
bne      LC8C2                         ; 0x48e1 $C8D1 D0 EF                    ;
LC8D3                                                                          ;
jsr      LC8E4                         ; 0x48e3 $C8D3 20 E4 C8                 ;
ldy      #$16                          ; 0x48e6 $C8D6 A0 16                    ;;Y = #$16 0001_0110
bne      LC8E4                         ; 0x48e8 $C8D8 D0 0A                    ;
LC8DA                                                                          ;
jsr      LC8E4                         ; 0x48ea $C8DA 20 E4 C8                 ;
ldy      #$16                          ; 0x48ed $C8DD A0 16                    ;;Y = #$16 0001_0110
jsr      LC8E4                         ; 0x48ef $C8DF 20 E4 C8                 ;
ldy      #$2C                          ; 0x48f2 $C8E2 A0 2C                    ;;Y = #$2c 0010_1100
LC8E4                                                                          ;
lda      ($0E),y                       ; 0x48f4 $C8E4 B1 0E                    ;
and      #$BF                          ; 0x48f6 $C8E6 29 BF                    ;;Keep Bits:1011_1111
sta      ($0E),y                       ; 0x48f8 $C8E8 91 0E                    ;
iny                                    ; 0x48fa $C8EA C8                       ;
lda      ($0E),y                       ; 0x48fb $C8EB B1 0E                    ;
and      #$BF                          ; 0x48fd $C8ED 29 BF                    ;;Keep Bits:1011_1111
sta      ($0E),y                       ; 0x48ff $C8EF 91 0E                    ;
iny                                    ; 0x4901 $C8F1 C8                       ;
lda      ($0E),y                       ; 0x4902 $C8F2 B1 0E                    ;
and      #$BF                          ; 0x4904 $C8F4 29 BF                    ;;Keep Bits:1011_1111
sta      ($0E),y                       ; 0x4906 $C8F6 91 0E                    ;
rts                                    ; 0x4908 $C8F8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8F9                                                                          ;
;monster variable index 1: 6ED 	Enemy 0 - XPosOffset              1            ;
ldy      #$01                          ; 0x4909 $C8F9 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x490b $C8FB B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9E                           ; 0x490d $C8FD 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
;monster variable index 2: 6EE 	Enemy 0 - YPosOffset              2            ;
iny                                    ; 0x490f $C8FF C8                       ;
lda      ($8B),y                       ; 0x4910 $C900 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9F                           ; 0x4912 $C902 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LC906     = * + $0002                                                          ;
;point                                                                         ;
jsr      Point_0E__based_on_9E_9F      ; 0x4914 $C904 20 B9 DE                 ;
;reset Y = #$00                                                                ;
ldy      #$00                          ; 0x4917 $C907 A0 00                    ;;Y = #$00 0000_0000
;load monster type                                                             ;
lda      $88                           ; 0x4919 $C909 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;monster 07:	SLIME@@                                                           ;
cmp      #$07                          ; 0x491b $C90B C9 07                    ;
beq      LC930                         ; 0x491d $C90D F0 21                    ;
;monster 08:	KOBOLD@                                                           ;
cmp      #$08                          ; 0x491f $C90F C9 08                    ;
beq      LC93E                         ; 0x4921 $C911 F0 2B                    ;
;monster 0A:	EEL@@@@                                                           ;
cmp      #$0A                          ; 0x4923 $C913 C9 0A                    ;
beq      LC93E                         ; 0x4925 $C915 F0 27                    ;
;monster 0E:	STIRGE@                                                           ;
cmp      #$0E                          ; 0x4927 $C917 C9 0E                    ;
beq      LC930                         ; 0x4929 $C919 F0 15                    ;
;monster 0F:	WASP@@@                                                           ;
cmp      #$0F                          ; 0x492b $C91B C9 0F                    ;
beq      LC937                         ; 0x492d $C91D F0 18                    ;
;monster 11:	FIREBAL                                                           ;
cmp      #$11                          ; 0x492f $C91F C9 11                    ;
beq      LC93D                         ; 0x4931 $C921 F0 1A                    ;
;monster 12:	DRAGON@                                                           ;
cmp      #$12                          ; 0x4933 $C923 C9 12                    ;
beq      LC948                         ; 0x4935 $C925 F0 21                    ;
;monster 13:	VARALYS                                                           ;
cmp      #$13                          ; 0x4937 $C927 C9 13                    ;
beq      LC94F                         ; 0x4939 $C929 F0 24                    ;
;something                                                                     ;
jsr      LC930                         ; 0x493b $C92B 20 30 C9                 ;
;load from $0E ..... ???                                                       ;
ldy      #$16                          ; 0x493e $C92E A0 16                    ;;Y = #$16 0001_0110
LC930                                                                          ;
lda      ($0E),y                       ; 0x4940 $C930 B1 0E                    ;
ora      #$40                          ; 0x4942 $C932 09 40                    ;;Set Bits:0100_0000
sta      ($0E),y                       ; 0x4944 $C934 91 0E                    ;
iny                                    ; 0x4946 $C936 C8                       ;
LC937                                                                          ;
lda      ($0E),y                       ; 0x4947 $C937 B1 0E                    ;
ora      #$40                          ; 0x4949 $C939 09 40                    ;;Set Bits:0100_0000
sta      ($0E),y                       ; 0x494b $C93B 91 0E                    ;
LC93D                                                                          ;
rts                                    ; 0x494d $C93D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC93E                                                                          ;
lda      ($0E),y                       ; 0x494e $C93E B1 0E                    ;
ora      #$40                          ; 0x4950 $C940 09 40                    ;;Set Bits:0100_0000
sta      ($0E),y                       ; 0x4952 $C942 91 0E                    ;
ldy      #$16                          ; 0x4954 $C944 A0 16                    ;;Y = #$16 0001_0110
bne      LC937                         ; 0x4956 $C946 D0 EF                    ;
LC948                                                                          ;
jsr      LC959                         ; 0x4958 $C948 20 59 C9                 ;
ldy      #$16                          ; 0x495b $C94B A0 16                    ;;Y = #$16 0001_0110
bne      LC959                         ; 0x495d $C94D D0 0A                    ;
LC94F                                                                          ;
jsr      LC959                         ; 0x495f $C94F 20 59 C9                 ;
ldy      #$16                          ; 0x4962 $C952 A0 16                    ;;Y = #$16 0001_0110
jsr      LC959                         ; 0x4964 $C954 20 59 C9                 ;
ldy      #$2C                          ; 0x4967 $C957 A0 2C                    ;;Y = #$2c 0010_1100
LC959                                                                          ;
lda      ($0E),y                       ; 0x4969 $C959 B1 0E                    ;
ora      #$40                          ; 0x496b $C95B 09 40                    ;;Set Bits:0100_0000
sta      ($0E),y                       ; 0x496d $C95D 91 0E                    ;
iny                                    ; 0x496f $C95F C8                       ;
lda      ($0E),y                       ; 0x4970 $C960 B1 0E                    ;
ora      #$40                          ; 0x4972 $C962 09 40                    ;;Set Bits:0100_0000
sta      ($0E),y                       ; 0x4974 $C964 91 0E                    ;
iny                                    ; 0x4976 $C966 C8                       ;
lda      ($0E),y                       ; 0x4977 $C967 B1 0E                    ;
ora      #$40                          ; 0x4979 $C969 09 40                    ;;Set Bits:0100_0000
sta      ($0E),y                       ; 0x497b $C96B 91 0E                    ;
rts                                    ; 0x497d $C96D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC96E                                                                          ;
.byt    $04                            ; 0x497e $C96E 04                       ;;
LC96F                                                                          ;
.byt    $04,$04,$04,$04,$08,$08,$08,$04; 0x497f $C96F 04 04 04 04 08 08 08 04  ;;
.byt    $04,$04,$08,$04,$04,$00,$02,$00; 0x4987 $C977 04 04 08 04 04 00 02 00  ;;
.byt    $01,$07,$07,$03,$03,$01,$02,$02; 0x498f $C97F 01 07 07 03 03 01 02 02  ;;
.byt    $02,$02,$02,$00,$00,$00,$00,$00; 0x4997 $C987 02 02 02 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$04,$04,$02; 0x499f $C98F 00 00 00 00 00 04 04 02  ;;
.byt    $25,$01,$02                    ; 0x49a7 $C997 25 01 02                 ;;%
; ---------------------------------------------------------------------------- ;
Screen__Setup_MaxMonsterNumAllowed_AndSomething__And_Point_8B_to_6EC           ;
;convert to table index                                                        ;
lda      $47                           ; 0x49aa $C99A A5 47                    ;;player CurrentArea       
asl                                    ; 0x49ac $C99C 0A                       ;
adc      $47                           ; 0x49ad $C99D 65 47                    ;;player CurrentArea       
tax                                    ; 0x49af $C99F AA                       ;
;load from table and store to ???                                              ;
lda      Table__FirstByte__MaxNumMonstersAllowedToExistOnScreen,x; 0x49b0 $C9A0 BD DD D2;
sta      $8A                           ; 0x49b3 $C9A3 85 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
lda      Monster__Pointer_Table__Involving_Offscren_Monster_save__or_other_screenMonsterData__maybe__low_addy,x; 0x49b5 $C9A5 BD DE D2;
sta      $8D                           ; 0x49b8 $C9A8 85 8D                    ;;pointer pointed to table involving monster variables
lda      Monster__Pointer_Table__Involving_Offscren_Monster_save__or_other_screenMonsterData__maybe__high_addy,x; 0x49ba $C9AA BD DF D2;
sta      $8E                           ; 0x49bd $C9AD 85 8E                    ;
;setup pointer		$6EC                                                           ;
;			as addy for pointer ($8B)                                                  ;
;address $6EC is monster 0 variables (with the other monsters following)       ;
;each monsters has 0xA bytes of data                                           ;
lda      #$06                          ; 0x49bf $C9AF A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x49c1 $C9B1 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x49c3 $C9B3 A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x49c5 $C9B5 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
;something                                                                     ;
lda      $47                           ; 0x49c7 $C9B7 A5 47                    ;;player CurrentArea       
cmp      $4E                           ; 0x49c9 $C9B9 C5 4E                    ;
bne      LC9C0                         ; 0x49cb $C9BB D0 03                    ;
jmp      LCB4D                         ; 0x49cd $C9BD 4C 4D CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC9C0                                                                          ;
ldy      #$00                          ; 0x49d0 $C9C0 A0 00                    ;;Y = #$00 0000_0000
LC9C2                                                                          ;
;copy all of the variables for enemy -> to $073C,Y                             ;
lda      $06EC,y                       ; 0x49d2 $C9C2 B9 EC 06                 ;;Enemy 0 - TypeOffset              0
sta      $073C,y                       ; 0x49d5 $C9C5 99 3C 07                 ;;Enemy 0 - TypeOffset              0	(offscreen)
iny                                    ; 0x49d8 $C9C8 C8                       ;
cpy      #$50                          ; 0x49d9 $C9C9 C0 50                    ;
bmi      LC9C2                         ; 0x49db $C9CB 30 F5                    ;
;reset table index ($89)                                                       ;
lda      #$00                          ; 0x49dd $C9CD A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x49df $C9CF 85 89                    ;
;load monster for screen??                                                     ;
LC9D1                                                                          ;
ldy      $89                           ; 0x49e1 $C9D1 A4 89                    ;
lda      ($8D),y                       ; 0x49e3 $C9D3 B1 8D                    ;
ldy      #$00                          ; 0x49e5 $C9D5 A0 00                    ;;Y = #$00 0000_0000
sta      ($8B),y                       ; 0x49e7 $C9D7 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x49e9 $C9D9 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
iny                                    ; 0x49eb $C9DB C8                       ;
lda      #$14                          ; 0x49ec $C9DC A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x49ee $C9DE 20 8E 96                ;
sta      ($8B),y                       ; 0x49f1 $C9E1 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x49f3 $C9E3 C8                       ;
lda      #$14                          ; 0x49f4 $C9E4 A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x49f6 $C9E6 20 8E 96                ;
sta      ($8B),y                       ; 0x49f9 $C9E9 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x49fb $C9EB C8                       ;
lda      #$00                          ; 0x49fc $C9EC A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x49fe $C9EE 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;load monster's type index                                                     ;
lda      $88                           ; 0x4a00 $C9F0 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;0C:	ROCKN@@                                                                   ;
cmp      #$0C                          ; 0x4a02 $C9F2 C9 0C                    ;
beq      Monster__Rockn_and_TreeGon__code; 0x4a04 $C9F4 F0 5F                  ;
;0D:	TREEGON                                                                   ;
cmp      #$0D                          ; 0x4a06 $C9F6 C9 0D                    ;
beq      Monster__Rockn_and_TreeGon__code; 0x4a08 $C9F8 F0 5B                  ;
;0F:	WASP@@@                                                                   ;
cmp      #$0F                          ; 0x4a0a $C9FA C9 0F                    ;
bne      LCA01                         ; 0x4a0c $C9FC D0 03                    ;
jmp      Monster__Wasp_and_Fireball__code; 0x4a0e $C9FE 4C 9B CA               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA01                                                                          ;
;11:	FIREBAL                                                                   ;
cmp      #$11                          ; 0x4a11 $CA01 C9 11                    ;
bne      LCA08                         ; 0x4a13 $CA03 D0 03                    ;
jmp      Monster__Wasp_and_Fireball__code; 0x4a15 $CA05 4C 9B CA               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA08                                                                          ;
;12:	DRAGON@                                                                   ;
cmp      #$12                          ; 0x4a18 $CA08 C9 12                    ;
bne      LCA0F                         ; 0x4a1a $CA0A D0 03                    ;
jmp      Monster__Dragon__code         ; 0x4a1c $CA0C 4C A4 CA                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA0F                                                                          ;
;13:	VARALYS                                                                   ;
cmp      #$13                          ; 0x4a1f $CA0F C9 13                    ;
bne      LCA16                         ; 0x4a21 $CA11 D0 03                    ;
jmp      Monster__Varalys__code        ; 0x4a23 $CA13 4C E6 CA                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA16                                                                          ;
jsr      LCB6B                         ; 0x4a26 $CA16 20 6B CB                 ;
beq      LCA24                         ; 0x4a29 $CA19 F0 09                    ;
ldy      #$04                          ; 0x4a2b $CA1B A0 04                    ;;Y = #$04 0000_0100
lda      #$01                          ; 0x4a2d $CA1D A9 01                    ;;A = #$01 0000_0001
sta      ($8B),y                       ; 0x4a2f $CA1F 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB35                         ; 0x4a31 $CA21 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA24                                                                          ;
ldy      #$04                          ; 0x4a34 $CA24 A0 04                    ;;Y = #$04 0000_0100
lda      #$00                          ; 0x4a36 $CA26 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4a38 $CA28 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a3a $CA2A C8                       ;
lda      #$03                          ; 0x4a3b $CA2B A9 03                    ;;A = #$03 0000_0011
jsr      RNG_get_random_number__A_is_max; 0x4a3d $CA2D 20 8E 96                ;
sta      ($8B),y                       ; 0x4a40 $CA30 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a42 $CA32 C8                       ;
lda      #$03                          ; 0x4a43 $CA33 A9 03                    ;;A = #$03 0000_0011
jsr      RNG_get_random_number__A_is_max; 0x4a45 $CA35 20 8E 96                ;
adc      #$03                          ; 0x4a48 $CA38 69 03                    ;
sta      ($8B),y                       ; 0x4a4a $CA3A 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a4c $CA3C C8                       ;
lda      #$03                          ; 0x4a4d $CA3D A9 03                    ;;A = #$03 0000_0011
jsr      RNG_get_random_number__A_is_max; 0x4a4f $CA3F 20 8E 96                ;
sta      ($8B),y                       ; 0x4a52 $CA42 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a54 $CA44 C8                       ;
jsr      Monster__Load_HP_from_Table__index_with_Type; 0x4a55 $CA45 20 44 D1   ;
sta      ($8B),y                       ; 0x4a58 $CA48 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a5a $CA4A C8                       ;
lda      #$00                          ; 0x4a5b $CA4B A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4a5d $CA4D 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC8F9                         ; 0x4a5f $CA4F 20 F9 C8                 ;
jmp      LCB35                         ; 0x4a62 $CA52 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Rockn_and_TreeGon__code                                               ;
jsr      LCB6B                         ; 0x4a65 $CA55 20 6B CB                 ;
beq      LCA74                         ; 0x4a68 $CA58 F0 1A                    ;
ldy      #$01                          ; 0x4a6a $CA5A A0 01                    ;;Y = #$01 0000_0001
lda      #$0C                          ; 0x4a6c $CA5C A9 0C                    ;;A = #$0c 0000_1100
jsr      RNG_get_random_number__A_is_max; 0x4a6e $CA5E 20 8E 96                ;
clc                                    ; 0x4a71 $CA61 18                       ;
adc      #$02                          ; 0x4a72 $CA62 69 02                    ;
sta      ($8B),y                       ; 0x4a74 $CA64 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a76 $CA66 C8                       ;
lda      #$0B                          ; 0x4a77 $CA67 A9 0B                    ;;A = #$0b 0000_1011
jsr      RNG_get_random_number__A_is_max; 0x4a79 $CA69 20 8E 96                ;
clc                                    ; 0x4a7c $CA6C 18                       ;
adc      #$08                          ; 0x4a7d $CA6D 69 08                    ;
sta      ($8B),y                       ; 0x4a7f $CA6F 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      Monster__Rockn_and_TreeGon__code; 0x4a81 $CA71 4C 55 CA               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA74                                                                          ;
ldy      #$04                          ; 0x4a84 $CA74 A0 04                    ;;Y = #$04 0000_0100
lda      #$00                          ; 0x4a86 $CA76 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4a88 $CA78 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a8a $CA7A C8                       ;
lda      #$03                          ; 0x4a8b $CA7B A9 03                    ;;A = #$03 0000_0011
jsr      RNG_get_random_number__A_is_max; 0x4a8d $CA7D 20 8E 96                ;
sta      ($8B),y                       ; 0x4a90 $CA80 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a92 $CA82 C8                       ;
lda      #$00                          ; 0x4a93 $CA83 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4a95 $CA85 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a97 $CA87 C8                       ;
sta      ($8B),y                       ; 0x4a98 $CA88 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a9a $CA8A C8                       ;
sta      ($8B),y                       ; 0x4a9b $CA8B 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
iny                                    ; 0x4a9d $CA8D C8                       ;
lda      #$32                          ; 0x4a9e $CA8E A9 32                    ;;A = #$32 0011_0010
jsr      RNG_get_random_number__A_is_max; 0x4aa0 $CA90 20 8E 96                ;
sta      ($8B),y                       ; 0x4aa3 $CA93 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC8F9                         ; 0x4aa5 $CA95 20 F9 C8                 ;
jmp      LCB35                         ; 0x4aa8 $CA98 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Wasp_and_Fireball__code                                               ;
ldy      #$04                          ; 0x4aab $CA9B A0 04                    ;;Y = #$04 0000_0100
lda      #$FF                          ; 0x4aad $CA9D A9 FF                    ;;A = #$ff 1111_1111
sta      ($8B),y                       ; 0x4aaf $CA9F 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB35                         ; 0x4ab1 $CAA1 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Dragon__code                                                          ;
lda      $5D                           ; 0x4ab4 $CAA4 A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
ora      $63                           ; 0x4ab6 $CAA6 05 63                    ;;FF=makes the wall surrounding castle disappear
beq      Monster__Load_Default_Settings_For_Monster__maybe; 0x4ab8 $CAA8 F0 09 ;
ldy      #$04                          ; 0x4aba $CAAA A0 04                    ;;Y = #$04 0000_0100
lda      #$FF                          ; 0x4abc $CAAC A9 FF                    ;;A = #$ff 1111_1111
sta      ($8B),y                       ; 0x4abe $CAAE 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB35                         ; 0x4ac0 $CAB0 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Load_Default_Settings_For_Monster__maybe                              ;
;6ED 	Enemy 0 - XPosOffset              1                                      ;
ldy      #$01                          ; 0x4ac3 $CAB3 A0 01                    ;;Y = #$01 0000_0001
lda      #$0F                          ; 0x4ac5 $CAB5 A9 0F                    ;;A = #$0f 0000_1111
sta      ($8B),y                       ; 0x4ac7 $CAB7 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6EE 	Enemy 0 - YPosOffset              2                                      ;
iny                                    ; 0x4ac9 $CAB9 C8                       ;
lda      #$05                          ; 0x4aca $CABA A9 05                    ;;A = #$05 0000_0101
sta      ($8B),y                       ; 0x4acc $CABC 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6EF 	Enemy 0 - Unknown1Offset          3                                      ;
iny                                    ; 0x4ace $CABE C8                       ;
lda      #$00                          ; 0x4acf $CABF A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4ad1 $CAC1 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F0 	Enemy 0 - OffscreenTimerOffset    4                                      ;
iny                                    ; 0x4ad3 $CAC3 C8                       ;
sta      ($8B),y                       ; 0x4ad4 $CAC4 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F1 	Enemy 0 - DirectionOffset         5                                      ;
iny                                    ; 0x4ad6 $CAC6 C8                       ;
lda      #$01                          ; 0x4ad7 $CAC7 A9 01                    ;;A = #$01 0000_0001
sta      ($8B),y                       ; 0x4ad9 $CAC9 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F2 	Enemy 0 - NextActionTimerOffset   6                                      ;
iny                                    ; 0x4adb $CACB C8                       ;
lda      #$00                          ; 0x4adc $CACC A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4ade $CACE 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F3 	Enemy 0 - AnimationTimerOffset    7                                      ;
iny                                    ; 0x4ae0 $CAD0 C8                       ;
sta      ($8B),y                       ; 0x4ae1 $CAD1 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F4 	Enemy 0 - HPOffset                8                                      ;
iny                                    ; 0x4ae3 $CAD3 C8                       ;
lda      $71                           ; 0x4ae4 $CAD4 A5 71                    ;;HP for monster, maybe?? (monster 12:	;DRAGON@)
sta      ($8B),y                       ; 0x4ae6 $CAD6 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F5 	Enemy 0 - Unknown2Offset          9                                      ;
iny                                    ; 0x4ae8 $CAD8 C8                       ;
lda      #$06                          ; 0x4ae9 $CAD9 A9 06                    ;;A = #$06 0000_0110
jsr      RNG_get_random_number__A_is_max; 0x4aeb $CADB 20 8E 96                ;
sta      ($8B),y                       ; 0x4aee $CADE 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jsr      LC8F9                         ; 0x4af0 $CAE0 20 F9 C8                 ;
jmp      LCB35                         ; 0x4af3 $CAE3 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Varalys__code                                                         ;
;lda        $60                                                                ; 0x4af6 $CAE6 AD 60 00                 ;
lda        !$60                                                                ;
and      $61                           ; 0x4af9 $CAE9 25 61                    ;;FF=got ring 			(appears in ITEM)
and      $62                           ; 0x4afb $CAEB 25 62                    ;;FF=got ruby			(appears in ITEM)
bne      LCAF8                         ; 0x4afd $CAED D0 09                    ;
;6F0 	Enemy 0 - OffscreenTimerOffset    4                                      ;
ldy      #$04                          ; 0x4aff $CAEF A0 04                    ;;Y = #$04 0000_0100
lda      #$FF                          ; 0x4b01 $CAF1 A9 FF                    ;;A = #$ff 1111_1111
sta      ($8B),y                       ; 0x4b03 $CAF3 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCB35                         ; 0x4b05 $CAF5 4C 35 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAF8                                                                          ;
;something                                                                     ;
jsr      LCB6B                         ; 0x4b08 $CAF8 20 6B CB                 ;
beq      LCB11                         ; 0x4b0b $CAFB F0 14                    ;
;6ED 	Enemy 0 - XPosOffset              1                                      ;
ldy      #$01                          ; 0x4b0d $CAFD A0 01                    ;;Y = #$01 0000_0001
lda      #$14                          ; 0x4b0f $CAFF A9 14                    ;;A = #$14 0001_0100
jsr      RNG_get_random_number__A_is_max; 0x4b11 $CB01 20 8E 96                ;
sta      ($8B),y                       ; 0x4b14 $CB04 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6EE 	Enemy 0 - YPosOffset              2                                      ;
iny                                    ; 0x4b16 $CB06 C8                       ;
lda      #$12                          ; 0x4b17 $CB07 A9 12                    ;;A = #$12 0001_0010
jsr      RNG_get_random_number__A_is_max; 0x4b19 $CB09 20 8E 96                ;
sta      ($8B),y                       ; 0x4b1c $CB0C 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
jmp      LCAF8                         ; 0x4b1e $CB0E 4C F8 CA                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB11                                                                          ;
;6EF 	Enemy 0 - Unknown1Offset          3                                      ;
ldy      #$03                          ; 0x4b21 $CB11 A0 03                    ;;Y = #$03 0000_0011
lda      #$00                          ; 0x4b23 $CB13 A9 00                    ;;A = #$00 0000_0000
sta      ($8B),y                       ; 0x4b25 $CB15 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F0 	Enemy 0 - OffscreenTimerOffset    4                                      ;
iny                                    ; 0x4b27 $CB17 C8                       ;
sta      ($8B),y                       ; 0x4b28 $CB18 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F1 	Enemy 0 - DirectionOffset         5                                      ;
iny                                    ; 0x4b2a $CB1A C8                       ;
sta      ($8B),y                       ; 0x4b2b $CB1B 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F2 	Enemy 0 - NextActionTimerOffset   6                                      ;
iny                                    ; 0x4b2d $CB1D C8                       ;
sta      ($8B),y                       ; 0x4b2e $CB1E 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F3 	Enemy 0 - AnimationTimerOffset    7                                      ;
iny                                    ; 0x4b30 $CB20 C8                       ;
sta      ($8B),y                       ; 0x4b31 $CB21 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F4 	Enemy 0 - HPOffset                8                                      ;
iny                                    ; 0x4b33 $CB23 C8                       ;
lda      $72                           ; 0x4b34 $CB24 A5 72                    ;;HP for monster, maybe?? (monster 13:	;VARALYS)
sta      ($8B),y                       ; 0x4b36 $CB26 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;6F5 	Enemy 0 - Unknown2Offset          9                                      ;
iny                                    ; 0x4b38 $CB28 C8                       ;
lda      #$1E                          ; 0x4b39 $CB29 A9 1E                    ;;A = #$1e 0001_1110
jsr      RNG_get_random_number__A_is_max; 0x4b3b $CB2B 20 8E 96                ;
adc      #$1E                          ; 0x4b3e $CB2E 69 1E                    ;
sta      ($8B),y                       ; 0x4b40 $CB30 91 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
;something                                                                     ;
jsr      LC8F9                         ; 0x4b42 $CB32 20 F9 C8                 ;
LCB35                                                                          ;
;increment to next monster variable set (0xA bytes per monster)                ;
lda      $8B                           ; 0x4b45 $CB35 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x4b47 $CB37 18                       ;
adc      #$0A                          ; 0x4b48 $CB38 69 0A                    ;
sta      $8B                           ; 0x4b4a $CB3A 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x4b4c $CB3C A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x4b4e $CB3E 69 00                    ;
sta      $8C                           ; 0x4b50 $CB40 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
;something                                                                     ;
inc      $89                           ; 0x4b52 $CB42 E6 89                    ;
lda      $89                           ; 0x4b54 $CB44 A5 89                    ;
cmp      $8A                           ; 0x4b56 $CB46 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bpl      LCB62                         ; 0x4b58 $CB48 10 18                    ;
jmp      LC9D1                         ; 0x4b5a $CB4A 4C D1 C9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB4D                                                                          ;
ldy      #$00                          ; 0x4b5d $CB4D A0 00                    ;;Y = #$00 0000_0000
LCB4F                                                                          ;
lda      $06EC,y                       ; 0x4b5f $CB4F B9 EC 06                 ;;Enemy 0 - TypeOffset              0
tax                                    ; 0x4b62 $CB52 AA                       ;
lda      $073C,y                       ; 0x4b63 $CB53 B9 3C 07                 ;;Enemy 0 - TypeOffset              0	(offscreen)
sta      $06EC,y                       ; 0x4b66 $CB56 99 EC 06                 ;;Enemy 0 - TypeOffset              0
txa                                    ; 0x4b69 $CB59 8A                       ;
sta      $073C,y                       ; 0x4b6a $CB5A 99 3C 07                 ;;Enemy 0 - TypeOffset              0	(offscreen)
iny                                    ; 0x4b6d $CB5D C8                       ;
cpy      #$50                          ; 0x4b6e $CB5E C0 50                    ;
bmi      LCB4F                         ; 0x4b70 $CB60 30 ED                    ;
LCB62                                                                          ;
lda      $4D                           ; 0x4b72 $CB62 A5 4D                    ;
sta      $4E                           ; 0x4b74 $CB64 85 4E                    ;
lda      $47                           ; 0x4b76 $CB66 A5 47                    ;;player CurrentArea       
sta      $4D                           ; 0x4b78 $CB68 85 4D                    ;
rts                                    ; 0x4b7a $CB6A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB6B                                                                          ;
jsr      LC79E                         ; 0x4b7b $CB6B 20 9E C7                 ;
lda      LCB7D,x                       ; 0x4b7e $CB6E BD 7D CB                 ;
sta      L0000                         ; 0x4b81 $CB71 85 00                    ;
lda      LCB7D+$01,x                   ; 0x4b83 $CB73 BD 7E CB                 ;
sta      $01                           ; 0x4b86 $CB76 85 01                    ;
ldy      #$00                          ; 0x4b88 $CB78 A0 00                    ;;Y = #$00 0000_0000
jmp      (L0000)                       ; 0x4b8a $CB7A 6C 00 00                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB7D                                                                          ;
.word    LCBA9                         ; 0x4b8d $CB7D A9 CB                    ;
.word    LCBA9                         ; 0x4b8f $CB7F A9 CB                    ;
.word    LCBA9                         ; 0x4b91 $CB81 A9 CB                    ;
.word    LCBA9                         ; 0x4b93 $CB83 A9 CB                    ;
.word    LCBA9                         ; 0x4b95 $CB85 A9 CB                    ;
.word    LCBA9                         ; 0x4b97 $CB87 A9 CB                    ;
.word    LCBCD                         ; 0x4b99 $CB89 CD CB                    ;
.word    LCBB2                         ; 0x4b9b $CB8B B2 CB                    ;
.word    LCBD4                         ; 0x4b9d $CB8D D4 CB                    ;
.word    LCBA9                         ; 0x4b9f $CB8F A9 CB                    ;
.word    LCBD4                         ; 0x4ba1 $CB91 D4 CB                    ;
.word    LCBDD                         ; 0x4ba3 $CB93 DD CB                    ;
.word    LCBF0                         ; 0x4ba5 $CB95 F0 CB                    ;
.word    LCC0A                         ; 0x4ba7 $CB97 0A CC                    ;
.word    LCC2B                         ; 0x4ba9 $CB99 2B CC                    ;
.word    LCC32                         ; 0x4bab $CB9B 32 CC                    ;
.word    LCC24                         ; 0x4bad $CB9D 24 CC                    ;
.word    LCC3E                         ; 0x4baf $CB9F 3E CC                    ;
.word    LCC41                         ; 0x4bb1 $CBA1 41 CC                    ;
.word    LCC49                         ; 0x4bb3 $CBA3 49 CC                    ;
.word    LCBA9                         ; 0x4bb5 $CBA5 A9 CB                    ;
.word    LCBA9                         ; 0x4bb7 $CBA7 A9 CB                    ;
; ---------------------------------------------------------------------------- ;
LCBA9                                                                          ;
ldy      #$00                          ; 0x4bb9 $CBA9 A0 00                    ;;Y = #$00 0000_0000
jsr      LCBB2                         ; 0x4bbb $CBAB 20 B2 CB                 ;
bne      LCBCA                         ; 0x4bbe $CBAE D0 1A                    ;
ldy      #$16                          ; 0x4bc0 $CBB0 A0 16                    ;;Y = #$16 0001_0110
LCBB2                                                                          ;
lda      ($0E),y                       ; 0x4bc2 $CBB2 B1 0E                    ;
cmp      $8F                           ; 0x4bc4 $CBB4 C5 8F                    ;
beq      LCBBC                         ; 0x4bc6 $CBB6 F0 04                    ;
cmp      $90                           ; 0x4bc8 $CBB8 C5 90                    ;
bne      LCBCA                         ; 0x4bca $CBBA D0 0E                    ;
LCBBC                                                                          ;
iny                                    ; 0x4bcc $CBBC C8                       ;
LCBBD                                                                          ;
lda      ($0E),y                       ; 0x4bcd $CBBD B1 0E                    ;
cmp      $8F                           ; 0x4bcf $CBBF C5 8F                    ;
beq      LCBC7                         ; 0x4bd1 $CBC1 F0 04                    ;
cmp      $90                           ; 0x4bd3 $CBC3 C5 90                    ;
bne      LCBCA                         ; 0x4bd5 $CBC5 D0 03                    ;
LCBC7                                                                          ;
lda      #$00                          ; 0x4bd7 $CBC7 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4bd9 $CBC9 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBCA                                                                          ;
lda      #$FF                          ; 0x4bda $CBCA A9 FF                    ;;A = #$ff 1111_1111
rts                                    ; 0x4bdc $CBCC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBCD                                                                          ;
lda      $75                           ; 0x4bdd $CBCD A5 75                    ;
beq      LCBA9                         ; 0x4bdf $CBCF F0 D8                    ;
lda      #$FF                          ; 0x4be1 $CBD1 A9 FF                    ;;A = #$ff 1111_1111
rts                                    ; 0x4be3 $CBD3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBD4                                                                          ;
jsr      LCBBD                         ; 0x4be4 $CBD4 20 BD CB                 ;
bne      LCBCA                         ; 0x4be7 $CBD7 D0 F1                    ;
ldy      #$16                          ; 0x4be9 $CBD9 A0 16                    ;;Y = #$16 0001_0110
bne      LCBBD                         ; 0x4beb $CBDB D0 E0                    ;
LCBDD                                                                          ;
lda      $5E                           ; 0x4bed $CBDD A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
beq      LCBCA                         ; 0x4bef $CBDF F0 E9                    ;
lda      $66                           ; 0x4bf1 $CBE1 A5 66                    ;;FF=got fairy 3 (appears in ITEM)
bne      LCBCA                         ; 0x4bf3 $CBE3 D0 E5                    ;
ldy      #$01                          ; 0x4bf5 $CBE5 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4bf7 $CBE7 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$08                          ; 0x4bf9 $CBE9 C9 08                    ;
bpl      LCBCA                         ; 0x4bfb $CBEB 10 DD                    ;
jmp      LCBA9                         ; 0x4bfd $CBED 4C A9 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBF0                                                                          ;
ldy      #$01                          ; 0x4c00 $CBF0 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4c02 $CBF2 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$02                          ; 0x4c04 $CBF4 C9 02                    ;
bmi      LCBCA                         ; 0x4c06 $CBF6 30 D2                    ;
cmp      #$13                          ; 0x4c08 $CBF8 C9 13                    ;
bpl      LCBCA                         ; 0x4c0a $CBFA 10 CE                    ;
iny                                    ; 0x4c0c $CBFC C8                       ;
lda      ($8B),y                       ; 0x4c0d $CBFD B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$08                          ; 0x4c0f $CBFF C9 08                    ;
bmi      LCBCA                         ; 0x4c11 $CC01 30 C7                    ;
cmp      #$13                          ; 0x4c13 $CC03 C9 13                    ;
bpl      LCBCA                         ; 0x4c15 $CC05 10 C3                    ;
jmp      LCBA9                         ; 0x4c17 $CC07 4C A9 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC0A                                                                          ;
ldy      #$01                          ; 0x4c1a $CC0A A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4c1c $CC0C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$02                          ; 0x4c1e $CC0E C9 02                    ;
bmi      LCBCA                         ; 0x4c20 $CC10 30 B8                    ;
cmp      #$0E                          ; 0x4c22 $CC12 C9 0E                    ;
bpl      LCBCA                         ; 0x4c24 $CC14 10 B4                    ;
iny                                    ; 0x4c26 $CC16 C8                       ;
lda      ($8B),y                       ; 0x4c27 $CC17 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$08                          ; 0x4c29 $CC19 C9 08                    ;
bmi      LCBCA                         ; 0x4c2b $CC1B 30 AD                    ;
cmp      #$13                          ; 0x4c2d $CC1D C9 13                    ;
bpl      LCBCA                         ; 0x4c2f $CC1F 10 A9                    ;
jmp      LCBA9                         ; 0x4c31 $CC21 4C A9 CB                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC24                                                                          ;
jsr      LCC2B                         ; 0x4c34 $CC24 20 2B CC                 ;
bne      LCC3B                         ; 0x4c37 $CC27 D0 12                    ;
ldy      #$16                          ; 0x4c39 $CC29 A0 16                    ;;Y = #$16 0001_0110
LCC2B                                                                          ;
lda      ($0E),y                       ; 0x4c3b $CC2B B1 0E                    ;
and      #$40                          ; 0x4c3d $CC2D 29 40                    ;;Keep Bits:0100_0000
bne      LCC3B                         ; 0x4c3f $CC2F D0 0A                    ;
iny                                    ; 0x4c41 $CC31 C8                       ;
LCC32                                                                          ;
lda      ($0E),y                       ; 0x4c42 $CC32 B1 0E                    ;
and      #$40                          ; 0x4c44 $CC34 29 40                    ;;Keep Bits:0100_0000
bne      LCC3B                         ; 0x4c46 $CC36 D0 03                    ;
LCC38                                                                          ;
lda      #$00                          ; 0x4c48 $CC38 A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4c4a $CC3A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC3B                                                                          ;
lda      #$FF                          ; 0x4c4b $CC3B A9 FF                    ;;A = #$ff 1111_1111
rts                                    ; 0x4c4d $CC3D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC3E                                                                          ;
lda      #$00                          ; 0x4c4e $CC3E A9 00                    ;;A = #$00 0000_0000
rts                                    ; 0x4c50 $CC40 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC41                                                                          ;
lda      $5D                           ; 0x4c51 $CC41 A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
ora      $63                           ; 0x4c53 $CC43 05 63                    ;;FF=makes the wall surrounding castle disappear
bne      LCC3B                         ; 0x4c55 $CC45 D0 F4                    ;
beq      LCC38                         ; 0x4c57 $CC47 F0 EF                    ;
LCC49                                                                          ;
ldy      #$00                          ; 0x4c59 $CC49 A0 00                    ;;Y = #$00 0000_0000
jsr      LCC59                         ; 0x4c5b $CC4B 20 59 CC                 ;
bne      LCC3B                         ; 0x4c5e $CC4E D0 EB                    ;
ldy      #$16                          ; 0x4c60 $CC50 A0 16                    ;;Y = #$16 0001_0110
jsr      LCC59                         ; 0x4c62 $CC52 20 59 CC                 ;
bne      LCC3B                         ; 0x4c65 $CC55 D0 E4                    ;
ldy      #$2C                          ; 0x4c67 $CC57 A0 2C                    ;;Y = #$2c 0010_1100
LCC59                                                                          ;
lda      ($0E),y                       ; 0x4c69 $CC59 B1 0E                    ;
cmp      $8F                           ; 0x4c6b $CC5B C5 8F                    ;
beq      LCC63                         ; 0x4c6d $CC5D F0 04                    ;
cmp      $90                           ; 0x4c6f $CC5F C5 90                    ;
bne      LCC3B                         ; 0x4c71 $CC61 D0 D8                    ;
LCC63                                                                          ;
iny                                    ; 0x4c73 $CC63 C8                       ;
lda      ($0E),y                       ; 0x4c74 $CC64 B1 0E                    ;
cmp      $8F                           ; 0x4c76 $CC66 C5 8F                    ;
beq      LCC6E                         ; 0x4c78 $CC68 F0 04                    ;
cmp      $90                           ; 0x4c7a $CC6A C5 90                    ;
bne      LCC3B                         ; 0x4c7c $CC6C D0 CD                    ;
LCC6E                                                                          ;
iny                                    ; 0x4c7e $CC6E C8                       ;
lda      ($0E),y                       ; 0x4c7f $CC6F B1 0E                    ;
cmp      $8F                           ; 0x4c81 $CC71 C5 8F                    ;
beq      LCC38                         ; 0x4c83 $CC73 F0 C3                    ;
cmp      $90                           ; 0x4c85 $CC75 C5 90                    ;
bne      LCC3B                         ; 0x4c87 $CC77 D0 C2                    ;
beq      LCC38                         ; 0x4c89 $CC79 F0 BD                    ;
LCC7B                                                                          ;
ldy      #$01                          ; 0x4c8b $CC7B A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4c8d $CC7D B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4c8f $CC7F 0A                       ;
asl                                    ; 0x4c90 $CC80 0A                       ;
asl                                    ; 0x4c91 $CC81 0A                       ;
adc      #$08                          ; 0x4c92 $CC82 69 08                    ;
sta      $A8                           ; 0x4c94 $CC84 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
iny                                    ; 0x4c96 $CC86 C8                       ;
lda      ($8B),y                       ; 0x4c97 $CC87 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4c99 $CC89 0A                       ;
asl                                    ; 0x4c9a $CC8A 0A                       ;
asl                                    ; 0x4c9b $CC8B 0A                       ;
adc      #$0F                          ; 0x4c9c $CC8C 69 0F                    ;
sta      $A9                           ; 0x4c9e $CC8E 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
ldx      $88                           ; 0x4ca0 $CC90 A6 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
lda      LD176,x                       ; 0x4ca2 $CC92 BD 76 D1                 ;
sta      $AA                           ; 0x4ca5 $CC95 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      LD18C,x                       ; 0x4ca7 $CC97 BD 8C D1                 ;
sta      $AB                           ; 0x4caa $CC9A 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      $88                           ; 0x4cac $CC9C A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x4cae $CC9E 0A                       ;
tax                                    ; 0x4caf $CC9F AA                       ;
lda      LCCAD,x                       ; 0x4cb0 $CCA0 BD AD CC                 ;
sta      L0000                         ; 0x4cb3 $CCA3 85 00                    ;
lda      LCCAD+$01,x                   ; 0x4cb5 $CCA5 BD AE CC                 ;
sta      $01                           ; 0x4cb8 $CCA8 85 01                    ;
jmp      (L0000)                       ; 0x4cba $CCAA 6C 00 00                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCAD                                                                          ;
.word    LCCD9                         ; 0x4cbd $CCAD D9 CC                    ;
.word    LCCD9                         ; 0x4cbf $CCAF D9 CC                    ;
.word    LCCD9                         ; 0x4cc1 $CCB1 D9 CC                    ;
.word    LCCD9                         ; 0x4cc3 $CCB3 D9 CC                    ;
.word    LCCD9                         ; 0x4cc5 $CCB5 D9 CC                    ;
.word    LCCD9                         ; 0x4cc7 $CCB7 D9 CC                    ;
.word    LCCD9                         ; 0x4cc9 $CCB9 D9 CC                    ;
.word    LCCF7                         ; 0x4ccb $CCBB F7 CC                    ;
.word    LCD0F                         ; 0x4ccd $CCBD 0F CD                    ;
.word    LCD48                         ; 0x4ccf $CCBF 48 CD                    ;
.word    LCD60                         ; 0x4cd1 $CCC1 60 CD                    ;
.word    LCCD9                         ; 0x4cd3 $CCC3 D9 CC                    ;
.word    LCD8B                         ; 0x4cd5 $CCC5 8B CD                    ;
.word    LCD8B                         ; 0x4cd7 $CCC7 8B CD                    ;
.word    LCD90                         ; 0x4cd9 $CCC9 90 CD                    ;
.word    LCDA8                         ; 0x4cdb $CCCB A8 CD                    ;
.word    LCDBE                         ; 0x4cdd $CCCD BE CD                    ;
.word    LCDCB                         ; 0x4cdf $CCCF CB CD                    ;
.word    LCDDF                         ; 0x4ce1 $CCD1 DF CD                    ;
.word    LCE09                         ; 0x4ce3 $CCD3 09 CE                    ;
.word    LCCD9                         ; 0x4ce5 $CCD5 D9 CC                    ;
.word    LCE2D                         ; 0x4ce7 $CCD7 2D CE                    ;
; ---------------------------------------------------------------------------- ;
LCCD9                                                                          ;
;6F3 	Enemy 0 - AnimationTimerOffset    7                                      ;
ldy      #$07                          ; 0x4ce9 $CCD9 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4ceb $CCDB B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$02                          ; 0x4ced $CCDD 29 02                    ;;Keep Bits:0000_0010
asl                                    ; 0x4cef $CCDF 0A                       ;
;6F1 	Enemy 0 - DirectionOffset         5                                      ;
ldy      #$05                          ; 0x4cf0 $CCE0 A0 05                    ;;Y = #$05 0000_0101
clc                                    ; 0x4cf2 $CCE2 18                       ;
adc      ($8B),y                       ; 0x4cf3 $CCE3 71 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4cf5 $CCE5 0A                       ;
asl                                    ; 0x4cf6 $CCE6 0A                       ;
asl                                    ; 0x4cf7 $CCE7 0A                       ;
LCCE8                                                                          ;
tay                                    ; 0x4cf8 $CCE8 A8                       ;
;point ($AC) to $D3D3                                                          ;
lda      #$D3                          ; 0x4cf9 $CCE9 A9 D3                    ;;A = #$d3 1101_0011
sta      $AD                           ; 0x4cfb $CCEB 85 AD                    ;
lda      #$D3                          ; 0x4cfd $CCED A9 D3                    ;;A = #$d3 1101_0011
sta      $AC                           ; 0x4cff $CCEF 85 AC                    ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x4d01 $CCF1 20 8C CE;
jmp      LC8F9                         ; 0x4d04 $CCF4 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCF7                                                                          ;
ldy      #$07                          ; 0x4d07 $CCF7 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4d09 $CCF9 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lsr                                    ; 0x4d0b $CCFB 4A                       ;
and      #$01                          ; 0x4d0c $CCFC 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x4d0e $CCFE 0A                       ;
asl                                    ; 0x4d0f $CCFF 0A                       ;
tay                                    ; 0x4d10 $CD00 A8                       ;
lda      #$D4                          ; 0x4d11 $CD01 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4d13 $CD03 85 AD                    ;
lda      #$13                          ; 0x4d15 $CD05 A9 13                    ;;A = #$13 0001_0011
sta      $AC                           ; 0x4d17 $CD07 85 AC                    ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC; 0x4d19 $CD09 20 8F CE ;
jmp      LC8F9                         ; 0x4d1c $CD0C 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD0F                                                                          ;
ldy      #$05                          ; 0x4d1f $CD0F A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x4d21 $CD11 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4d23 $CD13 0A                       ;
tay                                    ; 0x4d24 $CD14 A8                       ;
lda      #$D4                          ; 0x4d25 $CD15 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4d27 $CD17 85 AD                    ;
lda      #$1B                          ; 0x4d29 $CD19 A9 1B                    ;;A = #$1b 0001_1011
sta      $AC                           ; 0x4d2b $CD1B 85 AC                    ;
jsr      LCEE1                         ; 0x4d2d $CD1D 20 E1 CE                 ;
ldy      #$01                          ; 0x4d30 $CD20 A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4d32 $CD22 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9E                           ; 0x4d34 $CD24 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
iny                                    ; 0x4d36 $CD26 C8                       ;
lda      ($8B),y                       ; 0x4d37 $CD27 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9F                           ; 0x4d39 $CD29 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x4d3b $CD2B 20 B9 DE                 ;
ldy      #$16                          ; 0x4d3e $CD2E A0 16                    ;;Y = #$16 0001_0110
lda      ($0E),y                       ; 0x4d40 $CD30 B1 0E                    ;
and      #$3F                          ; 0x4d42 $CD32 29 3F                    ;;Keep Bits:0011_1111
cmp      #$01                          ; 0x4d44 $CD34 C9 01                    ;
beq      LCD45                         ; 0x4d46 $CD36 F0 0D                    ;
lda      #$FB                          ; 0x4d48 $CD38 A9 FB                    ;;A = #$fb 1111_1011
sta      $AB                           ; 0x4d4a $CD3A 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldy      #$05                          ; 0x4d4c $CD3C A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x4d4e $CD3E B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4d50 $CD40 0A                       ;
tay                                    ; 0x4d51 $CD41 A8                       ;
jsr      LCEE1                         ; 0x4d52 $CD42 20 E1 CE                 ;
LCD45                                                                          ;
jmp      LC8F9                         ; 0x4d55 $CD45 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD48                                                                          ;
;6F3 	Enemy 0 - AnimationTimerOffset    7                                      ;
ldy      #$07                          ; 0x4d58 $CD48 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4d5a $CD4A B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$01                          ; 0x4d5c $CD4C 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x4d5e $CD4E 0A                       ;
asl                                    ; 0x4d5f $CD4F 0A                       ;
asl                                    ; 0x4d60 $CD50 0A                       ;
tay                                    ; 0x4d61 $CD51 A8                       ;
;point ($AC) to $D423	sprite data                                              ;
lda      #$D4                          ; 0x4d62 $CD52 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4d64 $CD54 85 AD                    ;
lda      #$23                          ; 0x4d66 $CD56 A9 23                    ;;A = #$23 0010_0011
sta      $AC                           ; 0x4d68 $CD58 85 AC                    ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf; 0x4d6a $CD5A 20 8C CE;
jmp      LC8F9                         ; 0x4d6d $CD5D 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD60                                                                          ;
lda      $40                           ; 0x4d70 $CD60 A5 40                    ;;player tile index(of background ppu tiles) at feet 
cmp      #$03                          ; 0x4d72 $CD62 C9 03                    ;
bne      LCD7B                         ; 0x4d74 $CD64 D0 15                    ;
ldy      #$05                          ; 0x4d76 $CD66 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x4d78 $CD68 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4d7a $CD6A 0A                       ;
asl                                    ; 0x4d7b $CD6B 0A                       ;
tay                                    ; 0x4d7c $CD6C A8                       ;
lda      #$D4                          ; 0x4d7d $CD6D A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4d7f $CD6F 85 AD                    ;
lda      #$33                          ; 0x4d81 $CD71 A9 33                    ;;A = #$33 0011_0011
sta      $AC                           ; 0x4d83 $CD73 85 AC                    ;
jsr      LCEDE                         ; 0x4d85 $CD75 20 DE CE                 ;
jmp      LC8F9                         ; 0x4d88 $CD78 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD7B                                                                          ;
lda      #$E7                          ; 0x4d8b $CD7B A9 E7                    ;;A = #$e7 1110_0111
sta      $AB                           ; 0x4d8d $CD7D 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      $A9                           ; 0x4d8f $CD7F A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x4d91 $CD81 18                       ;
adc      #$08                          ; 0x4d92 $CD82 69 08                    ;
sta      $A9                           ; 0x4d94 $CD84 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      #$00                          ; 0x4d96 $CD86 A9 00                    ;;A = #$00 0000_0000
jmp      LCDAF                         ; 0x4d98 $CD88 4C AF CD                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD8B                                                                          ;
lda      #$00                          ; 0x4d9b $CD8B A9 00                    ;;A = #$00 0000_0000
jmp      LCCE8                         ; 0x4d9d $CD8D 4C E8 CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD90                                                                          ;
ldy      #$07                          ; 0x4da0 $CD90 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4da2 $CD92 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lsr                                    ; 0x4da4 $CD94 4A                       ;
and      #$01                          ; 0x4da5 $CD95 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x4da7 $CD97 0A                       ;
asl                                    ; 0x4da8 $CD98 0A                       ;
tay                                    ; 0x4da9 $CD99 A8                       ;
lda      #$D4                          ; 0x4daa $CD9A A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4dac $CD9C 85 AD                    ;
lda      #$4B                          ; 0x4dae $CD9E A9 4B                    ;;A = #$4b 0100_1011
sta      $AC                           ; 0x4db0 $CDA0 85 AC                    ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC; 0x4db2 $CDA2 20 8F CE ;
jmp      LC8F9                         ; 0x4db5 $CDA5 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCDA8                                                                          ;
ldy      #$07                          ; 0x4db8 $CDA8 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4dba $CDAA B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$01                          ; 0x4dbc $CDAC 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x4dbe $CDAE 0A                       ;
LCDAF                                                                          ;
tay                                    ; 0x4dbf $CDAF A8                       ;
lda      #$D4                          ; 0x4dc0 $CDB0 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4dc2 $CDB2 85 AD                    ;
lda      #$53                          ; 0x4dc4 $CDB4 A9 53                    ;;A = #$53 0101_0011
sta      $AC                           ; 0x4dc6 $CDB6 85 AC                    ;
jsr      LCEE1                         ; 0x4dc8 $CDB8 20 E1 CE                 ;
jmp      LC8F9                         ; 0x4dcb $CDBB 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCDBE                                                                          ;
ldy      #$07                          ; 0x4dce $CDBE A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4dd0 $CDC0 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lsr                                    ; 0x4dd2 $CDC2 4A                       ;
and      #$01                          ; 0x4dd3 $CDC3 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x4dd5 $CDC5 0A                       ;
asl                                    ; 0x4dd6 $CDC6 0A                       ;
asl                                    ; 0x4dd7 $CDC7 0A                       ;
jmp      LCCE8                         ; 0x4dd8 $CDC8 4C E8 CC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCDCB                                                                          ;
ldy      #$07                          ; 0x4ddb $CDCB A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4ddd $CDCD B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lsr                                    ; 0x4ddf $CDCF 4A                       ;
and      #$01                          ; 0x4de0 $CDD0 29 01                    ;;Keep Bits:0000_0001
asl                                    ; 0x4de2 $CDD2 0A                       ;
tay                                    ; 0x4de3 $CDD3 A8                       ;
lda      #$D4                          ; 0x4de4 $CDD4 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4de6 $CDD6 85 AD                    ;
lda      #$53                          ; 0x4de8 $CDD8 A9 53                    ;;A = #$53 0101_0011
sta      $AC                           ; 0x4dea $CDDA 85 AC                    ;
jmp      LCEE1                         ; 0x4dec $CDDC 4C E1 CE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCDDF                                                                          ;
ldy      #$07                          ; 0x4def $CDDF A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4df1 $CDE1 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$02                          ; 0x4df3 $CDE3 29 02                    ;;Keep Bits:0000_0010
tax                                    ; 0x4df5 $CDE5 AA                       ;
ldy      #$05                          ; 0x4df6 $CDE6 A0 05                    ;;Y = #$05 0000_0101
lda      ($8B),y                       ; 0x4df8 $CDE8 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
cmp      #$01                          ; 0x4dfa $CDEA C9 01                    ;
beq      LCDEF                         ; 0x4dfc $CDEC F0 01                    ;
inx                                    ; 0x4dfe $CDEE E8                       ;
LCDEF                                                                          ;
txa                                    ; 0x4dff $CDEF 8A                       ;
asl                                    ; 0x4e00 $CDF0 0A                       ;
sta      $08                           ; 0x4e01 $CDF1 85 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x4e03 $CDF3 0A                       ;
adc      $08                           ; 0x4e04 $CDF4 65 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x4e06 $CDF6 0A                       ;
tay                                    ; 0x4e07 $CDF7 A8                       ;
lda      #$D4                          ; 0x4e08 $CDF8 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4e0a $CDFA 85 AD                    ;
lda      #$67                          ; 0x4e0c $CDFC A9 67                    ;;A = #$67 0110_0111
sta      $AC                           ; 0x4e0e $CDFE 85 AC                    ;
jsr      LCF0D                         ; 0x4e10 $CE00 20 0D CF                 ;
jsr      LCF0D                         ; 0x4e13 $CE03 20 0D CF                 ;
jmp      LC8F9                         ; 0x4e16 $CE06 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCE09                                                                          ;
ldy      #$07                          ; 0x4e19 $CE09 A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4e1b $CE0B B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
lsr                                    ; 0x4e1d $CE0D 4A                       ;
and      #$01                          ; 0x4e1e $CE0E 29 01                    ;;Keep Bits:0000_0001
sta      $08                           ; 0x4e20 $CE10 85 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x4e22 $CE12 0A                       ;
asl                                    ; 0x4e23 $CE13 0A                       ;
asl                                    ; 0x4e24 $CE14 0A                       ;
adc      $08                           ; 0x4e25 $CE15 65 08                    ;;save calc'd attack strength to $08 ?
asl                                    ; 0x4e27 $CE17 0A                       ;
tay                                    ; 0x4e28 $CE18 A8                       ;
lda      #$D4                          ; 0x4e29 $CE19 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x4e2b $CE1B 85 AD                    ;
lda      #$97                          ; 0x4e2d $CE1D A9 97                    ;;A = #$97 1001_0111
sta      $AC                           ; 0x4e2f $CE1F 85 AC                    ;
jsr      LCF0D                         ; 0x4e31 $CE21 20 0D CF                 ;
jsr      LCF0D                         ; 0x4e34 $CE24 20 0D CF                 ;
jsr      LCF0D                         ; 0x4e37 $CE27 20 0D CF                 ;
jmp      LC8F9                         ; 0x4e3a $CE2A 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCE2D                                                                          ;
ldy      #$01                          ; 0x4e3d $CE2D A0 01                    ;;Y = #$01 0000_0001
lda      ($8B),y                       ; 0x4e3f $CE2F B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9E                           ; 0x4e41 $CE31 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
iny                                    ; 0x4e43 $CE33 C8                       ;
lda      ($8B),y                       ; 0x4e44 $CE34 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $9F                           ; 0x4e46 $CE36 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x4e48 $CE38 20 B9 DE                 ;
ldy      #$16                          ; 0x4e4b $CE3B A0 16                    ;;Y = #$16 0001_0110
lda      ($0E),y                       ; 0x4e4d $CE3D B1 0E                    ;
and      #$3F                          ; 0x4e4f $CE3F 29 3F                    ;;Keep Bits:0011_1111
sta      $08                           ; 0x4e51 $CE41 85 08                    ;;save calc'd attack strength to $08 ?
iny                                    ; 0x4e53 $CE43 C8                       ;
lda      ($0E),y                       ; 0x4e54 $CE44 B1 0E                    ;
and      #$3F                          ; 0x4e56 $CE46 29 3F                    ;;Keep Bits:0011_1111
sta      $09                           ; 0x4e58 $CE48 85 09                    ;
ldy      #$07                          ; 0x4e5a $CE4A A0 07                    ;;Y = #$07 0000_0111
lda      ($8B),y                       ; 0x4e5c $CE4C B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
and      #$02                          ; 0x4e5e $CE4E 29 02                    ;;Keep Bits:0000_0010
asl                                    ; 0x4e60 $CE50 0A                       ;
ldy      #$05                          ; 0x4e61 $CE51 A0 05                    ;;Y = #$05 0000_0101
clc                                    ; 0x4e63 $CE53 18                       ;
adc      ($8B),y                       ; 0x4e64 $CE54 71 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
asl                                    ; 0x4e66 $CE56 0A                       ;
asl                                    ; 0x4e67 $CE57 0A                       ;
asl                                    ; 0x4e68 $CE58 0A                       ;
tay                                    ; 0x4e69 $CE59 A8                       ;
lda      #$D3                          ; 0x4e6a $CE5A A9 D3                    ;;A = #$d3 1101_0011
sta      $AD                           ; 0x4e6c $CE5C 85 AD                    ;
lda      #$D3                          ; 0x4e6e $CE5E A9 D3                    ;;A = #$d3 1101_0011
sta      $AC                           ; 0x4e70 $CE60 85 AC                    ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC; 0x4e72 $CE62 20 8F CE ;
lda      $08                           ; 0x4e75 $CE65 A5 08                    ;;save calc'd attack strength to $08 ?
cmp      #$01                          ; 0x4e77 $CE67 C9 01                    ;
beq      LCE77                         ; 0x4e79 $CE69 F0 0C                    ;
jsr      LCEE1                         ; 0x4e7b $CE6B 20 E1 CE                 ;
lda      $A9                           ; 0x4e7e $CE6E A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sec                                    ; 0x4e80 $CE70 38                       ;
sbc      #$08                          ; 0x4e81 $CE71 E9 08                    ;
sta      $A9                           ; 0x4e83 $CE73 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
dey                                    ; 0x4e85 $CE75 88                       ;
dey                                    ; 0x4e86 $CE76 88                       ;
LCE77                                                                          ;
lda      $A8                           ; 0x4e87 $CE77 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x4e89 $CE79 18                       ;
adc      #$08                          ; 0x4e8a $CE7A 69 08                    ;
sta      $A8                           ; 0x4e8c $CE7C 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
iny                                    ; 0x4e8e $CE7E C8                       ;
iny                                    ; 0x4e8f $CE7F C8                       ;
lda      $09                           ; 0x4e90 $CE80 A5 09                    ;
cmp      #$01                          ; 0x4e92 $CE82 C9 01                    ;
beq      LCE89                         ; 0x4e94 $CE84 F0 03                    ;
jsr      LCEE1                         ; 0x4e96 $CE86 20 E1 CE                 ;
LCE89                                                                          ;
jmp      LC8F9                         ; 0x4e99 $CE89 4C F9 C8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
SpriteData__Write_To_200__Read_From_Pointer_AC__recursiveSelf                  ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC; 0x4e9c $CE8C 20 8F CE ;
SpriteData__Write_To_200__Read_From_Pointer_AC                                 ;
ldx      $A7                           ; 0x4e9f $CE8F A6 A7                    ;
lda      $A9                           ; 0x4ea1 $CE91 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x4ea3 $CE93 9D 00 02                 ;
inx                                    ; 0x4ea6 $CE96 E8                       ;
lda      ($AC),y                       ; 0x4ea7 $CE97 B1 AC                    ;
iny                                    ; 0x4ea9 $CE99 C8                       ;
clc                                    ; 0x4eaa $CE9A 18                       ;
adc      $AB                           ; 0x4eab $CE9B 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x4ead $CE9D 9D 00 02                 ;
inx                                    ; 0x4eb0 $CEA0 E8                       ;
lda      ($AC),y                       ; 0x4eb1 $CEA1 B1 AC                    ;
iny                                    ; 0x4eb3 $CEA3 C8                       ;
clc                                    ; 0x4eb4 $CEA4 18                       ;
adc      $AA                           ; 0x4eb5 $CEA5 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x4eb7 $CEA7 9D 00 02                 ;
inx                                    ; 0x4eba $CEAA E8                       ;
lda      $A8                           ; 0x4ebb $CEAB A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x4ebd $CEAD 9D 00 02                 ;
inx                                    ; 0x4ec0 $CEB0 E8                       ;
lda      $A9                           ; 0x4ec1 $CEB1 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x4ec3 $CEB3 9D 00 02                 ;
inx                                    ; 0x4ec6 $CEB6 E8                       ;
lda      ($AC),y                       ; 0x4ec7 $CEB7 B1 AC                    ;
iny                                    ; 0x4ec9 $CEB9 C8                       ;
clc                                    ; 0x4eca $CEBA 18                       ;
adc      $AB                           ; 0x4ecb $CEBB 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x4ecd $CEBD 9D 00 02                 ;
inx                                    ; 0x4ed0 $CEC0 E8                       ;
lda      ($AC),y                       ; 0x4ed1 $CEC1 B1 AC                    ;
iny                                    ; 0x4ed3 $CEC3 C8                       ;
clc                                    ; 0x4ed4 $CEC4 18                       ;
adc      $AA                           ; 0x4ed5 $CEC5 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x4ed7 $CEC7 9D 00 02                 ;
inx                                    ; 0x4eda $CECA E8                       ;
lda      $A8                           ; 0x4edb $CECB A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x4edd $CECD 18                       ;
adc      #$08                          ; 0x4ede $CECE 69 08                    ;
sta      $0200,x                       ; 0x4ee0 $CED0 9D 00 02                 ;
inx                                    ; 0x4ee3 $CED3 E8                       ;
stx      $A7                           ; 0x4ee4 $CED4 86 A7                    ;
lda      $A9                           ; 0x4ee6 $CED6 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x4ee8 $CED8 18                       ;
adc      #$08                          ; 0x4ee9 $CED9 69 08                    ;
sta      $A9                           ; 0x4eeb $CEDB 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x4eed $CEDD 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCEDE                                                                          ;
jsr      LCEE1                         ; 0x4eee $CEDE 20 E1 CE                 ;
LCEE1                                                                          ;
ldx      $A7                           ; 0x4ef1 $CEE1 A6 A7                    ;
lda      $A9                           ; 0x4ef3 $CEE3 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x4ef5 $CEE5 9D 00 02                 ;
inx                                    ; 0x4ef8 $CEE8 E8                       ;
lda      ($AC),y                       ; 0x4ef9 $CEE9 B1 AC                    ;
iny                                    ; 0x4efb $CEEB C8                       ;
clc                                    ; 0x4efc $CEEC 18                       ;
adc      $AB                           ; 0x4efd $CEED 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x4eff $CEEF 9D 00 02                 ;
inx                                    ; 0x4f02 $CEF2 E8                       ;
lda      ($AC),y                       ; 0x4f03 $CEF3 B1 AC                    ;
iny                                    ; 0x4f05 $CEF5 C8                       ;
clc                                    ; 0x4f06 $CEF6 18                       ;
adc      $AA                           ; 0x4f07 $CEF7 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x4f09 $CEF9 9D 00 02                 ;
inx                                    ; 0x4f0c $CEFC E8                       ;
lda      $A8                           ; 0x4f0d $CEFD A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x4f0f $CEFF 9D 00 02                 ;
inx                                    ; 0x4f12 $CF02 E8                       ;
stx      $A7                           ; 0x4f13 $CF03 86 A7                    ;
lda      $A9                           ; 0x4f15 $CF05 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x4f17 $CF07 18                       ;
adc      #$08                          ; 0x4f18 $CF08 69 08                    ;
sta      $A9                           ; 0x4f1a $CF0A 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x4f1c $CF0C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF0D                                                                          ;
jsr      SpriteData__Write_To_200__Read_From_Pointer_AC; 0x4f1d $CF0D 20 8F CE ;
lda      $A9                           ; 0x4f20 $CF10 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sec                                    ; 0x4f22 $CF12 38                       ;
sbc      #$08                          ; 0x4f23 $CF13 E9 08                    ;
sta      $A9                           ; 0x4f25 $CF15 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
ldx      $A7                           ; 0x4f27 $CF17 A6 A7                    ;
lda      $A9                           ; 0x4f29 $CF19 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x4f2b $CF1B 9D 00 02                 ;
inx                                    ; 0x4f2e $CF1E E8                       ;
lda      ($AC),y                       ; 0x4f2f $CF1F B1 AC                    ;
iny                                    ; 0x4f31 $CF21 C8                       ;
clc                                    ; 0x4f32 $CF22 18                       ;
adc      $AB                           ; 0x4f33 $CF23 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x4f35 $CF25 9D 00 02                 ;
inx                                    ; 0x4f38 $CF28 E8                       ;
lda      ($AC),y                       ; 0x4f39 $CF29 B1 AC                    ;
iny                                    ; 0x4f3b $CF2B C8                       ;
clc                                    ; 0x4f3c $CF2C 18                       ;
adc      $AA                           ; 0x4f3d $CF2D 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x4f3f $CF2F 9D 00 02                 ;
inx                                    ; 0x4f42 $CF32 E8                       ;
lda      $A8                           ; 0x4f43 $CF33 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x4f45 $CF35 18                       ;
adc      #$10                          ; 0x4f46 $CF36 69 10                    ;
sta      $0200,x                       ; 0x4f48 $CF38 9D 00 02                 ;
inx                                    ; 0x4f4b $CF3B E8                       ;
stx      $A7                           ; 0x4f4c $CF3C 86 A7                    ;
lda      $A9                           ; 0x4f4e $CF3E A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x4f50 $CF40 18                       ;
adc      #$08                          ; 0x4f51 $CF41 69 08                    ;
sta      $A9                           ; 0x4f53 $CF43 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x4f55 $CF45 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF46                                                                          ;
lda      #$06                          ; 0x4f56 $CF46 A9 06                    ;;A = #$06 0000_0110
sta      $8C                           ; 0x4f58 $CF48 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
lda      #$EC                          ; 0x4f5a $CF4A A9 EC                    ;;A = #$ec 1110_1100
sta      $8B                           ; 0x4f5c $CF4C 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      #$00                          ; 0x4f5e $CF4E A9 00                    ;;A = #$00 0000_0000
sta      $89                           ; 0x4f60 $CF50 85 89                    ;
LCF52                                                                          ;
ldy      #$00                          ; 0x4f62 $CF52 A0 00                    ;;Y = #$00 0000_0000
lda      ($8B),y                       ; 0x4f64 $CF54 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
sta      $88                           ; 0x4f66 $CF56 85 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
ldy      #$04                          ; 0x4f68 $CF58 A0 04                    ;;Y = #$04 0000_0100
lda      ($8B),y                       ; 0x4f6a $CF5A B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
bne      LCF61                         ; 0x4f6c $CF5C D0 03                    ;
jsr      LCC7B                         ; 0x4f6e $CF5E 20 7B CC                 ;
LCF61                                                                          ;
lda      $8B                           ; 0x4f71 $CF61 A5 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
clc                                    ; 0x4f73 $CF63 18                       ;
adc      #$0A                          ; 0x4f74 $CF64 69 0A                    ;
sta      $8B                           ; 0x4f76 $CF66 85 8B                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$95 	;(low addy)  ->$8B	
lda      $8C                           ; 0x4f78 $CF68 A5 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
adc      #$00                          ; 0x4f7a $CF6A 69 00                    ;
sta      $8C                           ; 0x4f7c $CF6C 85 8C                    ;;pointer used for address $6EC (is monster 0 variables )	;see:$96 	;(high addy) ->$8C	
inc      $89                           ; 0x4f7e $CF6E E6 89                    ;
lda      $89                           ; 0x4f80 $CF70 A5 89                    ;
cmp      $8A                           ; 0x4f82 $CF72 C5 8A                    ;;enemy / monster: maximum number allowed to exist on this screen? or something?
bmi      LCF52                         ; 0x4f84 $CF74 30 DC                    ;
rts                                    ; 0x4f86 $CF76 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF77                                                                          ;
jsr      L96E4                         ; 0x4f87 $CF77 20 E4 96                 ;
lda      #$C8                          ; 0x4f8a $CF7A A9 C8                    ;;A = #$c8 1100_1000
sta      $A8                           ; 0x4f8c $CF7C 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      #$97                          ; 0x4f8e $CF7E A9 97                    ;;A = #$97 1001_0111
sta      $A9                           ; 0x4f90 $CF80 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
ldx      $88                           ; 0x4f92 $CF82 A6 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
lda      LD176,x                       ; 0x4f94 $CF84 BD 76 D1                 ;
sta      $AA                           ; 0x4f97 $CF87 85 AA                    ;;Sprite Data 4 Bytes: Attributes ??
lda      LD18C,x                       ; 0x4f99 $CF89 BD 8C D1                 ;
sta      $AB                           ; 0x4f9c $CF8C 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
lda      #$4C                          ; 0x4f9e $CF8E A9 4C                    ;;A = #$4c 0100_1100
sta      L0012                         ; 0x4fa0 $CF90 85 12                    ;
lda      $88                           ; 0x4fa2 $CF92 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x4fa4 $CF94 0A                       ;
tax                                    ; 0x4fa5 $CF95 AA                       ;
lda      LCFFB,x                       ; 0x4fa6 $CF96 BD FB CF                 ;
sta      $13                           ; 0x4fa9 $CF99 85 13                    ;
lda      LCFFB+$01,x                   ; 0x4fab $CF9B BD FC CF                 ;
sta      $14                           ; 0x4fae $CF9E 85 14                    ;
ldx      #$D0                          ; 0x4fb0 $CFA0 A2 D0                    ;;X = #$d0 1101_0000
ldy      #$00                          ; 0x4fb2 $CFA2 A0 00                    ;;Y = #$00 0000_0000
jsr      L0012                         ; 0x4fb4 $CFA4 20 12 00                 ;
jsr      Monster__Load_HP_from_Table__index_with_Type; 0x4fb7 $CFA7 20 44 D1   ;
lsr                                    ; 0x4fba $CFAA 4A                       ;
clc                                    ; 0x4fbb $CFAB 18                       ;
adc      #$BF                          ; 0x4fbc $CFAC 69 BF                    ;
sta      $02FF                         ; 0x4fbe $CFAE 8D FF 02                 ;
lda      #$AF                          ; 0x4fc1 $CFB1 A9 AF                    ;;A = #$af 1010_1111
sta      $02FC                         ; 0x4fc3 $CFB3 8D FC 02                 ;
ldy      #$08                          ; 0x4fc6 $CFB6 A0 08                    ;;Y = #$08 0000_1000
lda      ($8B),y                       ; 0x4fc8 $CFB8 B1 8B                    ;;pointer used for address $6EC (is monster 0 variables ) ;see:$95 ;(low addy)  ->$8B	
ldy      #$E2                          ; 0x4fca $CFBA A0 E2                    ;;Y = #$e2 1110_0010
jsr      DrawGraphicBar_Done_SetupLowAddressForPointer00__provide_Y; 0x4fcc $CFBC 20 6A 97;
ldx      #$19                          ; 0x4fcf $CFBF A2 19                    ;;X = #$19 0001_1001
stx      $9E                           ; 0x4fd1 $CFC1 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
ldy      #$15                          ; 0x4fd3 $CFC3 A0 15                    ;;Y = #$15 0001_0101
sty      $9F                           ; 0x4fd5 $CFC5 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$07                          ; 0x4fd7 $CFC7 A9 07                    ;;A = #$07 0000_0111
sta      $A0                           ; 0x4fd9 $CFC9 85 A0                    ;
lda      $88                           ; 0x4fdb $CFCB A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x4fdd $CFCD 0A                       ;
asl                                    ; 0x4fde $CFCE 0A                       ;
asl                                    ; 0x4fdf $CFCF 0A                       ;
sec                                    ; 0x4fe0 $CFD0 38                       ;
sbc      $88                           ; 0x4fe1 $CFD1 E5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
clc                                    ; 0x4fe3 $CFD3 18                       ;
adc      #$3C                          ; 0x4fe4 $CFD4 69 3C                    ;
sta      $0C                           ; 0x4fe6 $CFD6 85 0C                    ;
lda      #$00                          ; 0x4fe8 $CFD8 A9 00                    ;;A = #$00 0000_0000
adc      #$D2                          ; 0x4fea $CFDA 69 D2                    ;
sta      $0D                           ; 0x4fec $CFDC 85 0D                    ;
jsr      L9636                         ; 0x4fee $CFDE 20 36 96                 ;
inc      $9F                           ; 0x4ff1 $CFE1 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$00                          ; 0x4ff3 $CFE3 A9 00                    ;;A = #$00 0000_0000
sta      $0D                           ; 0x4ff5 $CFE5 85 0D                    ;
lda      #$E2                          ; 0x4ff7 $CFE7 A9 E2                    ;;A = #$e2 1110_0010
sta      $0C                           ; 0x4ff9 $CFE9 85 0C                    ;
jsr      L9639                         ; 0x4ffb $CFEB 20 39 96                 ;
inc      $9F                           ; 0x4ffe $CFEE E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$D2                          ; 0x5000 $CFF0 A9 D2                    ;;A = #$d2 1101_0010
sta      $0D                           ; 0x5002 $CFF2 85 0D                    ;
lda      #$D6                          ; 0x5004 $CFF4 A9 D6                    ;;A = #$d6 1101_0110
sta      $0C                           ; 0x5006 $CFF6 85 0C                    ;
jmp      L9639                         ; 0x5008 $CFF8 4C 39 96                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCFFB                                                                          ;
.word    LD027                         ; 0x500b $CFFB 27 D0                    ;00
.word    LD027                         ; 0x500d $CFFD 27 D0                    ;01
.word    LD027                         ; 0x500f $CFFF 27 D0                    ;02
.word    LD027                         ; 0x5011 $D001 27 D0                    ;03
.word    LD027                         ; 0x5013 $D003 27 D0                    ;04
.word    LD027                         ; 0x5015 $D005 27 D0                    ;05
.word    LD027                         ; 0x5017 $D007 27 D0                    ;06
.word    LD032                         ; 0x5019 $D009 32 D0                    ;07
.word    LD03D                         ; 0x501b $D00B 3D D0                    ;08
.word    LD051                         ; 0x501d $D00D 51 D0                    ;09
.word    LD05C                         ; 0x501f $D00F 5C D0                    ;0A
.word    LD027                         ; 0x5021 $D011 27 D0                    ;0B
.word    LD027                         ; 0x5023 $D013 27 D0                    ;0C
.word    LD027                         ; 0x5025 $D015 27 D0                    ;0D
.word    LD067                         ; 0x5027 $D017 67 D0                    ;0E
.word    LD072                         ; 0x5029 $D019 72 D0                    ;0F
.word    LD027                         ; 0x502b $D01B 27 D0                    ;10
.word    LD072                         ; 0x502d $D01D 72 D0                    ;11
.word    LD07D                         ; 0x502f $D01F 7D D0                    ;12
.word    LD088                         ; 0x5031 $D021 88 D0                    ;13
.word    LD027                         ; 0x5033 $D023 27 D0                    ;14
.word    LD027                         ; 0x5035 $D025 27 D0                    ;15
; ---------------------------------------------------------------------------- ;
LD027                                                                          ;
;point ($AC) to $D3D3	sprite data                                              ;
lda      #$D3                          ; 0x5037 $D027 A9 D3                    ;;A = #$d3 1101_0011
sta      $AD                           ; 0x5039 $D029 85 AD                    ;
lda      #$D3                          ; 0x503b $D02B A9 D3                    ;;A = #$d3 1101_0011
sta      $AC                           ; 0x503d $D02D 85 AC                    ;
jmp      LD093                         ; 0x503f $D02F 4C 93 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD032                                                                          ;
;point ($AC) to $D413	sprite data                                              ;
lda      #$D4                          ; 0x5042 $D032 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x5044 $D034 85 AD                    ;
lda      #$13                          ; 0x5046 $D036 A9 13                    ;;A = #$13 0001_0011
sta      $AC                           ; 0x5048 $D038 85 AC                    ;
jmp      LD096                         ; 0x504a $D03A 4C 96 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD03D                                                                          ;
;point ($AC) to $D41B	sprite data                                              ;
lda      #$D4                          ; 0x504d $D03D A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x504f $D03F 85 AD                    ;
lda      #$1B                          ; 0x5051 $D041 A9 1B                    ;;A = #$1b 0001_1011
sta      $AC                           ; 0x5053 $D043 85 AC                    ;
jsr      LD0E4                         ; 0x5055 $D045 20 E4 D0                 ;
lda      #$FB                          ; 0x5058 $D048 A9 FB                    ;;A = #$fb 1111_1011
sta      $AB                           ; 0x505a $D04A 85 AB                    ;;Sprite Data 4 Bytes: tile index ??
ldy      #$00                          ; 0x505c $D04C A0 00                    ;;Y = #$00 0000_0000
jmp      LD0E4                         ; 0x505e $D04E 4C E4 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD051                                                                          ;
;point ($AC) to $D423	sprite data                                              ;
lda      #$D4                          ; 0x5061 $D051 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x5063 $D053 85 AD                    ;
lda      #$23                          ; 0x5065 $D055 A9 23                    ;;A = #$23 0010_0011
sta      $AC                           ; 0x5067 $D057 85 AC                    ;
jmp      LD093                         ; 0x5069 $D059 4C 93 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD05C                                                                          ;
;point ($AC) to $D433	sprite data                                              ;
lda      #$D4                          ; 0x506c $D05C A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x506e $D05E 85 AD                    ;
lda      #$33                          ; 0x5070 $D060 A9 33                    ;;A = #$33 0011_0011
sta      $AC                           ; 0x5072 $D062 85 AC                    ;
jmp      LD0E1                         ; 0x5074 $D064 4C E1 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD067                                                                          ;
;point ($AC) to $D44B	sprite data                                              ;
lda      #$D4                          ; 0x5077 $D067 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x5079 $D069 85 AD                    ;
lda      #$4B                          ; 0x507b $D06B A9 4B                    ;;A = #$4b 0100_1011
sta      $AC                           ; 0x507d $D06D 85 AC                    ;
jmp      LD096                         ; 0x507f $D06F 4C 96 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD072                                                                          ;
;point ($AC) to $D453	sprite data                                              ;
lda      #$D4                          ; 0x5082 $D072 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x5084 $D074 85 AD                    ;
lda      #$53                          ; 0x5086 $D076 A9 53                    ;;A = #$53 0101_0011
sta      $AC                           ; 0x5088 $D078 85 AC                    ;
jmp      LD0E4                         ; 0x508a $D07A 4C E4 D0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD07D                                                                          ;
;point ($AC) to $D467	sprite data                                              ;
lda      #$D4                          ; 0x508d $D07D A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x508f $D07F 85 AD                    ;
lda      #$67                          ; 0x5091 $D081 A9 67                    ;;A = #$67 0110_0111
sta      $AC                           ; 0x5093 $D083 85 AC                    ;
jmp      LD10C                         ; 0x5095 $D085 4C 0C D1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD088                                                                          ;
;point ($AC) to $D497	sprite data                                              ;
lda      #$D4                          ; 0x5098 $D088 A9 D4                    ;;A = #$d4 1101_0100
sta      $AD                           ; 0x509a $D08A 85 AD                    ;
lda      #$97                          ; 0x509c $D08C A9 97                    ;;A = #$97 1001_0111
sta      $AC                           ; 0x509e $D08E 85 AC                    ;
jmp      LD10C                         ; 0x50a0 $D090 4C 0C D1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD093                                                                          ;
jsr      LD096                         ; 0x50a3 $D093 20 96 D0                 ;
LD096                                                                          ;
lda      $A9                           ; 0x50a6 $D096 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x50a8 $D098 9D 00 02                 ;
inx                                    ; 0x50ab $D09B E8                       ;
lda      ($AC),y                       ; 0x50ac $D09C B1 AC                    ;
iny                                    ; 0x50ae $D09E C8                       ;
clc                                    ; 0x50af $D09F 18                       ;
adc      $AB                           ; 0x50b0 $D0A0 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x50b2 $D0A2 9D 00 02                 ;
inx                                    ; 0x50b5 $D0A5 E8                       ;
lda      ($AC),y                       ; 0x50b6 $D0A6 B1 AC                    ;
iny                                    ; 0x50b8 $D0A8 C8                       ;
clc                                    ; 0x50b9 $D0A9 18                       ;
adc      $AA                           ; 0x50ba $D0AA 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x50bc $D0AC 9D 00 02                 ;
inx                                    ; 0x50bf $D0AF E8                       ;
lda      $A8                           ; 0x50c0 $D0B0 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x50c2 $D0B2 9D 00 02                 ;
inx                                    ; 0x50c5 $D0B5 E8                       ;
lda      $A9                           ; 0x50c6 $D0B6 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x50c8 $D0B8 9D 00 02                 ;
inx                                    ; 0x50cb $D0BB E8                       ;
lda      ($AC),y                       ; 0x50cc $D0BC B1 AC                    ;
iny                                    ; 0x50ce $D0BE C8                       ;
clc                                    ; 0x50cf $D0BF 18                       ;
adc      $AB                           ; 0x50d0 $D0C0 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x50d2 $D0C2 9D 00 02                 ;
inx                                    ; 0x50d5 $D0C5 E8                       ;
lda      ($AC),y                       ; 0x50d6 $D0C6 B1 AC                    ;
iny                                    ; 0x50d8 $D0C8 C8                       ;
clc                                    ; 0x50d9 $D0C9 18                       ;
adc      $AA                           ; 0x50da $D0CA 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x50dc $D0CC 9D 00 02                 ;
inx                                    ; 0x50df $D0CF E8                       ;
lda      $A8                           ; 0x50e0 $D0D0 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x50e2 $D0D2 18                       ;
adc      #$08                          ; 0x50e3 $D0D3 69 08                    ;
sta      $0200,x                       ; 0x50e5 $D0D5 9D 00 02                 ;
inx                                    ; 0x50e8 $D0D8 E8                       ;
lda      $A9                           ; 0x50e9 $D0D9 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x50eb $D0DB 18                       ;
adc      #$08                          ; 0x50ec $D0DC 69 08                    ;
sta      $A9                           ; 0x50ee $D0DE 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x50f0 $D0E0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD0E1                                                                          ;
jsr      LD0E4                         ; 0x50f1 $D0E1 20 E4 D0                 ;
LD0E4                                                                          ;
lda      $A9                           ; 0x50f4 $D0E4 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x50f6 $D0E6 9D 00 02                 ;
inx                                    ; 0x50f9 $D0E9 E8                       ;
lda      ($AC),y                       ; 0x50fa $D0EA B1 AC                    ;
iny                                    ; 0x50fc $D0EC C8                       ;
clc                                    ; 0x50fd $D0ED 18                       ;
adc      $AB                           ; 0x50fe $D0EE 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x5100 $D0F0 9D 00 02                 ;
inx                                    ; 0x5103 $D0F3 E8                       ;
lda      ($AC),y                       ; 0x5104 $D0F4 B1 AC                    ;
iny                                    ; 0x5106 $D0F6 C8                       ;
clc                                    ; 0x5107 $D0F7 18                       ;
adc      $AA                           ; 0x5108 $D0F8 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x510a $D0FA 9D 00 02                 ;
inx                                    ; 0x510d $D0FD E8                       ;
lda      $A8                           ; 0x510e $D0FE A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
sta      $0200,x                       ; 0x5110 $D100 9D 00 02                 ;
inx                                    ; 0x5113 $D103 E8                       ;
lda      $A9                           ; 0x5114 $D104 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x5116 $D106 18                       ;
adc      #$08                          ; 0x5117 $D107 69 08                    ;
sta      $A9                           ; 0x5119 $D109 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x511b $D10B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD10C                                                                          ;
jsr      LD10F                         ; 0x511c $D10C 20 0F D1                 ;
LD10F                                                                          ;
jsr      LD096                         ; 0x511f $D10F 20 96 D0                 ;
lda      $A9                           ; 0x5122 $D112 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sec                                    ; 0x5124 $D114 38                       ;
sbc      #$08                          ; 0x5125 $D115 E9 08                    ;
sta      $A9                           ; 0x5127 $D117 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
lda      $A9                           ; 0x5129 $D119 A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
sta      $0200,x                       ; 0x512b $D11B 9D 00 02                 ;
inx                                    ; 0x512e $D11E E8                       ;
lda      ($AC),y                       ; 0x512f $D11F B1 AC                    ;
iny                                    ; 0x5131 $D121 C8                       ;
clc                                    ; 0x5132 $D122 18                       ;
adc      $AB                           ; 0x5133 $D123 65 AB                    ;;Sprite Data 4 Bytes: tile index ??
sta      $0200,x                       ; 0x5135 $D125 9D 00 02                 ;
inx                                    ; 0x5138 $D128 E8                       ;
lda      ($AC),y                       ; 0x5139 $D129 B1 AC                    ;
iny                                    ; 0x513b $D12B C8                       ;
clc                                    ; 0x513c $D12C 18                       ;
adc      $AA                           ; 0x513d $D12D 65 AA                    ;;Sprite Data 4 Bytes: Attributes ??
sta      $0200,x                       ; 0x513f $D12F 9D 00 02                 ;
inx                                    ; 0x5142 $D132 E8                       ;
lda      $A8                           ; 0x5143 $D133 A5 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
clc                                    ; 0x5145 $D135 18                       ;
adc      #$10                          ; 0x5146 $D136 69 10                    ;
sta      $0200,x                       ; 0x5148 $D138 9D 00 02                 ;
inx                                    ; 0x514b $D13B E8                       ;
lda      $A9                           ; 0x514c $D13C A5 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
clc                                    ; 0x514e $D13E 18                       ;
adc      #$08                          ; 0x514f $D13F 69 08                    ;
sta      $A9                           ; 0x5151 $D141 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
rts                                    ; 0x5153 $D143 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Load_HP_from_Table__index_with_Type                                   ;
;Apparently monsters have 2 entries for HP                                     ;
lda      $88                           ; 0x5154 $D144 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x5156 $D146 0A                       ;
tax                                    ; 0x5157 $D147 AA                       ;
lda      Monster__HP_Table,x           ; 0x5158 $D148 BD A2 D1                 ;
rts                                    ; 0x515b $D14B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__Load_HP_SecondEntry_from_Table__index_with_Type                       ;
lda      $88                           ; 0x515c $D14C A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
asl                                    ; 0x515e $D14E 0A                       ;
tax                                    ; 0x515f $D14F AA                       ;
lda      Monster__HP_Table__SecondEntry,x; 0x5160 $D150 BD A3 D1               ;
rts                                    ; 0x5163 $D153 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Monster__LoadFromTable_EXP_Amount_From_Kill                                    ;
;load monster type                                                             ;
lda      $88                           ; 0x5164 $D154 A5 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
;convert to table index:                                                       ;
;move bits left 2 times, then add type again                                   ;
;result will use up to 7 bits: 0xxxxxxx                                        ;
asl                                    ; 0x5166 $D156 0A                       ;
asl                                    ; 0x5167 $D157 0A                       ;
clc                                    ; 0x5168 $D158 18                       ;
adc      $88                           ; 0x5169 $D159 65 88                    ;;save monster's (index=0) "typeOffset"(?) to $88
tax                                    ; 0x516b $D15B AA                       ;
;each monster has 5 entries                                                    ;
;move the table index every 2 levels                                           ;
;therefore exp given is based on your level                                    ;
lda      $3C                           ; 0x516c $D15C A5 3C                    ;;player CurrentLevel      
cmp      #$02                          ; 0x516e $D15E C9 02                    ;
bmi      LD172                         ; 0x5170 $D160 30 10                    ;
inx                                    ; 0x5172 $D162 E8                       ;
cmp      #$04                          ; 0x5173 $D163 C9 04                    ;
bmi      LD172                         ; 0x5175 $D165 30 0B                    ;
inx                                    ; 0x5177 $D167 E8                       ;
cmp      #$06                          ; 0x5178 $D168 C9 06                    ;
bmi      LD172                         ; 0x517a $D16A 30 06                    ;
inx                                    ; 0x517c $D16C E8                       ;
cmp      #$08                          ; 0x517d $D16D C9 08                    ;
bmi      LD172                         ; 0x517f $D16F 30 01                    ;
inx                                    ; 0x5181 $D171 E8                       ;
LD172                                                                          ;
;finally load the exp given from the table                                     ;
lda      Monster_Exp__00_LADYAM_,x     ; 0x5182 $D172 BD CE D1                 ;
rts                                    ; 0x5185 $D175 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD176                                                                          ;
.byt    $03,$02,$02,$03,$03,$03,$01,$01; 0x5186 $D176 03 02 02 03 03 03 01 01  ;;
.byt    $02,$02,$03,$03,$03,$02,$01,$03; 0x518e $D17E 02 02 03 03 03 02 01 03  ;;
.byt    $03,$00,$03,$01,$01,$00        ; 0x5196 $D186 03 00 03 01 01 00        ;;
LD18C                                                                          ;
.byt    $18,$18,$18,$2A,$3C,$4E,$60,$72; 0x519c $D18C 18 18 18 2A 3C 4E 60 72  ;;<N`r
.byt    $74,$77,$7B,$81,$93,$97,$9B,$9F; 0x51a4 $D194 74 77 7B 81 93 97 9B 9F  ;;tw{
.byt    $A1,$A9,$AB,$B7,$3C,$C9        ; 0x51ac $D19C A1 A9 AB B7 3C C9        ;;<
Monster__HP_Table                                                              ;
.byt    $14                            ; 0x51b2 $D1A2 14                       ;;
Monster__HP_Table__SecondEntry                                                 ;
.byt    $10,$17,$16,$35,$28,$1E,$0E,$10; 0x51b3 $D1A3 10 17 16 35 28 1E 0E 10  ;;5(
.byt    $08,$40,$3A,$23,$28,$06,$04,$04; 0x51bb $D1AB 08 40 3A 23 28 06 04 04  ;;@:#(
.byt    $02,$25,$2C,$46,$46,$19,$22,$00; 0x51c3 $D1B3 02 25 2C 46 46 19 22 00  ;;%,FF"
.byt    $00,$00,$00,$0A,$0A,$05,$0A,$15; 0x51cb $D1BB 00 00 00 0A 0A 05 0A 15  ;;
.byt    $14,$02,$32,$4B,$4A,$6E,$6A,$1C; 0x51d3 $D1C3 14 02 32 4B 4A 6E 6A 1C  ;;2KJnj
.byt    $14,$11,$25                    ; 0x51db $D1CB 14 11 25                 ;;%
Monster_Exp__00_LADYAM_                                                        ;
.byt    $05,$01,$00,$00,$00            ; 0x51de $D1CE 05 01 00 00 00           ;;
Monster_Exp__01_GOLDAM_                                                        ;
.byt    $05,$01,$00,$00,$00            ; 0x51e3 $D1D3 05 01 00 00 00           ;;
Monster_Exp__02_BLACKAM                                                        ;
.byt    $0A,$05,$02,$01,$00            ; 0x51e8 $D1D8 0A 05 02 01 00           ;;
Monster_Exp__03_ZOMBIE_                                                        ;
.byt    $02,$02,$01,$00,$00            ; 0x51ed $D1DD 02 02 01 00 00           ;;
Monster_Exp__04_ROPER__                                                        ;
.byt    $02,$01,$00,$00,$00            ; 0x51f2 $D1E2 02 01 00 00 00           ;;
Monster_Exp__05_SKELTON                                                        ;
.byt    $0A,$05,$02,$01,$00            ; 0x51f7 $D1E7 0A 05 02 01 00           ;;
Monster_Exp__06_VAMPIRE                                                        ;
.byt    $14,$0A,$05,$00,$00            ; 0x51fc $D1EC 14 0A 05 00 00           ;;
Monster_Exp__07_SLIME__                                                        ;
.byt    $01,$00,$00,$00,$00            ; 0x5201 $D1F1 01 00 00 00 00           ;;
Monster_Exp__08_KOBOLD_                                                        ;
.byt    $01,$00,$00,$00,$00            ; 0x5206 $D1F6 01 00 00 00 00           ;;
Monster_Exp__09_WORM___                                                        ;
.byt    $05,$02,$01,$00,$00            ; 0x520b $D1FB 05 02 01 00 00           ;;
Monster_Exp__0A_EEL____                                                        ;
.byt    $32,$0A,$05,$02,$00            ; 0x5210 $D200 32 0A 05 02 00           ;;2
Monster_Exp__0B_WIZARD_                                                        ;
.byt    $0A,$02,$01,$00,$00            ; 0x5215 $D205 0A 02 01 00 00           ;;
Monster_Exp__0C_ROCKN__                                                        ;
.byt    $00,$00,$00,$00,$00            ; 0x521a $D20A 00 00 00 00 00           ;;
Monster_Exp__0D_TREEGON                                                        ;
.byt    $00,$00,$00,$00,$00            ; 0x521f $D20F 00 00 00 00 00           ;;
Monster_Exp__0E_STIRGE_                                                        ;
.byt    $02,$00,$00,$00,$00            ; 0x5224 $D214 02 00 00 00 00           ;;
Monster_Exp__0F_WASP___                                                        ;
.byt    $01,$00,$00,$00,$00            ; 0x5229 $D219 01 00 00 00 00           ;;
Monster_Exp__10_WISP___                                                        ;
.byt    $07,$03,$01,$00,$00            ; 0x522e $D21E 07 03 01 00 00           ;;
Monster_Exp__11_FIREBAL                                                        ;
.byt    $00,$00,$00,$00,$00            ; 0x5233 $D223 00 00 00 00 00           ;;
Monster_Exp__12_DRAGON_                                                        ;
.byt    $64,$32,$14,$0A,$05            ; 0x5238 $D228 64 32 14 0A 05           ;;d2
Monster_Exp__13_VARALYS                                                        ;
.byt    $64,$32,$14,$14,$14            ; 0x523d $D22D 64 32 14 14 14           ;;d2
Monster_Exp__14_HYPER__                                                        ;
.byt    $0A,$05,$02,$01,$00            ; 0x5242 $D232 0A 05 02 01 00           ;;
Monster_Exp__15_GOBLIN_                                                        ;
.byt    $0A,$05,$02,$01,$00            ; 0x5247 $D237 0A 05 02 01 00           ;;
                                                                               ;
.byt    $4C,$41,$44,$59,$41,$4D,$40    ; 0x524c $D23C 4C 41 44 59 41 4D 40     ;;LADYAM@
                                                                               ;
.byt    $47,$4F,$4C,$44,$41,$4D,$40    ; 0x5253 $D243 47 4F 4C 44 41 4D 40     ;;GOLDAM@
                                                                               ;
.byt    $42,$4C,$41,$43,$4B,$41,$4D    ; 0x525a $D24A 42 4C 41 43 4B 41 4D     ;;BLACKAM
                                                                               ;
.byt    $5A,$4F,$4D,$42,$49,$45,$40    ; 0x5261 $D251 5A 4F 4D 42 49 45 40     ;;ZOMBIE@
                                                                               ;
.byt    $52,$4F,$50,$45,$52,$40,$40    ; 0x5268 $D258 52 4F 50 45 52 40 40     ;;ROPER@@
                                                                               ;
.byt    $53,$4B,$45,$4C,$54,$4F,$4E    ; 0x526f $D25F 53 4B 45 4C 54 4F 4E     ;;SKELTON
                                                                               ;
.byt    $56,$41,$4D,$50,$49,$52,$45    ; 0x5276 $D266 56 41 4D 50 49 52 45     ;;VAMPIRE
                                                                               ;
.byt    $53,$4C,$49,$4D,$45,$40,$40    ; 0x527d $D26D 53 4C 49 4D 45 40 40     ;;SLIME@@
                                                                               ;
.byt    $4B,$4F,$42,$4F,$4C,$44,$40    ; 0x5284 $D274 4B 4F 42 4F 4C 44 40     ;;KOBOLD@
                                                                               ;
.byt    $57,$4F,$52,$4D,$40,$40,$40    ; 0x528b $D27B 57 4F 52 4D 40 40 40     ;;WORM@@@
                                                                               ;
.byt    $45,$45,$4C,$40,$40,$40,$40    ; 0x5292 $D282 45 45 4C 40 40 40 40     ;;EEL@@@@
                                                                               ;
.byt    $57,$49,$5A,$41,$52,$44,$40    ; 0x5299 $D289 57 49 5A 41 52 44 40     ;;WIZARD@
                                                                               ;
.byt    $52,$4F,$43,$4B,$4E,$40,$40    ; 0x52a0 $D290 52 4F 43 4B 4E 40 40     ;;ROCKN@@
                                                                               ;
.byt    $54,$52,$45,$45,$47,$4F,$4E    ; 0x52a7 $D297 54 52 45 45 47 4F 4E     ;;TREEGON
                                                                               ;
.byt    $53,$54,$49,$52,$47,$45,$40    ; 0x52ae $D29E 53 54 49 52 47 45 40     ;;STIRGE@
                                                                               ;
.byt    $57,$41,$53,$50,$40,$40,$40    ; 0x52b5 $D2A5 57 41 53 50 40 40 40     ;;WASP@@@
                                                                               ;
.byt    $57,$49,$53,$50,$40,$40,$40    ; 0x52bc $D2AC 57 49 53 50 40 40 40     ;;WISP@@@
                                                                               ;
.byt    $46,$49,$52,$45,$42,$41,$4C    ; 0x52c3 $D2B3 46 49 52 45 42 41 4C     ;;FIREBAL
                                                                               ;
.byt    $44,$52,$41,$47,$4F,$4E,$40    ; 0x52ca $D2BA 44 52 41 47 4F 4E 40     ;;DRAGON@
                                                                               ;
.byt    $56,$41,$52,$41,$4C,$59,$53    ; 0x52d1 $D2C1 56 41 52 41 4C 59 53     ;;VARALYS
                                                                               ;
.byt    $48,$59,$50,$45,$52,$40,$40    ; 0x52d8 $D2C8 48 59 50 45 52 40 40     ;;HYPER@@
                                                                               ;
.byt    $47,$4F,$42,$4C,$49,$4E,$40    ; 0x52df $D2CF 47 4F 42 4C 49 4E 40     ;;GOBLIN@
                                                                               ;
.byt    $8E,$8F,$90,$91,$92,$93,$94    ; 0x52e6 $D2D6 8E 8F 90 91 92 93 94     ;;
Table__FirstByte__MaxNumMonstersAllowedToExistOnScreen                         ;
.byt    $04                            ; 0x52ed $D2DD 04                       ;;
; ---------------------------------------------------------------------------- ;
Monster__Pointer_Table__Involving_Offscren_Monster_save__or_other_screenMonsterData__maybe__low_addy ;
Monster__Pointer_Table__Involving_Offscren_Monster_save__or_other_screenMonsterData__maybe__high_addy = * + $0001;
.word    LD346                         ; 0x52ee $D2DE 46 D3                    ;
.word    L4A04                         ; 0x52f0 $D2E0 04 4A                    ;
.word    L04D3                         ; 0x52f2 $D2E2 D3 04                    ;
.word    LD34E                         ; 0x52f4 $D2E4 4E D3                    ;
.word    L5204                         ; 0x52f6 $D2E6 04 52                    ;
.word    L04D3                         ; 0x52f8 $D2E8 D3 04                    ;
.word    LD356                         ; 0x52fa $D2EA 56 D3                    ;
.word    L5A08                         ; 0x52fc $D2EC 08 5A                    ;
.word    L04D3                         ; 0x52fe $D2EE D3 04                    ;
.word    LD362                         ; 0x5300 $D2F0 62 D3                    ;
.word    L6604                         ; 0x5302 $D2F2 04 66                    ;
.word    L04D3                         ; 0x5304 $D2F4 D3 04                    ;
.word    LD36A                         ; 0x5306 $D2F6 6A D3                    ;
.word    L6E04                         ; 0x5308 $D2F8 04 6E                    ;
.word    L04D3                         ; 0x530a $D2FA D3 04                    ;
.word    LD372                         ; 0x530c $D2FC 72 D3                    ;
.word    L7604                         ; 0x530e $D2FE 04 76                    ;
.word    L04D3                         ; 0x5310 $D300 D3 04                    ;
.word    LD37A                         ; 0x5312 $D302 7A D3                    ;
.word    L7E04                         ; 0x5314 $D304 04 7E                    ;
.word    L04D3                         ; 0x5316 $D306 D3 04                    ;
.word    LD382                         ; 0x5318 $D308 82 D3                    ;
.word    L8604                         ; 0x531a $D30A 04 86                    ;
.word    L04D3                         ; 0x531c $D30C D3 04                    ;
.word    LD38A                         ; 0x531e $D30E 8A D3                    ;
.word    L8E03                         ; 0x5320 $D310 03 8E                    ;
.word    L05D3                         ; 0x5322 $D312 D3 05                    ;
.word    LD391                         ; 0x5324 $D314 91 D3                    ;
.word    L9604                         ; 0x5326 $D316 04 96                    ;
.word    L04D3                         ; 0x5328 $D318 D3 04                    ;
.word    LD39A                         ; 0x532a $D31A 9A D3                    ;
.word    L9E04                         ; 0x532c $D31C 04 9E                    ;
.word    L04D3                         ; 0x532e $D31E D3 04                    ;
.word    LD3A2                         ; 0x5330 $D320 A2 D3                    ;
.word    LA604                         ; 0x5332 $D322 04 A6                    ;
.word    L04D3                         ; 0x5334 $D324 D3 04                    ;
.word    LD3AA                         ; 0x5336 $D326 AA D3                    ;
.word    LAE04                         ; 0x5338 $D328 04 AE                    ;
.word    L04D3                         ; 0x533a $D32A D3 04                    ;
.word    LD3B2                         ; 0x533c $D32C B2 D3                    ;
.word    LB603                         ; 0x533e $D32E 03 B6                    ;
.word    L03D3                         ; 0x5340 $D330 D3 03                    ;
.word    LD3B9                         ; 0x5342 $D332 B9 D3                    ;
.word    LBC03                         ; 0x5344 $D334 03 BC                    ;
.word    L03D3                         ; 0x5346 $D336 D3 03                    ;
.word    LD3BF                         ; 0x5348 $D338 BF D3                    ;
.word    LC203                         ; 0x534a $D33A 03 C2                    ;
.word    L04D3                         ; 0x534c $D33C D3 04                    ;
.word    LD3C5                         ; 0x534e $D33E C5 D3                    ;
.word    LC906                         ; 0x5350 $D340 06 C9                    ;
.word    L04D3                         ; 0x5352 $D342 D3 04                    ;
.word    LD3CF                         ; 0x5354 $D344 CF D3                    ;
; ---------------------------------------------------------------------------- ;
LD346                                                                          ;
.byt    $07,$07,$07,$08,$07,$07,$09,$0A; 0x5356 $D346 07 07 07 08 07 07 09 0A  ;;
LD34E                                                                          ;
.byt    $08,$09,$08,$09,$07,$04,$08,$04; 0x535e $D34E 08 09 08 09 07 04 08 04  ;;
LD356                                                                          ;
.byt    $07,$04,$08,$04,$0F,$0F,$0F,$0F; 0x5366 $D356 07 04 08 04 0F 0F 0F 0F  ;;
.byt    $0F,$0F,$0F,$0F                ; 0x536e $D35E 0F 0F 0F 0F              ;;
LD362                                                                          ;
.byt    $07,$09,$07,$09,$09,$09,$09,$09; 0x5372 $D362 07 09 07 09 09 09 09 09  ;;
LD36A                                                                          ;
.byt    $0D,$0D,$0D,$0D,$07,$03,$03,$03; 0x537a $D36A 0D 0D 0D 0D 07 03 03 03  ;;
LD372                                                                          ;
.byt    $07,$07,$07,$0C,$07,$09,$0A,$09; 0x5382 $D372 07 07 07 0C 07 09 0A 09  ;;
LD37A                                                                          ;
.byt    $07,$09,$0A,$09,$07,$08,$07,$0A; 0x538a $D37A 07 09 0A 09 07 08 07 0A  ;;
LD382                                                                          ;
.byt    $07,$03,$08,$03,$07,$07,$07,$08; 0x5392 $D382 07 03 08 03 07 07 07 08  ;;
LD38A                                                                          ;
.byt    $07,$08,$0A,$08,$14,$0A,$12    ; 0x539a $D38A 07 08 0A 08 14 0A 12     ;;
LD391                                                                          ;
.byt    $07,$0B,$0B,$11,$11,$07,$08,$07; 0x53a1 $D391 07 0B 0B 11 11 07 08 07  ;;
.byt    $08                            ; 0x53a9 $D399 08                       ;;;save calc'd attack strength to $08 ?
LD39A                                                                          ;
.byt    $07,$08,$07,$08,$07,$08,$08,$08; 0x53aa $D39A 07 08 07 08 07 08 08 08  ;;
LD3A2                                                                          ;
.byt    $07,$08,$0A,$08,$07,$04,$08,$04; 0x53b2 $D3A2 07 08 0A 08 07 04 08 04  ;;
LD3AA                                                                          ;
.byt    $07,$04,$04,$04,$0E,$0E,$0E,$0E; 0x53ba $D3AA 07 04 04 04 0E 0E 0E 0E  ;;
LD3B2                                                                          ;
.byt    $0E,$0E,$0E,$06,$01,$01,$01    ; 0x53c2 $D3B2 0E 0E 0E 06 01 01 01     ;;
LD3B9                                                                          ;
.byt    $01,$01,$01,$01,$00,$00        ; 0x53c9 $D3B9 01 01 01 01 00 00        ;;
LD3BF                                                                          ;
.byt    $01,$01,$00,$10,$10,$10        ; 0x53cf $D3BF 01 01 00 10 10 10        ;;
LD3C5                                                                          ;
.byt    $02,$02,$02,$02,$02,$05,$02,$05; 0x53d5 $D3C5 02 02 02 02 02 05 02 05  ;;
.byt    $13,$11                        ; 0x53dd $D3CD 13 11                    ;;
LD3CF                                                                          ;
.byt    $05,$05,$05,$05                ; 0x53df $D3CF 05 05 05 05              ;;
D3D3_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x53e3 $D3D3 00 00 01 00 02 00 03 00  ;;
.byt    $04,$00,$05,$00,$06,$00,$07,$00; 0x53eb $D3DB 04 00 05 00 06 00 07 00  ;;
.byt    $08,$00,$09,$00,$0A,$00,$0B,$00; 0x53f3 $D3E3 08 00 09 00 0A 00 0B 00  ;;
.byt    $05,$40,$04,$40,$07,$40,$06,$40; 0x53fb $D3EB 05 40 04 40 07 40 06 40  ;;@@@@
.byt    $00,$00,$01,$00,$0C,$00,$0D,$00; 0x5403 $D3F3 00 00 01 00 0C 00 0D 00  ;;
.byt    $04,$00,$05,$00,$0E,$00,$0F,$00; 0x540b $D3FB 04 00 05 00 0E 00 0F 00  ;;
.byt    $08,$00,$09,$00,$10,$00,$11,$00; 0x5413 $D403 08 00 09 00 10 00 11 00  ;;
.byt    $05,$40,$04,$40,$0F,$40,$0E,$40; 0x541b $D40B 05 40 04 40 0F 40 0E 40  ;;@@@@
D413_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$01,$40,$00,$40; 0x5423 $D413 00 00 01 00 01 40 00 40  ;;@@
D41B_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$01,$40; 0x542b $D41B 00 00 01 00 02 00 01 40  ;;@
D423_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x5433 $D423 00 00 01 00 02 00 03 00  ;;
.byt    $01,$40,$00,$40,$03,$40,$02,$40; 0x543b $D42B 01 40 00 40 03 40 02 40  ;;@@@@
D433_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x5443 $D433 00 00 01 00 02 00 03 00  ;;
.byt    $04,$00,$05,$00,$02,$40,$03,$40; 0x544b $D43B 04 00 05 00 02 40 03 40  ;;@@
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x5453 $D443 00 00 01 00 02 00 03 00  ;;
D44B_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x545b $D44B 00 00 01 00 02 00 03 00  ;;
D453_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$00,$00,$01,$00; 0x5463 $D453 00 00 01 00 00 00 01 00  ;;
.byt    $02,$00,$03,$00,$04,$00,$05,$00; 0x546b $D45B 02 00 03 00 04 00 05 00  ;;
.byt    $06,$00,$07,$00                ; 0x5473 $D463 06 00 07 00              ;;
D467_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x5477 $D467 00 00 01 00 02 00 03 00  ;;
.byt    $04,$00,$05,$00,$02,$40,$01,$40; 0x547f $D46F 04 00 05 00 02 40 01 40  ;;@@
.byt    $00,$40,$05,$40,$04,$40,$03,$40; 0x5487 $D477 00 40 05 40 04 40 03 40  ;;@@@@
.byt    $06,$00,$07,$00,$08,$00,$09,$00; 0x548f $D47F 06 00 07 00 08 00 09 00  ;;
.byt    $0A,$00,$0B,$00,$08,$40,$07,$40; 0x5497 $D487 0A 00 0B 00 08 40 07 40  ;;@@
.byt    $06,$40,$0B,$40,$0A,$40,$09,$40; 0x549f $D48F 06 40 0B 40 0A 40 09 40  ;;@@@@
D497_SpriteData                                                                ;
.byt    $00,$00,$01,$00,$02,$00,$03,$00; 0x54a7 $D497 00 00 01 00 02 00 03 00  ;;
.byt    $04,$00,$05,$00,$06,$00,$07,$00; 0x54af $D49F 04 00 05 00 06 00 07 00  ;;
.byt    $08,$00,$09,$00,$0A,$00,$0B,$00; 0x54b7 $D4A7 08 00 09 00 0A 00 0B 00  ;;
.byt    $0C,$00,$0D,$00,$0E,$00,$0F,$00; 0x54bf $D4AF 0C 00 0D 00 0E 00 0F 00  ;;
.byt    $10,$00,$11,$00                ; 0x54c7 $D4B7 10 00 11 00              ;;
; ---------------------------------------------------------------------------- ;
LoadScreenCurrent_LoadAndDraw__Sprites__Something                              ;
;copy $4E4-$5E3 ->to-> $300-$3FF                                               ;
ldx      #$00                          ; 0x54cb $D4BB A2 00                    ;;X = #$00 0000_0000
LD4BD                                                                          ;
lda      $04E4,x                       ; 0x54cd $D4BD BD E4 04                 ;;the current screen tile data? 	($0E) points here
sta      $0300,x                       ; 0x54d0 $D4C0 9D 00 03                 ;
inx                                    ; 0x54d3 $D4C3 E8                       ;
bne      LD4BD                         ; 0x54d4 $D4C4 D0 F7                    ;
LD4C6                                                                          ;
;copy $5E4-$6C7 ->to-> $400-$4E3                                               ;
lda      $05E4,x                       ; 0x54d6 $D4C6 BD E4 05                 ;;the current screen tile data?
sta      $0400,x                       ; 0x54d9 $D4C9 9D 00 04                 ;
inx                                    ; 0x54dc $D4CC E8                       ;
cpx      #$E4                          ; 0x54dd $D4CD E0 E4                    ;
bne      LD4C6                         ; 0x54df $D4CF D0 F5                    ;
;something                                                                     ;
lda      #$00                          ; 0x54e1 $D4D1 A9 00                    ;;A = #$00 0000_0000
sta      $4B                           ; 0x54e3 $D4D3 85 4B                    ;
lda      $4A                           ; 0x54e5 $D4D5 A5 4A                    ;
beq      LD50E                         ; 0x54e7 $D4D7 F0 35                    ;
;something                                                                     ;
lda      #$00                          ; 0x54e9 $D4D9 A9 00                    ;;A = #$00 0000_0000
sta      $3F                           ; 0x54eb $D4DB 85 3F                    ;
jsr      ClearAll200__set200toF0__setA7to00; 0x54ed $D4DD 20 7D 96             ;
lda      #$00                          ; 0x54f0 $D4E0 A9 00                    ;;A = #$00 0000_0000
sta      $86                           ; 0x54f2 $D4E2 85 86                    ;;COUNTER (1 bit boolean counter) for changing sprite priority
jsr      OAM_DMA_WRITE__draw_sprites__copy_oam_dma_data; 0x54f4 $D4E4 20 34 95 ;
;this might only occur during hole-going-in??                                  ;
;clear (tile40=blank/black tile square)                                        ;
;	$4E4-$5E3 (set to #$40)                                                      ;
;	$5E4-$6C7 (set to #$40)                                                      ;
ldy      #$00                          ; 0x54f7 $D4E7 A0 00                    ;;Y = #$00 0000_0000
lda      #$40                          ; 0x54f9 $D4E9 A9 40                    ;;A = #$40 0100_0000
LD4EB                                                                          ;
sta      $04E4,y                       ; 0x54fb $D4EB 99 E4 04                 ;
iny                                    ; 0x54fe $D4EE C8                       ;
bne      LD4EB                         ; 0x54ff $D4EF D0 FA                    ;
LD4F1                                                                          ;
sta      $05E4,y                       ; 0x5501 $D4F1 99 E4 05                 ;
iny                                    ; 0x5504 $D4F4 C8                       ;
cpy      #$E4                          ; 0x5505 $D4F5 C0 E4                    ;
bne      LD4F1                         ; 0x5507 $D4F7 D0 F8                    ;
;something: teleport effect maybe????? like the going in hole, the fade in/out effect with the black border surrounding;
lda      #$00                          ; 0x5509 $D4F9 A9 00                    ;;A = #$00 0000_0000
sta      $A3                           ; 0x550b $D4FB 85 A3                    ;
lda      #$14                          ; 0x550d $D4FD A9 14                    ;;A = #$14 0001_0100
sta      $A5                           ; 0x550f $D4FF 85 A5                    ;
lda      #$02                          ; 0x5511 $D501 A9 02                    ;;A = #$02 0000_0010
sta      $08                           ; 0x5513 $D503 85 08                    ;;save calc'd attack strength to $08 ?
lda      #$FE                          ; 0x5515 $D505 A9 FE                    ;;A = #$fe 1111_1110
sta      $09                           ; 0x5517 $D507 85 09                    ;
lda      #$0A                          ; 0x5519 $D509 A9 0A                    ;;A = #$0a 0000_1010
jsr      LDD68                         ; 0x551b $D50B 20 68 DD                 ;
LD50E                                                                          ;
;convert player current area to index for table screen data                    ;
lda      $47                           ; 0x551e $D50E A5 47                    ;;player CurrentArea       
clc                                    ; 0x5520 $D510 18                       ;
asl                                    ; 0x5521 $D511 0A                       ;
tax                                    ; 0x5522 $D512 AA                       ;
;point ($08) to Screen Data                                                    ;
lda      Pointers_Screen_Data,x        ; 0x5523 $D513 BD 00 EC                 ;
sta      $08                           ; 0x5526 $D516 85 08                    ;;save calc'd attack strength to $08 ?
inx                                    ; 0x5528 $D518 E8                       ;
lda      Pointers_Screen_Data,x        ; 0x5529 $D519 BD 00 EC                 ;
sta      $09                           ; 0x552c $D51C 85 09                    ;
lda      #$00                          ; 0x552e $D51E A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5530 $D520 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $9F                           ; 0x5532 $D522 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
Screen_Draw__LoadFromRom_CopyToRam__Loop                                       ;
;load screen data from table indirect                                          ;
ldy      #$00                          ; 0x5534 $D524 A0 00                    ;;Y = #$00 0000_0000
lda      ($08),y                       ; 0x5536 $D526 B1 08                    ;
;increment pointer position                                                    ;
inc      $08                           ; 0x5538 $D528 E6 08                    ;;save calc'd attack strength to $08 ?
bne      LD52E                         ; 0x553a $D52A D0 02                    ;
inc      $09                           ; 0x553c $D52C E6 09                    ;
;store screen data byte to $A1                                                 ;
LD52E                                                                          ;
sta      $A1                           ; 0x553e $D52E 85 A1                    ;
;store screen data byte's low-byte-value to $A2, unless it's 00 then store #$10;
and      #$0F                          ; 0x5540 $D530 29 0F                    ;;Keep Bits:0000_1111
bne      LD536                         ; 0x5542 $D532 D0 02                    ;
lda      #$10                          ; 0x5544 $D534 A9 10                    ;;A = #$10 0001_0000
LD536                                                                          ;
sta      $A2                           ; 0x5546 $D536 85 A2                    ;
;move $A1's value from high-byte to low-byte, and store back to $A1            ;
lda      $A1                           ; 0x5548 $D538 A5 A1                    ;
lsr                                    ; 0x554a $D53A 4A                       ;
lsr                                    ; 0x554b $D53B 4A                       ;
lsr                                    ; 0x554c $D53C 4A                       ;
lsr                                    ; 0x554d $D53D 4A                       ;
sta      $A1                           ; 0x554e $D53E 85 A1                    ;
LD540                                                                          ;
jsr      LD550                         ; 0x5550 $D540 20 50 D5                 ;
dec      $A2                           ; 0x5553 $D543 C6 A2                    ;
bne      LD540                         ; 0x5555 $D545 D0 F9                    ;if $A2 > 0 then loop $D540
lda      $9F                           ; 0x5557 $D547 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5559 $D549 C9 16                    ;
bmi      Screen_Draw__LoadFromRom_CopyToRam__Loop; 0x555b $D54B 30 D7          ;if $9F < #$16 goto $D524
jmp      lD5FA_JumpToRoutine_BasedOn_PlayerCurrentArea; 0x555d $D54D 4C FA D5  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD550                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x5560 $D550 20 B9 DE                 ;
ldy      #$00                          ; 0x5563 $D553 A0 00                    ;;Y = #$00 0000_0000
lda      $A1                           ; 0x5565 $D555 A5 A1                    ;
cmp      #$09                          ; 0x5567 $D557 C9 09                    ;
bpl      LD560                         ; 0x5569 $D559 10 05                    ;
sta      ($0E),y                       ; 0x556b $D55B 91 0E                    ;
jmp      Increment_9E_withRespectTo_9F__withLoopAround; 0x556d $D55D 4C EB D5  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD560                                                                          ;
cmp      #$0D                          ; 0x5570 $D560 C9 0D                    ;
bpl      LD58C                         ; 0x5572 $D562 10 28                    ;
sec                                    ; 0x5574 $D564 38                       ;
sbc      #$09                          ; 0x5575 $D565 E9 09                    ;
clc                                    ; 0x5577 $D567 18                       ;
asl                                    ; 0x5578 $D568 0A                       ;
asl                                    ; 0x5579 $D569 0A                       ;
adc      #$09                          ; 0x557a $D56A 69 09                    ;
sta      $A1                           ; 0x557c $D56C 85 A1                    ;
sta      ($0E),y                       ; 0x557e $D56E 91 0E                    ;
iny                                    ; 0x5580 $D570 C8                       ;
inc      $A1                           ; 0x5581 $D571 E6 A1                    ;
lda      $A1                           ; 0x5583 $D573 A5 A1                    ;
sta      ($0E),y                       ; 0x5585 $D575 91 0E                    ;
tya                                    ; 0x5587 $D577 98                       ;
clc                                    ; 0x5588 $D578 18                       ;
adc      #$15                          ; 0x5589 $D579 69 15                    ;
tay                                    ; 0x558b $D57B A8                       ;
inc      $A1                           ; 0x558c $D57C E6 A1                    ;
lda      $A1                           ; 0x558e $D57E A5 A1                    ;
sta      ($0E),y                       ; 0x5590 $D580 91 0E                    ;
iny                                    ; 0x5592 $D582 C8                       ;
inc      $A1                           ; 0x5593 $D583 E6 A1                    ;
lda      $A1                           ; 0x5595 $D585 A5 A1                    ;
sta      ($0E),y                       ; 0x5597 $D587 91 0E                    ;
jmp      Increment_9E_withRespectTo_9F__withLoopAround; 0x5599 $D589 4C EB D5  ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD58C                                                                          ;
cmp      #$0E                          ; 0x559c $D58C C9 0E                    ;
bpl      Increment_9E_withRespectTo_9F__withLoopAround; 0x559e $D58E 10 5B     ;
lda      #$19                          ; 0x55a0 $D590 A9 19                    ;;A = #$19 0001_1001
sta      ($0E),y                       ; 0x55a2 $D592 91 0E                    ;
iny                                    ; 0x55a4 $D594 C8                       ;
lda      #$1A                          ; 0x55a5 $D595 A9 1A                    ;;A = #$1a 0001_1010
sta      ($0E),y                       ; 0x55a7 $D597 91 0E                    ;
iny                                    ; 0x55a9 $D599 C8                       ;
lda      #$1B                          ; 0x55aa $D59A A9 1B                    ;;A = #$1b 0001_1011
sta      ($0E),y                       ; 0x55ac $D59C 91 0E                    ;
iny                                    ; 0x55ae $D59E C8                       ;
lda      #$1C                          ; 0x55af $D59F A9 1C                    ;;A = #$1c 0001_1100
sta      ($0E),y                       ; 0x55b1 $D5A1 91 0E                    ;
tya                                    ; 0x55b3 $D5A3 98                       ;
clc                                    ; 0x55b4 $D5A4 18                       ;
adc      #$13                          ; 0x55b5 $D5A5 69 13                    ;
tay                                    ; 0x55b7 $D5A7 A8                       ;
lda      #$1D                          ; 0x55b8 $D5A8 A9 1D                    ;;A = #$1d 0001_1101
sta      ($0E),y                       ; 0x55ba $D5AA 91 0E                    ;
iny                                    ; 0x55bc $D5AC C8                       ;
lda      #$1E                          ; 0x55bd $D5AD A9 1E                    ;;A = #$1e 0001_1110
sta      ($0E),y                       ; 0x55bf $D5AF 91 0E                    ;
iny                                    ; 0x55c1 $D5B1 C8                       ;
lda      #$1F                          ; 0x55c2 $D5B2 A9 1F                    ;;A = #$1f 0001_1111
sta      ($0E),y                       ; 0x55c4 $D5B4 91 0E                    ;
iny                                    ; 0x55c6 $D5B6 C8                       ;
lda      #$20                          ; 0x55c7 $D5B7 A9 20                    ;;A = #$20 0010_0000
sta      ($0E),y                       ; 0x55c9 $D5B9 91 0E                    ;
tya                                    ; 0x55cb $D5BB 98                       ;
clc                                    ; 0x55cc $D5BC 18                       ;
adc      #$13                          ; 0x55cd $D5BD 69 13                    ;
tay                                    ; 0x55cf $D5BF A8                       ;
lda      #$21                          ; 0x55d0 $D5C0 A9 21                    ;;A = #$21 0010_0001
sta      ($0E),y                       ; 0x55d2 $D5C2 91 0E                    ;
iny                                    ; 0x55d4 $D5C4 C8                       ;
lda      #$22                          ; 0x55d5 $D5C5 A9 22                    ;;A = #$22 0010_0010
sta      ($0E),y                       ; 0x55d7 $D5C7 91 0E                    ;
iny                                    ; 0x55d9 $D5C9 C8                       ;
lda      #$23                          ; 0x55da $D5CA A9 23                    ;;A = #$23 0010_0011
sta      ($0E),y                       ; 0x55dc $D5CC 91 0E                    ;
iny                                    ; 0x55de $D5CE C8                       ;
lda      #$24                          ; 0x55df $D5CF A9 24                    ;;A = #$24 0010_0100
sta      ($0E),y                       ; 0x55e1 $D5D1 91 0E                    ;
tya                                    ; 0x55e3 $D5D3 98                       ;
clc                                    ; 0x55e4 $D5D4 18                       ;
adc      #$13                          ; 0x55e5 $D5D5 69 13                    ;
tay                                    ; 0x55e7 $D5D7 A8                       ;
lda      #$25                          ; 0x55e8 $D5D8 A9 25                    ;;A = #$25 0010_0101
sta      ($0E),y                       ; 0x55ea $D5DA 91 0E                    ;
iny                                    ; 0x55ec $D5DC C8                       ;
lda      #$26                          ; 0x55ed $D5DD A9 26                    ;;A = #$26 0010_0110
sta      ($0E),y                       ; 0x55ef $D5DF 91 0E                    ;
iny                                    ; 0x55f1 $D5E1 C8                       ;
lda      #$27                          ; 0x55f2 $D5E2 A9 27                    ;;A = #$27 0010_0111
sta      ($0E),y                       ; 0x55f4 $D5E4 91 0E                    ;
iny                                    ; 0x55f6 $D5E6 C8                       ;
lda      #$28                          ; 0x55f7 $D5E7 A9 28                    ;;A = #$28 0010_1000
sta      ($0E),y                       ; 0x55f9 $D5E9 91 0E                    ;
Increment_9E_withRespectTo_9F__withLoopAround                                  ;
inc      $9E                           ; 0x55fb $D5EB E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x55fd $D5ED A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x55ff $D5EF C9 16                    ;
bmi      LD5F9                         ; 0x5601 $D5F1 30 06                    ;
lda      #$00                          ; 0x5603 $D5F3 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5605 $D5F5 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5607 $D5F7 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD5F9                                                                          ;
rts                                    ; 0x5609 $D5F9 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lD5FA_JumpToRoutine_BasedOn_PlayerCurrentArea                                  ;
lda      $47                           ; 0x560a $D5FA A5 47                    ;;player CurrentArea       
asl                                    ; 0x560c $D5FC 0A                       ;
tax                                    ; 0x560d $D5FD AA                       ;
lda      LD60C,x                       ; 0x560e $D5FE BD 0C D6                 ;
sta      L0000                         ; 0x5611 $D601 85 00                    ;
inx                                    ; 0x5613 $D603 E8                       ;
lda      LD60C,x                       ; 0x5614 $D604 BD 0C D6                 ;
sta      $01                           ; 0x5617 $D607 85 01                    ;
jmp      (L0000)                       ; 0x5619 $D609 6C 00 00                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD60C                                                                          ;
.word    Screen_Routine_Done           ; 0x561c $D60C 90 D7                    ;00
.word    Screen_Routine_01             ; 0x561e $D60E 52 D6                    ;01
.word    Screen_Routine_Done           ; 0x5620 $D610 90 D7                    ;02
.word    Screen_Routine_03             ; 0x5622 $D612 61 D6                    ;03
.word    Screen_Routine_04             ; 0x5624 $D614 6F D6                    ;04
.word    Screen_Routine_Done           ; 0x5626 $D616 90 D7                    ;05
.word    Screen_Routine_Done           ; 0x5628 $D618 90 D7                    ;06
.word    Screen_Routine_Done           ; 0x562a $D61A 90 D7                    ;07
.word    Screen_Routine_Done           ; 0x562c $D61C 90 D7                    ;08
.word    Screen_Routine_Done           ; 0x562e $D61E 90 D7                    ;09
.word    Screen_Routine_Done           ; 0x5630 $D620 90 D7                    ;0A
.word    Screen_Routine_Done           ; 0x5632 $D622 90 D7                    ;0B
.word    Screen_Routine_0C             ; 0x5634 $D624 7E D6                    ;0C
.word    Screen_Routine_0D             ; 0x5636 $D626 8F D6                    ;0D
.word    Screen_Routine_0E             ; 0x5638 $D628 9E D6                    ;0E
.word    Screen_Routine_Done           ; 0x563a $D62A 90 D7                    ;0F
.word    Screen_Routine_Done           ; 0x563c $D62C 90 D7                    ;10
.word    Screen_Routine_11             ; 0x563e $D62E AC D6                    ;11
.word    Screen_Routine_12             ; 0x5640 $D630 C4 D6                    ;12
.word    Screen_Routine_Done           ; 0x5642 $D632 90 D7                    ;13
.word    Screen_Routine_Done           ; 0x5644 $D634 90 D7                    ;14
.word    Screen_Routine_Done           ; 0x5646 $D636 90 D7                    ;15
.word    Screen_Routine_Done           ; 0x5648 $D638 90 D7                    ;16
.word    Screen_Routine_Done           ; 0x564a $D63A 90 D7                    ;17
.word    Screen_Routine_18             ; 0x564c $D63C D2 D6                    ;18
.word    Screen_Routine_Done           ; 0x564e $D63E 90 D7                    ;19
.word    Screen_Routine_1A             ; 0x5650 $D640 F5 D6                    ;1A
.word    Screen_Routine_1B             ; 0x5652 $D642 03 D7                    ;1B
.word    Screen_Routine_1C             ; 0x5654 $D644 3E D7                    ;1C
.word    Screen_Routine_1D             ; 0x5656 $D646 47 D7                    ;1D
.word    Screen_Routine_1E             ; 0x5658 $D648 4D D7                    ;1E
.word    Screen_Routine_1F             ; 0x565a $D64A 5E D7                    ;1F
.word    Screen_Routine_Done           ; 0x565c $D64C 90 D7                    ;20
.word    Screen_Routine_21             ; 0x565e $D64E 6F D7                    ;21
.word    Screen_Routine_22             ; 0x5660 $D650 7E D7                    ;22
; ---------------------------------------------------------------------------- ;
Screen_Routine_01                                                              ;
lda      $5E                           ; 0x5662 $D652 A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
beq      LD65E                         ; 0x5664 $D654 F0 08                    ;
ldx      #$04                          ; 0x5666 $D656 A2 04                    ;;X = #$04 0000_0100
stx      $0612                         ; 0x5668 $D658 8E 12 06                 ;
stx      $0613                         ; 0x566b $D65B 8E 13 06                 ;
LD65E                                                                          ;
jmp      Screen_Routine_Done           ; 0x566e $D65E 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_03                                                              ;
lda      $52                           ; 0x5671 $D661 A5 52                    ;;FF=chest for cross appears
beq      LD66C                         ; 0x5673 $D663 F0 07                    ;
ldx      #$0A                          ; 0x5675 $D665 A2 0A                    ;;X = #$0a 0000_1010
ldy      #$0E                          ; 0x5677 $D667 A0 0E                    ;;Y = #$0e 0000_1110
jsr      LDE9A                         ; 0x5679 $D669 20 9A DE                 ;
LD66C                                                                          ;
jmp      Screen_Routine_Done           ; 0x567c $D66C 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_04                                                              ;
lda      $5E                           ; 0x567f $D66F A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
beq      LD67B                         ; 0x5681 $D671 F0 08                    ;
ldx      #$04                          ; 0x5683 $D673 A2 04                    ;;X = #$04 0000_0100
stx      $055B                         ; 0x5685 $D675 8E 5B 05                 ;
stx      $0571                         ; 0x5688 $D678 8E 71 05                 ;
LD67B                                                                          ;
jmp      Screen_Routine_Done           ; 0x568b $D67B 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_0C                                                              ;
lda      $5D                           ; 0x568e $D67E A5 5D                    ;;FF=got medicine 00=used? 	(appears in ITEM)
ora      $63                           ; 0x5690 $D680 05 63                    ;;FF=makes the wall surrounding castle disappear
beq      LD68C                         ; 0x5692 $D682 F0 08                    ;
;replace castle wall with walkable brick tile                                  ;
ldx      #$04                          ; 0x5694 $D684 A2 04                    ;;X = #$04 0000_0100
stx      $0635                         ; 0x5696 $D686 8E 35 06                 ;
stx      $0636                         ; 0x5699 $D689 8E 36 06                 ;
LD68C                                                                          ;
jmp      Screen_Routine_Done           ; 0x569c $D68C 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_0D                                                              ;
lda      $5E                           ; 0x569f $D68F A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
beq      LD69B                         ; 0x56a1 $D691 F0 08                    ;
ldx      #$04                          ; 0x56a3 $D693 A2 04                    ;;X = #$04 0000_0100
stx      $0630                         ; 0x56a5 $D695 8E 30 06                 ;
stx      $0631                         ; 0x56a8 $D698 8E 31 06                 ;
LD69B                                                                          ;
jmp      Screen_Routine_Done           ; 0x56ab $D69B 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_0E                                                              ;
lda      $56                           ; 0x56ae $D69E A5 56                    ;;FF=chest for jewel appears ??
beq      LD6A9                         ; 0x56b0 $D6A0 F0 07                    ;
ldx      #$08                          ; 0x56b2 $D6A2 A2 08                    ;;X = #$08 0000_1000
ldy      #$08                          ; 0x56b4 $D6A4 A0 08                    ;;Y = #$08 0000_1000
jsr      LDE9A                         ; 0x56b6 $D6A6 20 9A DE                 ;
LD6A9                                                                          ;
jmp      Screen_Routine_Done           ; 0x56b9 $D6A9 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_11                                                              ;
lda      $74                           ; 0x56bc $D6AC A5 74                    ;;FF=castle's tree has been burned and is now a hole 
beq      LD6C1                         ; 0x56be $D6AE F0 11                    ;
ldx      #$15                          ; 0x56c0 $D6B0 A2 15                    ;;X = #$15 0001_0101
stx      $0572                         ; 0x56c2 $D6B2 8E 72 05                 ;
inx                                    ; 0x56c5 $D6B5 E8                       ;
stx      $0573                         ; 0x56c6 $D6B6 8E 73 05                 ;
inx                                    ; 0x56c9 $D6B9 E8                       ;
stx      $0588                         ; 0x56ca $D6BA 8E 88 05                 ;
inx                                    ; 0x56cd $D6BD E8                       ;
stx      $0589                         ; 0x56ce $D6BE 8E 89 05                 ;
LD6C1                                                                          ;
jmp      Screen_Routine_Done           ; 0x56d1 $D6C1 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_12                                                              ;
lda      $58                           ; 0x56d4 $D6C4 A5 58                    ;;FF=chest for ruby appears
beq      LD6CF                         ; 0x56d6 $D6C6 F0 07                    ;
ldx      #$0E                          ; 0x56d8 $D6C8 A2 0E                    ;;X = #$0e 0000_1110
ldy      #$08                          ; 0x56da $D6CA A0 08                    ;;Y = #$08 0000_1000
jsr      LDE9A                         ; 0x56dc $D6CC 20 9A DE                 ;
LD6CF                                                                          ;
jmp      Screen_Routine_Done           ; 0x56df $D6CF 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_18                                                              ;
lda      $54                           ; 0x56e2 $D6D2 A5 54                    ;;FF=chest for pot appears
beq      LD6DD                         ; 0x56e4 $D6D4 F0 07                    ;
ldx      #$0A                          ; 0x56e6 $D6D6 A2 0A                    ;;X = #$0a 0000_1010
ldy      #$10                          ; 0x56e8 $D6D8 A0 10                    ;;Y = #$10 0001_0000
jsr      LDE9A                         ; 0x56ea $D6DA 20 9A DE                 ;
LD6DD                                                                          ;
lda      $5E                           ; 0x56ed $D6DD A5 5E                    ;;FF=got pot 			(appears in ITEM) (also makes the hole appear)
beq      LD6F2                         ; 0x56ef $D6DF F0 11                    ;
;create hole in ground                                                         ;
ldx      #$15                          ; 0x56f1 $D6E1 A2 15                    ;;X = #$15 0001_0101
stx      $068D                         ; 0x56f3 $D6E3 8E 8D 06                 ;
inx                                    ; 0x56f6 $D6E6 E8                       ;
stx      $068E                         ; 0x56f7 $D6E7 8E 8E 06                 ;
inx                                    ; 0x56fa $D6EA E8                       ;
stx      $06A3                         ; 0x56fb $D6EB 8E A3 06                 ;
inx                                    ; 0x56fe $D6EE E8                       ;
stx      $06A4                         ; 0x56ff $D6EF 8E A4 06                 ;
LD6F2                                                                          ;
jmp      Screen_Routine_Done           ; 0x5702 $D6F2 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_1A                                                              ;
lda      $51                           ; 0x5705 $D6F5 A5 51                    ;;FF=chest for lamp appears
beq      LD700                         ; 0x5707 $D6F7 F0 07                    ;
ldx      #$04                          ; 0x5709 $D6F9 A2 04                    ;;X = #$04 0000_0100
ldy      #$10                          ; 0x570b $D6FB A0 10                    ;;Y = #$10 0001_0000
jsr      LDE9A                         ; 0x570d $D6FD 20 9A DE                 ;
LD700                                                                          ;
jmp      Screen_Routine_Done           ; 0x5710 $D700 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_1B                                                              ;
ldx      #$DF                          ; 0x5713 $D703 A2 DF                    ;;X = #$df 1101_1111
ldy      #$B4                          ; 0x5715 $D705 A0 B4                    ;;Y = #$b4 1011_0100
lda      #$00                          ; 0x5717 $D707 A9 00                    ;;A = #$00 0000_0000
LD709                                                                          ;
stx      $03                           ; 0x5719 $D709 86 03                    ;
sty      $02                           ; 0x571b $D70B 84 02                    ;
sta      $05                           ; 0x571d $D70D 85 05                    ;
jsr      LDE93                         ; 0x571f $D70F 20 93 DE                 ;
lda      #$04                          ; 0x5722 $D712 A9 04                    ;;A = #$04 0000_0100
sta      $04                           ; 0x5724 $D714 85 04                    ;
LD716                                                                          ;
ldx      $05                           ; 0x5726 $D716 A6 05                    ;
lda      $68,x                         ; 0x5728 $D718 B5 68                    ;
bne      LD728                         ; 0x572a $D71A D0 0C                    ;
ldy      #$00                          ; 0x572c $D71C A0 00                    ;;Y = #$00 0000_0000
lda      ($02),y                       ; 0x572e $D71E B1 02                    ;
tax                                    ; 0x5730 $D720 AA                       ;
iny                                    ; 0x5731 $D721 C8                       ;
lda      ($02),y                       ; 0x5732 $D722 B1 02                    ;
tay                                    ; 0x5734 $D724 A8                       ;
jsr      LDE9A                         ; 0x5735 $D725 20 9A DE                 ;
LD728                                                                          ;
inc      $05                           ; 0x5738 $D728 E6 05                    ;
lda      $02                           ; 0x573a $D72A A5 02                    ;
clc                                    ; 0x573c $D72C 18                       ;
adc      #$02                          ; 0x573d $D72D 69 02                    ;
sta      $02                           ; 0x573f $D72F 85 02                    ;
lda      $03                           ; 0x5741 $D731 A5 03                    ;
adc      #$00                          ; 0x5743 $D733 69 00                    ;
sta      $03                           ; 0x5745 $D735 85 03                    ;
dec      $04                           ; 0x5747 $D737 C6 04                    ;
bne      LD716                         ; 0x5749 $D739 D0 DB                    ;
jmp      Screen_Routine_Done           ; 0x574b $D73B 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_1C                                                              ;
ldx      #$DF                          ; 0x574e $D73E A2 DF                    ;;X = #$df 1101_1111
ldy      #$BC                          ; 0x5750 $D740 A0 BC                    ;;Y = #$bc 1011_1100
lda      #$04                          ; 0x5752 $D742 A9 04                    ;;A = #$04 0000_0100
jmp      LD709                         ; 0x5754 $D744 4C 09 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_1D                                                              ;
jsr      LDE93                         ; 0x5757 $D747 20 93 DE                 ;
jmp      Screen_Routine_Done           ; 0x575a $D74A 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_1E                                                              ;
jsr      LDE93                         ; 0x575d $D74D 20 93 DE                 ;
lda      $57                           ; 0x5760 $D750 A5 57                    ;;FF=chest for ring appears 
beq      LD75B                         ; 0x5762 $D752 F0 07                    ;
ldx      #$12                          ; 0x5764 $D754 A2 12                    ;;X = #$12 0001_0010
ldy      #$0A                          ; 0x5766 $D756 A0 0A                    ;;Y = #$0a 0000_1010
jsr      LDE9A                         ; 0x5768 $D758 20 9A DE                 ;
LD75B                                                                          ;
jmp      Screen_Routine_Done           ; 0x576b $D75B 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_1F                                                              ;
jsr      LDE93                         ; 0x576e $D75E 20 93 DE                 ;
lda      $4F                           ; 0x5771 $D761 A5 4F                    ;;FF=chest for sword apppears
beq      LD76C                         ; 0x5773 $D763 F0 07                    ;
ldx      #$0A                          ; 0x5775 $D765 A2 0A                    ;;X = #$0a 0000_1010
ldy      #$0E                          ; 0x5777 $D767 A0 0E                    ;;Y = #$0e 0000_1110
jsr      LDE9A                         ; 0x5779 $D769 20 9A DE                 ;
LD76C                                                                          ;
jmp      Screen_Routine_Done           ; 0x577c $D76C 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_21                                                              ;
lda      $73                           ; 0x577f $D76F A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
bne      LD77B                         ; 0x5781 $D771 D0 08                    ;
ldx      #$06                          ; 0x5783 $D773 A2 06                    ;;X = #$06 0000_0110
stx      $053C                         ; 0x5785 $D775 8E 3C 05                 ;
stx      $0552                         ; 0x5788 $D778 8E 52 05                 ;
LD77B                                                                          ;
jmp      Screen_Routine_Done           ; 0x578b $D77B 4C 90 D7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Routine_22                                                              ;
lda      $73                           ; 0x578e $D77E A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
beq      Screen_Routine_Done           ; 0x5790 $D780 F0 0E                    ;
;replace grave tiles with dirt tiles (grave broken)                            ;
ldx      #$08                          ; 0x5792 $D782 A2 08                    ;;X = #$08 0000_1000
stx      $05F6                         ; 0x5794 $D784 8E F6 05                 ;
stx      $05F7                         ; 0x5797 $D787 8E F7 05                 ;
stx      $060C                         ; 0x579a $D78A 8E 0C 06                 ;
stx      $060D                         ; 0x579d $D78D 8E 0D 06                 ;
Screen_Routine_Done                                                            ;
lda      $73                           ; 0x57a0 $D790 A5 73                    ;;00=dragon-invincible, water-moat, grave-appears 	 FF=dragon-attackable, moat-drained, grave-broken
beq      LD7B2                         ; 0x57a2 $D792 F0 1E                    ;
ldx      #$00                          ; 0x57a4 $D794 A2 00                    ;;X = #$00 0000_0000
LD796                                                                          ;
lda      $04E4,x                       ; 0x57a6 $D796 BD E4 04                 ;;the current screen tile data? 	($0E) points here
cmp      #$03                          ; 0x57a9 $D799 C9 03                    ;
bne      LD7A0                         ; 0x57ab $D79B D0 03                    ;
inc      $04E4,x                       ; 0x57ad $D79D FE E4 04                 ;;the current screen tile data? 	($0E) points here
LD7A0                                                                          ;
inx                                    ; 0x57b0 $D7A0 E8                       ;
bne      LD796                         ; 0x57b1 $D7A1 D0 F3                    ;
LD7A3                                                                          ;
lda      $05E4,x                       ; 0x57b3 $D7A3 BD E4 05                 ;;the current screen tile data?
cmp      #$03                          ; 0x57b6 $D7A6 C9 03                    ;
bne      LD7AD                         ; 0x57b8 $D7A8 D0 03                    ;
inc      $05E4,x                       ; 0x57ba $D7AA FE E4 05                 ;;the current screen tile data?
LD7AD                                                                          ;
inx                                    ; 0x57bd $D7AD E8                       ;
cpx      #$E4                          ; 0x57be $D7AE E0 E4                    ;
bne      LD7A3                         ; 0x57c0 $D7B0 D0 F1                    ;
LD7B2                                                                          ;
lda      $4A                           ; 0x57c2 $D7B2 A5 4A                    ;
beq      LD7B9                         ; 0x57c4 $D7B4 F0 03                    ;
jmp      LDC8D                         ; 0x57c6 $D7B6 4C 8D DC                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7B9                                                                          ;
lda      $9A                           ; 0x57c9 $D7B9 A5 9A                    ;
bne      LD7C7                         ; 0x57cb $D7BB D0 0A                    ;
lda      $34                           ; 0x57cd $D7BD A5 34                    ;
beq      LD7C7                         ; 0x57cf $D7BF F0 06                    ;
jsr      LDAC4                         ; 0x57d1 $D7C1 20 C4 DA                 ;
jmp      LDE16                         ; 0x57d4 $D7C4 4C 16 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7C7                                                                          ;
ldx      #$00                          ; 0x57d7 $D7C7 A2 00                    ;;X = #$00 0000_0000
LD7C9                                                                          ;
lda      $04E4,x                       ; 0x57d9 $D7C9 BD E4 04                 ;;the current screen tile data? 	($0E) points here
tay                                    ; 0x57dc $D7CC A8                       ;
lda      $0300,x                       ; 0x57dd $D7CD BD 00 03                 ;
and      #$3F                          ; 0x57e0 $D7D0 29 3F                    ;;Keep Bits:0011_1111
sta      $04E4,x                       ; 0x57e2 $D7D2 9D E4 04                 ;;the current screen tile data? 	($0E) points here
tya                                    ; 0x57e5 $D7D5 98                       ;
sta      $0300,x                       ; 0x57e6 $D7D6 9D 00 03                 ;
inx                                    ; 0x57e9 $D7D9 E8                       ;
bne      LD7C9                         ; 0x57ea $D7DA D0 ED                    ;
LD7DC                                                                          ;
lda      $05E4,x                       ; 0x57ec $D7DC BD E4 05                 ;;the current screen tile data?
tay                                    ; 0x57ef $D7DF A8                       ;
lda      $0400,x                       ; 0x57f0 $D7E0 BD 00 04                 ;
and      #$3F                          ; 0x57f3 $D7E3 29 3F                    ;;Keep Bits:0011_1111
sta      $05E4,x                       ; 0x57f5 $D7E5 9D E4 05                 ;;the current screen tile data?
tya                                    ; 0x57f8 $D7E8 98                       ;
sta      $0400,x                       ; 0x57f9 $D7E9 9D 00 04                 ;
inx                                    ; 0x57fc $D7EC E8                       ;
cpx      #$E4                          ; 0x57fd $D7ED E0 E4                    ;
bne      LD7DC                         ; 0x57ff $D7EF D0 EB                    ;
lda      #$0B                          ; 0x5801 $D7F1 A9 0B                    ;;A = #$0b 0000_1011
sta      $06                           ; 0x5803 $D7F3 85 06                    ;
lda      #$00                          ; 0x5805 $D7F5 A9 00                    ;;A = #$00 0000_0000
sta      $07                           ; 0x5807 $D7F7 85 07                    ;
ldx      $3F                           ; 0x5809 $D7F9 A6 3F                    ;
beq      LD80C                         ; 0x580b $D7FB F0 0F                    ;
dex                                    ; 0x580d $D7FD CA                       ;
bne      LD803                         ; 0x580e $D7FE D0 03                    ;
jmp      LD8BB                         ; 0x5810 $D800 4C BB D8                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD803                                                                          ;
dex                                    ; 0x5813 $D803 CA                       ;
bne      LD809                         ; 0x5814 $D804 D0 03                    ;
jmp      LD967                         ; 0x5816 $D806 4C 67 D9                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD809                                                                          ;
jmp      LDA12                         ; 0x5819 $D809 4C 12 DA                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD80C                                                                          ;
lda      #$00                          ; 0x581c $D80C A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x581e $D80E 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$14                          ; 0x5820 $D810 A9 14                    ;;A = #$14 0001_0100
sta      $9F                           ; 0x5822 $D812 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD814                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x5824 $D814 20 B9 DE                 ;
lda      $0E                           ; 0x5827 $D817 A5 0E                    ;
sta      L0000                         ; 0x5829 $D819 85 00                    ;
lda      $0F                           ; 0x582b $D81B A5 0F                    ;
sta      $01                           ; 0x582d $D81D 85 01                    ;
lda      $9F                           ; 0x582f $D81F A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x5831 $D821 38                       ;
sbc      #$02                          ; 0x5832 $D822 E9 02                    ;
sta      $9F                           ; 0x5834 $D824 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5836 $D826 20 B9 DE                 ;
ldy      #$00                          ; 0x5839 $D829 A0 00                    ;;Y = #$00 0000_0000
LD82B                                                                          ;
lda      ($0E),y                       ; 0x583b $D82B B1 0E                    ;
sta      (L0000),y                     ; 0x583d $D82D 91 00                    ;
iny                                    ; 0x583f $D82F C8                       ;
cpy      #$2C                          ; 0x5840 $D830 C0 2C                    ;
bne      LD82B                         ; 0x5842 $D832 D0 F7                    ;
lda      $9F                           ; 0x5844 $D834 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
bne      LD814                         ; 0x5846 $D836 D0 DC                    ;
lda      #$16                          ; 0x5848 $D838 A9 16                    ;;A = #$16 0001_0110
sta      $37                           ; 0x584a $D83A 85 37                    ;;player PosY, 0-14 (small meta-tile size)
LD83C                                                                          ;
lda      #$00                          ; 0x584c $D83C A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x584e $D83E 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$00                          ; 0x5850 $D840 A9 00                    ;;A = #$00 0000_0000
sta      $9F                           ; 0x5852 $D842 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD844                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x5854 $D844 20 B9 DE                 ;
lda      $0E                           ; 0x5857 $D847 A5 0E                    ;
sta      L0000                         ; 0x5859 $D849 85 00                    ;
lda      $0F                           ; 0x585b $D84B A5 0F                    ;
sta      $01                           ; 0x585d $D84D 85 01                    ;
inc      $9F                           ; 0x585f $D84F E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5861 $D851 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5863 $D853 20 B9 DE                 ;
ldy      #$00                          ; 0x5866 $D856 A0 00                    ;;Y = #$00 0000_0000
LD858                                                                          ;
lda      ($0E),y                       ; 0x5868 $D858 B1 0E                    ;
sta      (L0000),y                     ; 0x586a $D85A 91 00                    ;
iny                                    ; 0x586c $D85C C8                       ;
cpy      #$2C                          ; 0x586d $D85D C0 2C                    ;
bne      LD858                         ; 0x586f $D85F D0 F7                    ;
lda      $9F                           ; 0x5871 $D861 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x5873 $D863 C9 14                    ;
bmi      LD844                         ; 0x5875 $D865 30 DD                    ;
jsr      Point_0E__based_on_9E_9F      ; 0x5877 $D867 20 B9 DE                 ;
lda      $0E                           ; 0x587a $D86A A5 0E                    ;
sta      L0000                         ; 0x587c $D86C 85 00                    ;
lda      $0F                           ; 0x587e $D86E A5 0F                    ;
sta      $01                           ; 0x5880 $D870 85 01                    ;
lda      #$00                          ; 0x5882 $D872 A9 00                    ;;A = #$00 0000_0000
sta      $9F                           ; 0x5884 $D874 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x5886 $D876 20 E5 DE                 ;
ldy      #$00                          ; 0x5889 $D879 A0 00                    ;;Y = #$00 0000_0000
LD87B                                                                          ;
lda      ($10),y                       ; 0x588b $D87B B1 10                    ;
sta      (L0000),y                     ; 0x588d $D87D 91 00                    ;
iny                                    ; 0x588f $D87F C8                       ;
cpy      #$2C                          ; 0x5890 $D880 C0 2C                    ;
bne      LD87B                         ; 0x5892 $D882 D0 F7                    ;
LD884                                                                          ;
jsr      LDEE5                         ; 0x5894 $D884 20 E5 DE                 ;
lda      $10                           ; 0x5897 $D887 A5 10                    ;
sta      L0000                         ; 0x5899 $D889 85 00                    ;
lda      $11                           ; 0x589b $D88B A5 11                    ;
sta      $01                           ; 0x589d $D88D 85 01                    ;
inc      $9F                           ; 0x589f $D88F E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x58a1 $D891 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x58a3 $D893 20 E5 DE                 ;
ldy      #$00                          ; 0x58a6 $D896 A0 00                    ;;Y = #$00 0000_0000
LD898                                                                          ;
lda      ($10),y                       ; 0x58a8 $D898 B1 10                    ;
sta      (L0000),y                     ; 0x58aa $D89A 91 00                    ;
iny                                    ; 0x58ac $D89C C8                       ;
cpy      #$2C                          ; 0x58ad $D89D C0 2C                    ;
bne      LD898                         ; 0x58af $D89F D0 F7                    ;
lda      $9F                           ; 0x58b1 $D8A1 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x58b3 $D8A3 C9 14                    ;
bmi      LD884                         ; 0x58b5 $D8A5 30 DD                    ;
dec      $37                           ; 0x58b7 $D8A7 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
dec      $37                           ; 0x58b9 $D8A9 C6 37                    ;;player PosY, 0-14 (small meta-tile size)
lda      $07                           ; 0x58bb $D8AB A5 07                    ;
beq      LD8B2                         ; 0x58bd $D8AD F0 03                    ;
jsr      LDAC4                         ; 0x58bf $D8AF 20 C4 DA                 ;
LD8B2                                                                          ;
inc      $07                           ; 0x58c2 $D8B2 E6 07                    ;
dec      $06                           ; 0x58c4 $D8B4 C6 06                    ;
bne      LD83C                         ; 0x58c6 $D8B6 D0 84                    ;
jmp      LDE16                         ; 0x58c8 $D8B8 4C 16 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD8BB                                                                          ;
lda      #$00                          ; 0x58cb $D8BB A9 00                    ;;A = #$00 0000_0000
sta      $9F                           ; 0x58cd $D8BD 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD8BF                                                                          ;
lda      #$00                          ; 0x58cf $D8BF A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x58d1 $D8C1 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x58d3 $D8C3 20 B9 DE                 ;
lda      $0E                           ; 0x58d6 $D8C6 A5 0E                    ;
sta      L0000                         ; 0x58d8 $D8C8 85 00                    ;
lda      $0F                           ; 0x58da $D8CA A5 0F                    ;
sta      $01                           ; 0x58dc $D8CC 85 01                    ;
lda      #$02                          ; 0x58de $D8CE A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x58e0 $D8D0 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x58e2 $D8D2 20 B9 DE                 ;
ldy      #$00                          ; 0x58e5 $D8D5 A0 00                    ;;Y = #$00 0000_0000
LD8D7                                                                          ;
lda      ($0E),y                       ; 0x58e7 $D8D7 B1 0E                    ;
sta      (L0000),y                     ; 0x58e9 $D8D9 91 00                    ;
iny                                    ; 0x58eb $D8DB C8                       ;
cpy      #$14                          ; 0x58ec $D8DC C0 14                    ;
bne      LD8D7                         ; 0x58ee $D8DE D0 F7                    ;
inc      $9F                           ; 0x58f0 $D8E0 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x58f2 $D8E2 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x58f4 $D8E4 C9 16                    ;
bne      LD8BF                         ; 0x58f6 $D8E6 D0 D7                    ;
lda      #$FE                          ; 0x58f8 $D8E8 A9 FE                    ;;A = #$fe 1111_1110
sta      $36                           ; 0x58fa $D8EA 85 36                    ;;player PosX, 0-14 (small meta-tile size)
LD8EC                                                                          ;
lda      #$00                          ; 0x58fc $D8EC A9 00                    ;;A = #$00 0000_0000
sta      $9F                           ; 0x58fe $D8EE 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD8F0                                                                          ;
lda      #$02                          ; 0x5900 $D8F0 A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x5902 $D8F2 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5904 $D8F4 20 B9 DE                 ;
lda      $0E                           ; 0x5907 $D8F7 A5 0E                    ;
sta      L0000                         ; 0x5909 $D8F9 85 00                    ;
lda      $0F                           ; 0x590b $D8FB A5 0F                    ;
sta      $01                           ; 0x590d $D8FD 85 01                    ;
lda      #$00                          ; 0x590f $D8FF A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5911 $D901 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5913 $D903 20 B9 DE                 ;
ldy      #$13                          ; 0x5916 $D906 A0 13                    ;;Y = #$13 0001_0011
LD908                                                                          ;
lda      ($0E),y                       ; 0x5918 $D908 B1 0E                    ;
sta      (L0000),y                     ; 0x591a $D90A 91 00                    ;
dey                                    ; 0x591c $D90C 88                       ;
bpl      LD908                         ; 0x591d $D90D 10 F9                    ;
jsr      Point_0E__based_on_9E_9F      ; 0x591f $D90F 20 B9 DE                 ;
lda      $0E                           ; 0x5922 $D912 A5 0E                    ;
sta      L0000                         ; 0x5924 $D914 85 00                    ;
lda      $0F                           ; 0x5926 $D916 A5 0F                    ;
sta      $01                           ; 0x5928 $D918 85 01                    ;
lda      #$14                          ; 0x592a $D91A A9 14                    ;;A = #$14 0001_0100
sta      $9E                           ; 0x592c $D91C 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x592e $D91E 20 E5 DE                 ;
ldy      #$01                          ; 0x5931 $D921 A0 01                    ;;Y = #$01 0000_0001
lda      ($10),y                       ; 0x5933 $D923 B1 10                    ;
sta      (L0000),y                     ; 0x5935 $D925 91 00                    ;
dey                                    ; 0x5937 $D927 88                       ;
lda      ($10),y                       ; 0x5938 $D928 B1 10                    ;
sta      (L0000),y                     ; 0x593a $D92A 91 00                    ;
lda      #$02                          ; 0x593c $D92C A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x593e $D92E 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x5940 $D930 20 E5 DE                 ;
lda      $10                           ; 0x5943 $D933 A5 10                    ;
sta      L0000                         ; 0x5945 $D935 85 00                    ;
lda      $11                           ; 0x5947 $D937 A5 11                    ;
sta      $01                           ; 0x5949 $D939 85 01                    ;
lda      #$00                          ; 0x594b $D93B A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x594d $D93D 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x594f $D93F 20 E5 DE                 ;
ldy      #$13                          ; 0x5952 $D942 A0 13                    ;;Y = #$13 0001_0011
LD944                                                                          ;
lda      ($10),y                       ; 0x5954 $D944 B1 10                    ;
sta      (L0000),y                     ; 0x5956 $D946 91 00                    ;
dey                                    ; 0x5958 $D948 88                       ;
bpl      LD944                         ; 0x5959 $D949 10 F9                    ;
inc      $9F                           ; 0x595b $D94B E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x595d $D94D A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x595f $D94F C9 16                    ;
bmi      LD8F0                         ; 0x5961 $D951 30 9D                    ;
inc      $36                           ; 0x5963 $D953 E6 36                    ;;player PosX, 0-14 (small meta-tile size)
inc      $36                           ; 0x5965 $D955 E6 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      $07                           ; 0x5967 $D957 A5 07                    ;
beq      LD95E                         ; 0x5969 $D959 F0 03                    ;
jsr      LDAC4                         ; 0x596b $D95B 20 C4 DA                 ;
LD95E                                                                          ;
inc      $07                           ; 0x596e $D95E E6 07                    ;
dec      $06                           ; 0x5970 $D960 C6 06                    ;
bne      LD8EC                         ; 0x5972 $D962 D0 88                    ;
jmp      LDE16                         ; 0x5974 $D964 4C 16 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD967                                                                          ;
lda      #$00                          ; 0x5977 $D967 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5979 $D969 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $9F                           ; 0x597b $D96B 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD96D                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x597d $D96D 20 B9 DE                 ;
lda      $0E                           ; 0x5980 $D970 A5 0E                    ;
sta      L0000                         ; 0x5982 $D972 85 00                    ;
lda      $0F                           ; 0x5984 $D974 A5 0F                    ;
sta      $01                           ; 0x5986 $D976 85 01                    ;
lda      $9F                           ; 0x5988 $D978 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x598a $D97A 18                       ;
adc      #$02                          ; 0x598b $D97B 69 02                    ;
sta      $9F                           ; 0x598d $D97D 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x598f $D97F 20 B9 DE                 ;
ldy      #$00                          ; 0x5992 $D982 A0 00                    ;;Y = #$00 0000_0000
LD984                                                                          ;
lda      ($0E),y                       ; 0x5994 $D984 B1 0E                    ;
sta      (L0000),y                     ; 0x5996 $D986 91 00                    ;
iny                                    ; 0x5998 $D988 C8                       ;
cpy      #$2C                          ; 0x5999 $D989 C0 2C                    ;
bne      LD984                         ; 0x599b $D98B D0 F7                    ;
lda      $9F                           ; 0x599d $D98D A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$14                          ; 0x599f $D98F C9 14                    ;
bne      LD96D                         ; 0x59a1 $D991 D0 DA                    ;
lda      #$FE                          ; 0x59a3 $D993 A9 FE                    ;;A = #$fe 1111_1110
sta      $37                           ; 0x59a5 $D995 85 37                    ;;player PosY, 0-14 (small meta-tile size)
LD997                                                                          ;
lda      #$00                          ; 0x59a7 $D997 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x59a9 $D999 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$14                          ; 0x59ab $D99B A9 14                    ;;A = #$14 0001_0100
sta      $9F                           ; 0x59ad $D99D 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LD99F                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x59af $D99F 20 B9 DE                 ;
lda      $0E                           ; 0x59b2 $D9A2 A5 0E                    ;
sta      L0000                         ; 0x59b4 $D9A4 85 00                    ;
lda      $0F                           ; 0x59b6 $D9A6 A5 0F                    ;
sta      $01                           ; 0x59b8 $D9A8 85 01                    ;
dec      $9F                           ; 0x59ba $D9AA C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0x59bc $D9AC C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x59be $D9AE 20 B9 DE                 ;
ldy      #$00                          ; 0x59c1 $D9B1 A0 00                    ;;Y = #$00 0000_0000
LD9B3                                                                          ;
lda      ($0E),y                       ; 0x59c3 $D9B3 B1 0E                    ;
sta      (L0000),y                     ; 0x59c5 $D9B5 91 00                    ;
iny                                    ; 0x59c7 $D9B7 C8                       ;
cpy      #$2C                          ; 0x59c8 $D9B8 C0 2C                    ;
bne      LD9B3                         ; 0x59ca $D9BA D0 F7                    ;
lda      $9F                           ; 0x59cc $D9BC A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
bne      LD99F                         ; 0x59ce $D9BE D0 DF                    ;
jsr      Point_0E__based_on_9E_9F      ; 0x59d0 $D9C0 20 B9 DE                 ;
lda      $0E                           ; 0x59d3 $D9C3 A5 0E                    ;
sta      L0000                         ; 0x59d5 $D9C5 85 00                    ;
lda      $0F                           ; 0x59d7 $D9C7 A5 0F                    ;
sta      $01                           ; 0x59d9 $D9C9 85 01                    ;
lda      #$14                          ; 0x59db $D9CB A9 14                    ;;A = #$14 0001_0100
sta      $9F                           ; 0x59dd $D9CD 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x59df $D9CF 20 E5 DE                 ;
ldy      #$00                          ; 0x59e2 $D9D2 A0 00                    ;;Y = #$00 0000_0000
LD9D4                                                                          ;
lda      ($10),y                       ; 0x59e4 $D9D4 B1 10                    ;
sta      (L0000),y                     ; 0x59e6 $D9D6 91 00                    ;
iny                                    ; 0x59e8 $D9D8 C8                       ;
cpy      #$2C                          ; 0x59e9 $D9D9 C0 2C                    ;
bne      LD9D4                         ; 0x59eb $D9DB D0 F7                    ;
LD9DD                                                                          ;
jsr      LDEE5                         ; 0x59ed $D9DD 20 E5 DE                 ;
lda      $10                           ; 0x59f0 $D9E0 A5 10                    ;
sta      L0000                         ; 0x59f2 $D9E2 85 00                    ;
lda      $11                           ; 0x59f4 $D9E4 A5 11                    ;
sta      $01                           ; 0x59f6 $D9E6 85 01                    ;
dec      $9F                           ; 0x59f8 $D9E8 C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0x59fa $D9EA C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x59fc $D9EC 20 E5 DE                 ;
ldy      #$00                          ; 0x59ff $D9EF A0 00                    ;;Y = #$00 0000_0000
LD9F1                                                                          ;
lda      ($10),y                       ; 0x5a01 $D9F1 B1 10                    ;
sta      (L0000),y                     ; 0x5a03 $D9F3 91 00                    ;
iny                                    ; 0x5a05 $D9F5 C8                       ;
cpy      #$2C                          ; 0x5a06 $D9F6 C0 2C                    ;
bne      LD9F1                         ; 0x5a08 $D9F8 D0 F7                    ;
lda      $9F                           ; 0x5a0a $D9FA A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
bne      LD9DD                         ; 0x5a0c $D9FC D0 DF                    ;
inc      $37                           ; 0x5a0e $D9FE E6 37                    ;;player PosY, 0-14 (small meta-tile size)
inc      $37                           ; 0x5a10 $DA00 E6 37                    ;;player PosY, 0-14 (small meta-tile size)
lda      $07                           ; 0x5a12 $DA02 A5 07                    ;
beq      LDA09                         ; 0x5a14 $DA04 F0 03                    ;
jsr      LDAC4                         ; 0x5a16 $DA06 20 C4 DA                 ;
LDA09                                                                          ;
inc      $07                           ; 0x5a19 $DA09 E6 07                    ;
dec      $06                           ; 0x5a1b $DA0B C6 06                    ;
bne      LD997                         ; 0x5a1d $DA0D D0 88                    ;
jmp      LDE16                         ; 0x5a1f $DA0F 4C 16 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDA12                                                                          ;
lda      #$00                          ; 0x5a22 $DA12 A9 00                    ;;A = #$00 0000_0000
sta      $9F                           ; 0x5a24 $DA14 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LDA16                                                                          ;
lda      #$02                          ; 0x5a26 $DA16 A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x5a28 $DA18 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5a2a $DA1A 20 B9 DE                 ;
lda      $0E                           ; 0x5a2d $DA1D A5 0E                    ;
sta      L0000                         ; 0x5a2f $DA1F 85 00                    ;
lda      $0F                           ; 0x5a31 $DA21 A5 0F                    ;
sta      $01                           ; 0x5a33 $DA23 85 01                    ;
lda      #$00                          ; 0x5a35 $DA25 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5a37 $DA27 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5a39 $DA29 20 B9 DE                 ;
ldy      #$13                          ; 0x5a3c $DA2C A0 13                    ;;Y = #$13 0001_0011
LDA2E                                                                          ;
lda      ($0E),y                       ; 0x5a3e $DA2E B1 0E                    ;
sta      (L0000),y                     ; 0x5a40 $DA30 91 00                    ;
dey                                    ; 0x5a42 $DA32 88                       ;
bpl      LDA2E                         ; 0x5a43 $DA33 10 F9                    ;
inc      $9F                           ; 0x5a45 $DA35 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5a47 $DA37 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5a49 $DA39 C9 16                    ;
bne      LDA16                         ; 0x5a4b $DA3B D0 D9                    ;
lda      #$16                          ; 0x5a4d $DA3D A9 16                    ;;A = #$16 0001_0110
sta      $36                           ; 0x5a4f $DA3F 85 36                    ;;player PosX, 0-14 (small meta-tile size)
LDA41                                                                          ;
lda      #$00                          ; 0x5a51 $DA41 A9 00                    ;;A = #$00 0000_0000
sta      $9F                           ; 0x5a53 $DA43 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LDA45                                                                          ;
lda      #$00                          ; 0x5a55 $DA45 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5a57 $DA47 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5a59 $DA49 20 B9 DE                 ;
lda      $0E                           ; 0x5a5c $DA4C A5 0E                    ;
sta      L0000                         ; 0x5a5e $DA4E 85 00                    ;
lda      $0F                           ; 0x5a60 $DA50 A5 0F                    ;
sta      $01                           ; 0x5a62 $DA52 85 01                    ;
lda      #$02                          ; 0x5a64 $DA54 A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x5a66 $DA56 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5a68 $DA58 20 B9 DE                 ;
ldy      #$00                          ; 0x5a6b $DA5B A0 00                    ;;Y = #$00 0000_0000
LDA5D                                                                          ;
lda      ($0E),y                       ; 0x5a6d $DA5D B1 0E                    ;
sta      (L0000),y                     ; 0x5a6f $DA5F 91 00                    ;
iny                                    ; 0x5a71 $DA61 C8                       ;
cpy      #$14                          ; 0x5a72 $DA62 C0 14                    ;
bmi      LDA5D                         ; 0x5a74 $DA64 30 F7                    ;
lda      #$14                          ; 0x5a76 $DA66 A9 14                    ;;A = #$14 0001_0100
sta      $9E                           ; 0x5a78 $DA68 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5a7a $DA6A 20 B9 DE                 ;
lda      $0E                           ; 0x5a7d $DA6D A5 0E                    ;
sta      L0000                         ; 0x5a7f $DA6F 85 00                    ;
lda      $0F                           ; 0x5a81 $DA71 A5 0F                    ;
sta      $01                           ; 0x5a83 $DA73 85 01                    ;
lda      #$00                          ; 0x5a85 $DA75 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5a87 $DA77 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x5a89 $DA79 20 E5 DE                 ;
ldy      #$00                          ; 0x5a8c $DA7C A0 00                    ;;Y = #$00 0000_0000
lda      ($10),y                       ; 0x5a8e $DA7E B1 10                    ;
sta      (L0000),y                     ; 0x5a90 $DA80 91 00                    ;
iny                                    ; 0x5a92 $DA82 C8                       ;
lda      ($10),y                       ; 0x5a93 $DA83 B1 10                    ;
sta      (L0000),y                     ; 0x5a95 $DA85 91 00                    ;
lda      #$00                          ; 0x5a97 $DA87 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5a99 $DA89 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x5a9b $DA8B 20 E5 DE                 ;
lda      $10                           ; 0x5a9e $DA8E A5 10                    ;
sta      L0000                         ; 0x5aa0 $DA90 85 00                    ;
lda      $11                           ; 0x5aa2 $DA92 A5 11                    ;
sta      $01                           ; 0x5aa4 $DA94 85 01                    ;
lda      #$02                          ; 0x5aa6 $DA96 A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x5aa8 $DA98 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDEE5                         ; 0x5aaa $DA9A 20 E5 DE                 ;
ldy      #$00                          ; 0x5aad $DA9D A0 00                    ;;Y = #$00 0000_0000
LDA9F                                                                          ;
lda      ($10),y                       ; 0x5aaf $DA9F B1 10                    ;
sta      (L0000),y                     ; 0x5ab1 $DAA1 91 00                    ;
iny                                    ; 0x5ab3 $DAA3 C8                       ;
cpy      #$14                          ; 0x5ab4 $DAA4 C0 14                    ;
bmi      LDA9F                         ; 0x5ab6 $DAA6 30 F7                    ;
inc      $9F                           ; 0x5ab8 $DAA8 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5aba $DAAA A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5abc $DAAC C9 16                    ;
bmi      LDA45                         ; 0x5abe $DAAE 30 95                    ;
dec      $36                           ; 0x5ac0 $DAB0 C6 36                    ;;player PosX, 0-14 (small meta-tile size)
dec      $36                           ; 0x5ac2 $DAB2 C6 36                    ;;player PosX, 0-14 (small meta-tile size)
lda      $07                           ; 0x5ac4 $DAB4 A5 07                    ;
beq      LDABB                         ; 0x5ac6 $DAB6 F0 03                    ;
jsr      LDAC4                         ; 0x5ac8 $DAB8 20 C4 DA                 ;
LDABB                                                                          ;
inc      $07                           ; 0x5acb $DABB E6 07                    ;
dec      $06                           ; 0x5acd $DABD C6 06                    ;
bne      LDA41                         ; 0x5acf $DABF D0 80                    ;
jmp      LDE16                         ; 0x5ad1 $DAC1 4C 16 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDAC4                                                                          ;
lda      #$04                          ; 0x5ad4 $DAC4 A9 04                    ;;A = #$04 0000_0100
sta      $0D                           ; 0x5ad6 $DAC6 85 0D                    ;
lda      #$E4                          ; 0x5ad8 $DAC8 A9 E4                    ;;A = #$e4 1110_0100
sta      $0C                           ; 0x5ada $DACA 85 0C                    ;
lda      #$16                          ; 0x5adc $DACC A9 16                    ;;A = #$16 0001_0110
sta      $A0                           ; 0x5ade $DACE 85 A0                    ;
lda      #$05                          ; 0x5ae0 $DAD0 A9 05                    ;;A = #$05 0000_0101
ldx      #$00                          ; 0x5ae2 $DAD2 A2 00                    ;;X = #$00 0000_0000
LDAD4                                                                          ;
sta      $06C8,x                       ; 0x5ae4 $DAD4 9D C8 06                 ;
inx                                    ; 0x5ae7 $DAD7 E8                       ;
cpx      #$06                          ; 0x5ae8 $DAD8 E0 06                    ;
bmi      LDAD4                         ; 0x5aea $DADA 30 F8                    ;
lda      #$00                          ; 0x5aec $DADC A9 00                    ;;A = #$00 0000_0000
LDADE                                                                          ;
sta      $06C8,x                       ; 0x5aee $DADE 9D C8 06                 ;
inx                                    ; 0x5af1 $DAE1 E8                       ;
cpx      #$24                          ; 0x5af2 $DAE2 E0 24                    ;
bmi      LDADE                         ; 0x5af4 $DAE4 30 F8                    ;
ldx      #$00                          ; 0x5af6 $DAE6 A2 00                    ;;X = #$00 0000_0000
LDAE8                                                                          ;
lda      $06C8,x                       ; 0x5af8 $DAE8 BD C8 06                 ;
ora      #$11                          ; 0x5afb $DAEB 09 11                    ;;Set Bits:0001_0001
sta      $06C8,x                       ; 0x5afd $DAED 9D C8 06                 ;
txa                                    ; 0x5b00 $DAF0 8A                       ;
clc                                    ; 0x5b01 $DAF1 18                       ;
adc      #$06                          ; 0x5b02 $DAF2 69 06                    ;
tax                                    ; 0x5b04 $DAF4 AA                       ;
cpx      #$24                          ; 0x5b05 $DAF5 E0 24                    ;
bmi      LDAE8                         ; 0x5b07 $DAF7 30 EF                    ;
jsr      ClearAll200__set200toF0__setA7to00; 0x5b09 $DAF9 20 7D 96             ;
lda      $36                           ; 0x5b0c $DAFC A5 36                    ;;player PosX, 0-14 (small meta-tile size)
asl                                    ; 0x5b0e $DAFE 0A                       ;
asl                                    ; 0x5b0f $DAFF 0A                       ;
asl                                    ; 0x5b10 $DB00 0A                       ;
adc      #$08                          ; 0x5b11 $DB01 69 08                    ;
sta      $A8                           ; 0x5b13 $DB03 85 A8                    ;;Sprite Data 4 Bytes: X screen draw location ??
lda      $37                           ; 0x5b15 $DB05 A5 37                    ;;player PosY, 0-14 (small meta-tile size)
asl                                    ; 0x5b17 $DB07 0A                       ;
asl                                    ; 0x5b18 $DB08 0A                       ;
asl                                    ; 0x5b19 $DB09 0A                       ;
adc      #$0F                          ; 0x5b1a $DB0A 69 0F                    ;
sta      $A9                           ; 0x5b1c $DB0C 85 A9                    ;;Sprite Data 4 Bytes: Y screen draw location ??
jsr      L91BF                         ; 0x5b1e $DB0E 20 BF 91                 ;
lda      #$FF                          ; 0x5b21 $DB11 A9 FF                    ;;A = #$ff 1111_1111
sta      $25                           ; 0x5b23 $DB13 85 25                    ;
lda      #$00                          ; 0x5b25 $DB15 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5b27 $DB17 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $9F                           ; 0x5b29 $DB19 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Screen_Transition__ScrollingEffect; 0x5b2b $DB1B 20 37 DB             ;
lda      #$02                          ; 0x5b2e $DB1E A9 02                    ;;A = #$02 0000_0010
sta      $4014                         ; 0x5b30 $DB20 8D 14 40                 ;;OAM DMA ($4014) > write
;OAM DMA ($4014) > write                                                       ;
;    Common name: OAMDMA                                                       ;
;    Description: OAM DMA register (high byte)                                 ;
;    Access: write                                                             ;
;This port is located on the CPU. Writing $XX will upload 256 bytes of data from CPU page $XX00-$XXFF to the internal PPU OAM. This page is typically located in internal RAM, commonly $0200-$02FF, but cartridge RAM or ROM can be used as well.;
;    The CPU is suspended during the transfer, which will take 513 or 514 cycles after the $4014 write tick. (1 dummy read cycle while waiting for writes to complete, +1 if on an odd CPU cycle, then 256 alternating read/write cycles.);
;    The OAM DMA is the only effective method for initializing all 256 bytes of OAM. Because of the decay of OAM's dynamic RAM when rendering is disabled, the initialization should take place within vblank. Writes through OAMDATA are generally too slow for this task.;
;    The DMA transfer will begin at the current OAM write address. It is common practice to initialize it to 0 with a write to OAMADDR before the DMA transfer. Different starting addresses can be used for a simple OAM cycling technique, to alleviate sprite priority conflicts by flickering. If using this technique, after the DMA OAMADDR should be set to 0 before the end of vblank to prevent potential OAM corruption (See: Errata). However, due to OAMADDR writes also having a "corruption" effect[5] this technique is not recommended.;
jsr      LDBD3                         ; 0x5b33 $DB23 20 D3 DB                 ;
jsr      LDBD3                         ; 0x5b36 $DB26 20 D3 DB                 ;
jsr      LDBD3                         ; 0x5b39 $DB29 20 D3 DB                 ;
jsr      LDBD3                         ; 0x5b3c $DB2C 20 D3 DB                 ;
jsr      LDBD3                         ; 0x5b3f $DB2F 20 D3 DB                 ;
lda      #$00                          ; 0x5b42 $DB32 A9 00                    ;;A = #$00 0000_0000
sta      $25                           ; 0x5b44 $DB34 85 25                    ;
rts                                    ; 0x5b46 $DB36 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Screen_Transition__ScrollingEffect                                             ;
jsr      Point_0E__based_on_9E_9F      ; 0x5b47 $DB37 20 B9 DE                 ;
ldy      #$00                          ; 0x5b4a $DB3A A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x5b4c $DB3C B1 0E                    ;
tax                                    ; 0x5b4e $DB3E AA                       ;
lda      LDFC4,x                       ; 0x5b4f $DB3F BD C4 DF                 ;
sta      $A1                           ; 0x5b52 $DB42 85 A1                    ;
beq      LDB88                         ; 0x5b54 $DB44 F0 42                    ;
lda      $9F                           ; 0x5b56 $DB46 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5b58 $DB48 18                       ;
adc      #$02                          ; 0x5b59 $DB49 69 02                    ;
and      #$FC                          ; 0x5b5b $DB4B 29 FC                    ;;Keep Bits:1111_1100
sta      $08                           ; 0x5b5d $DB4D 85 08                    ;;save calc'd attack strength to $08 ?
lsr                                    ; 0x5b5f $DB4F 4A                       ;
clc                                    ; 0x5b60 $DB50 18                       ;
adc      $08                           ; 0x5b61 $DB51 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x5b63 $DB53 85 08                    ;;save calc'd attack strength to $08 ?
lda      $9E                           ; 0x5b65 $DB55 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5b67 $DB57 18                       ;
adc      #$02                          ; 0x5b68 $DB58 69 02                    ;
lsr                                    ; 0x5b6a $DB5A 4A                       ;
lsr                                    ; 0x5b6b $DB5B 4A                       ;
clc                                    ; 0x5b6c $DB5C 18                       ;
adc      $08                           ; 0x5b6d $DB5D 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x5b6f $DB5F 85 08                    ;;save calc'd attack strength to $08 ?
tax                                    ; 0x5b71 $DB61 AA                       ;
lda      $9F                           ; 0x5b72 $DB62 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5b74 $DB64 18                       ;
adc      #$02                          ; 0x5b75 $DB65 69 02                    ;
and      #$02                          ; 0x5b77 $DB67 29 02                    ;;Keep Bits:0000_0010
beq      LDB73                         ; 0x5b79 $DB69 F0 08                    ;
asl      $A1                           ; 0x5b7b $DB6B 06 A1                    ;
asl      $A1                           ; 0x5b7d $DB6D 06 A1                    ;
asl      $A1                           ; 0x5b7f $DB6F 06 A1                    ;
asl      $A1                           ; 0x5b81 $DB71 06 A1                    ;
LDB73                                                                          ;
lda      $9E                           ; 0x5b83 $DB73 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5b85 $DB75 18                       ;
adc      #$02                          ; 0x5b86 $DB76 69 02                    ;
and      #$02                          ; 0x5b88 $DB78 29 02                    ;;Keep Bits:0000_0010
beq      LDB80                         ; 0x5b8a $DB7A F0 04                    ;
asl      $A1                           ; 0x5b8c $DB7C 06 A1                    ;
asl      $A1                           ; 0x5b8e $DB7E 06 A1                    ;
LDB80                                                                          ;
lda      $06C8,x                       ; 0x5b90 $DB80 BD C8 06                 ;
ora      $A1                           ; 0x5b93 $DB83 05 A1                    ;
sta      $06C8,x                       ; 0x5b95 $DB85 9D C8 06                 ;
LDB88                                                                          ;
inc      $9E                           ; 0x5b98 $DB88 E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9E                           ; 0x5b9a $DB8A E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x5b9c $DB8C A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5b9e $DB8E C9 16                    ;
bmi      Screen_Transition__ScrollingEffect; 0x5ba0 $DB90 30 A5                ;
lda      #$00                          ; 0x5ba2 $DB92 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5ba4 $DB94 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$02                          ; 0x5ba6 $DB96 A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x5ba8 $DB98 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5baa $DB9A A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5bac $DB9C 18                       ;
adc      #$02                          ; 0x5bad $DB9D 69 02                    ;
sta      $9F                           ; 0x5baf $DB9F 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9600                         ; 0x5bb1 $DBA1 20 00 96                 ;
jsr      L951A                         ; 0x5bb4 $DBA4 20 1A 95                 ;
jsr      LDE51                         ; 0x5bb7 $DBA7 20 51 DE                 ;
inc      $9F                           ; 0x5bba $DBAA E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDE51                         ; 0x5bbc $DBAC 20 51 DE                 ;
jsr      L961F                         ; 0x5bbf $DBAF 20 1F 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x5bc2 $DBB2 20 5D 96  ;
ldy      #$00                          ; 0x5bc5 $DBB5 A0 00                    ;;Y = #$00 0000_0000
ldx      #$06                          ; 0x5bc7 $DBB7 A2 06                    ;;X = #$06 0000_0110
LDBB9                                                                          ;
lda      $06C8,y                       ; 0x5bc9 $DBB9 B9 C8 06                 ;
sta      $2007                         ; 0x5bcc $DBBC 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5bcf $DBBF C8                       ;
dex                                    ; 0x5bd0 $DBC0 CA                       ;
bne      LDBB9                         ; 0x5bd1 $DBC1 D0 F6                    ;
sty      $9C                           ; 0x5bd3 $DBC3 84 9C                    ;
lda      #$00                          ; 0x5bd5 $DBC5 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5bd7 $DBC7 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5bd9 $DBC9 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x5bdb $DBCB 38                       ;
sbc      #$02                          ; 0x5bdc $DBCC E9 02                    ;
sta      $9F                           ; 0x5bde $DBCE 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5be0 $DBD0 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
rts                                    ; 0x5be2 $DBD2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDBD3                                                                          ;
lda      #$02                          ; 0x5be3 $DBD3 A9 02                    ;;A = #$02 0000_0010
sta      $04                           ; 0x5be5 $DBD5 85 04                    ;
LDBD7                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x5be7 $DBD7 20 B9 DE                 ;
ldy      #$00                          ; 0x5bea $DBDA A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x5bec $DBDC B1 0E                    ;
tax                                    ; 0x5bee $DBDE AA                       ;
lda      LDFC4,x                       ; 0x5bef $DBDF BD C4 DF                 ;
sta      $A1                           ; 0x5bf2 $DBE2 85 A1                    ;
beq      LDC28                         ; 0x5bf4 $DBE4 F0 42                    ;
lda      $9F                           ; 0x5bf6 $DBE6 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5bf8 $DBE8 18                       ;
adc      #$02                          ; 0x5bf9 $DBE9 69 02                    ;
and      #$FC                          ; 0x5bfb $DBEB 29 FC                    ;;Keep Bits:1111_1100
sta      $08                           ; 0x5bfd $DBED 85 08                    ;;save calc'd attack strength to $08 ?
lsr                                    ; 0x5bff $DBEF 4A                       ;
clc                                    ; 0x5c00 $DBF0 18                       ;
adc      $08                           ; 0x5c01 $DBF1 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x5c03 $DBF3 85 08                    ;;save calc'd attack strength to $08 ?
lda      $9E                           ; 0x5c05 $DBF5 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5c07 $DBF7 18                       ;
adc      #$02                          ; 0x5c08 $DBF8 69 02                    ;
lsr                                    ; 0x5c0a $DBFA 4A                       ;
lsr                                    ; 0x5c0b $DBFB 4A                       ;
clc                                    ; 0x5c0c $DBFC 18                       ;
adc      $08                           ; 0x5c0d $DBFD 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x5c0f $DBFF 85 08                    ;;save calc'd attack strength to $08 ?
tax                                    ; 0x5c11 $DC01 AA                       ;
lda      $9F                           ; 0x5c12 $DC02 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5c14 $DC04 18                       ;
adc      #$02                          ; 0x5c15 $DC05 69 02                    ;
and      #$02                          ; 0x5c17 $DC07 29 02                    ;;Keep Bits:0000_0010
beq      LDC13                         ; 0x5c19 $DC09 F0 08                    ;
asl      $A1                           ; 0x5c1b $DC0B 06 A1                    ;
asl      $A1                           ; 0x5c1d $DC0D 06 A1                    ;
asl      $A1                           ; 0x5c1f $DC0F 06 A1                    ;
asl      $A1                           ; 0x5c21 $DC11 06 A1                    ;
LDC13                                                                          ;
lda      $9E                           ; 0x5c23 $DC13 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5c25 $DC15 18                       ;
adc      #$02                          ; 0x5c26 $DC16 69 02                    ;
and      #$02                          ; 0x5c28 $DC18 29 02                    ;;Keep Bits:0000_0010
beq      LDC20                         ; 0x5c2a $DC1A F0 04                    ;
asl      $A1                           ; 0x5c2c $DC1C 06 A1                    ;
asl      $A1                           ; 0x5c2e $DC1E 06 A1                    ;
LDC20                                                                          ;
lda      $06C8,x                       ; 0x5c30 $DC20 BD C8 06                 ;
ora      $A1                           ; 0x5c33 $DC23 05 A1                    ;
sta      $06C8,x                       ; 0x5c35 $DC25 9D C8 06                 ;
LDC28                                                                          ;
inc      $9E                           ; 0x5c38 $DC28 E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9E                           ; 0x5c3a $DC2A E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x5c3c $DC2C A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5c3e $DC2E C9 16                    ;
bmi      LDBD7                         ; 0x5c40 $DC30 30 A5                    ;
lda      #$00                          ; 0x5c42 $DC32 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5c44 $DC34 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5c46 $DC36 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5c48 $DC38 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $04                           ; 0x5c4a $DC3A C6 04                    ;
bne      LDBD7                         ; 0x5c4c $DC3C D0 99                    ;
ldx      $9F                           ; 0x5c4e $DC3E A6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dex                                    ; 0x5c50 $DC40 CA                       ;
dex                                    ; 0x5c51 $DC41 CA                       ;
dex                                    ; 0x5c52 $DC42 CA                       ;
dex                                    ; 0x5c53 $DC43 CA                       ;
stx      $9F                           ; 0x5c54 $DC44 86 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      #$02                          ; 0x5c56 $DC46 A9 02                    ;;A = #$02 0000_0010
sta      $9E                           ; 0x5c58 $DC48 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5c5a $DC4A A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5c5c $DC4C 18                       ;
adc      #$02                          ; 0x5c5d $DC4D 69 02                    ;
sta      $9F                           ; 0x5c5f $DC4F 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      L9600                         ; 0x5c61 $DC51 20 00 96                 ;
jsr      L951A                         ; 0x5c64 $DC54 20 1A 95                 ;
jsr      LDE51                         ; 0x5c67 $DC57 20 51 DE                 ;
inc      $9F                           ; 0x5c6a $DC5A E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDE51                         ; 0x5c6c $DC5C 20 51 DE                 ;
inc      $9F                           ; 0x5c6f $DC5F E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDE51                         ; 0x5c71 $DC61 20 51 DE                 ;
inc      $9F                           ; 0x5c74 $DC64 E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      LDE51                         ; 0x5c76 $DC66 20 51 DE                 ;
jsr      L961F                         ; 0x5c79 $DC69 20 1F 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x5c7c $DC6C 20 5D 96  ;
ldy      $9C                           ; 0x5c7f $DC6F A4 9C                    ;
ldx      #$06                          ; 0x5c81 $DC71 A2 06                    ;;X = #$06 0000_0110
LDC73                                                                          ;
lda      $06C8,y                       ; 0x5c83 $DC73 B9 C8 06                 ;
sta      $2007                         ; 0x5c86 $DC76 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5c89 $DC79 C8                       ;
dex                                    ; 0x5c8a $DC7A CA                       ;
bne      LDC73                         ; 0x5c8b $DC7B D0 F6                    ;
sty      $9C                           ; 0x5c8d $DC7D 84 9C                    ;
lda      #$00                          ; 0x5c8f $DC7F A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5c91 $DC81 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5c93 $DC83 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sec                                    ; 0x5c95 $DC85 38                       ;
sbc      #$02                          ; 0x5c96 $DC86 E9 02                    ;
sta      $9F                           ; 0x5c98 $DC88 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5c9a $DC8A E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
rts                                    ; 0x5c9c $DC8C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDC8D                                                                          ;
lda      #$05                          ; 0x5c9d $DC8D A9 05                    ;;A = #$05 0000_0101
ldx      #$00                          ; 0x5c9f $DC8F A2 00                    ;;X = #$00 0000_0000
LDC91                                                                          ;
sta      $06C8,x                       ; 0x5ca1 $DC91 9D C8 06                 ;
inx                                    ; 0x5ca4 $DC94 E8                       ;
cpx      #$06                          ; 0x5ca5 $DC95 E0 06                    ;
bmi      LDC91                         ; 0x5ca7 $DC97 30 F8                    ;
lda      #$00                          ; 0x5ca9 $DC99 A9 00                    ;;A = #$00 0000_0000
LDC9B                                                                          ;
sta      $06C8,x                       ; 0x5cab $DC9B 9D C8 06                 ;
inx                                    ; 0x5cae $DC9E E8                       ;
cpx      #$24                          ; 0x5caf $DC9F E0 24                    ;
bmi      LDC9B                         ; 0x5cb1 $DCA1 30 F8                    ;
ldx      #$00                          ; 0x5cb3 $DCA3 A2 00                    ;;X = #$00 0000_0000
LDCA5                                                                          ;
lda      $06C8,x                       ; 0x5cb5 $DCA5 BD C8 06                 ;
ora      #$11                          ; 0x5cb8 $DCA8 09 11                    ;;Set Bits:0001_0001
sta      $06C8,x                       ; 0x5cba $DCAA 9D C8 06                 ;
txa                                    ; 0x5cbd $DCAD 8A                       ;
clc                                    ; 0x5cbe $DCAE 18                       ;
adc      #$06                          ; 0x5cbf $DCAF 69 06                    ;
tax                                    ; 0x5cc1 $DCB1 AA                       ;
cpx      #$24                          ; 0x5cc2 $DCB2 E0 24                    ;
bmi      LDCA5                         ; 0x5cc4 $DCB4 30 EF                    ;
lda      #$00                          ; 0x5cc6 $DCB6 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5cc8 $DCB8 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $9F                           ; 0x5cca $DCBA 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LDCBC                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x5ccc $DCBC 20 B9 DE                 ;
ldy      #$00                          ; 0x5ccf $DCBF A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x5cd1 $DCC1 B1 0E                    ;
tax                                    ; 0x5cd3 $DCC3 AA                       ;
lda      LDFC4,x                       ; 0x5cd4 $DCC4 BD C4 DF                 ;
sta      $A1                           ; 0x5cd7 $DCC7 85 A1                    ;
beq      LDD0D                         ; 0x5cd9 $DCC9 F0 42                    ;
lda      $9F                           ; 0x5cdb $DCCB A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5cdd $DCCD 18                       ;
adc      #$02                          ; 0x5cde $DCCE 69 02                    ;
and      #$FC                          ; 0x5ce0 $DCD0 29 FC                    ;;Keep Bits:1111_1100
sta      $08                           ; 0x5ce2 $DCD2 85 08                    ;;save calc'd attack strength to $08 ?
lsr                                    ; 0x5ce4 $DCD4 4A                       ;
clc                                    ; 0x5ce5 $DCD5 18                       ;
adc      $08                           ; 0x5ce6 $DCD6 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x5ce8 $DCD8 85 08                    ;;save calc'd attack strength to $08 ?
lda      $9E                           ; 0x5cea $DCDA A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5cec $DCDC 18                       ;
adc      #$02                          ; 0x5ced $DCDD 69 02                    ;
lsr                                    ; 0x5cef $DCDF 4A                       ;
lsr                                    ; 0x5cf0 $DCE0 4A                       ;
clc                                    ; 0x5cf1 $DCE1 18                       ;
adc      $08                           ; 0x5cf2 $DCE2 65 08                    ;;save calc'd attack strength to $08 ?
sta      $08                           ; 0x5cf4 $DCE4 85 08                    ;;save calc'd attack strength to $08 ?
tax                                    ; 0x5cf6 $DCE6 AA                       ;
lda      $9F                           ; 0x5cf7 $DCE7 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5cf9 $DCE9 18                       ;
adc      #$02                          ; 0x5cfa $DCEA 69 02                    ;
and      #$02                          ; 0x5cfc $DCEC 29 02                    ;;Keep Bits:0000_0010
beq      LDCF8                         ; 0x5cfe $DCEE F0 08                    ;
asl      $A1                           ; 0x5d00 $DCF0 06 A1                    ;
asl      $A1                           ; 0x5d02 $DCF2 06 A1                    ;
asl      $A1                           ; 0x5d04 $DCF4 06 A1                    ;
asl      $A1                           ; 0x5d06 $DCF6 06 A1                    ;
LDCF8                                                                          ;
lda      $9E                           ; 0x5d08 $DCF8 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
clc                                    ; 0x5d0a $DCFA 18                       ;
adc      #$02                          ; 0x5d0b $DCFB 69 02                    ;
and      #$02                          ; 0x5d0d $DCFD 29 02                    ;;Keep Bits:0000_0010
beq      LDD05                         ; 0x5d0f $DCFF F0 04                    ;
asl      $A1                           ; 0x5d11 $DD01 06 A1                    ;
asl      $A1                           ; 0x5d13 $DD03 06 A1                    ;
LDD05                                                                          ;
lda      $06C8,x                       ; 0x5d15 $DD05 BD C8 06                 ;
ora      $A1                           ; 0x5d18 $DD08 05 A1                    ;
sta      $06C8,x                       ; 0x5d1a $DD0A 9D C8 06                 ;
LDD0D                                                                          ;
inc      $9E                           ; 0x5d1d $DD0D E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9E                           ; 0x5d1f $DD0F E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x5d21 $DD11 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5d23 $DD13 C9 16                    ;
bmi      LDCBC                         ; 0x5d25 $DD15 30 A5                    ;
lda      #$00                          ; 0x5d27 $DD17 A9 00                    ;;A = #$00 0000_0000
sta      $9E                           ; 0x5d29 $DD19 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5d2b $DD1B E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5d2d $DD1D E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5d2f $DD1F A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      #$16                          ; 0x5d31 $DD21 C9 16                    ;
bmi      LDCBC                         ; 0x5d33 $DD23 30 97                    ;
lda      $4B                           ; 0x5d35 $DD25 A5 4B                    ;
bne      LDD61                         ; 0x5d37 $DD27 D0 38                    ;
lda      #$23                          ; 0x5d39 $DD29 A9 23                    ;;A = #$23 0010_0011
sta      $01                           ; 0x5d3b $DD2B 85 01                    ;
lda      #$C0                          ; 0x5d3d $DD2D A9 C0                    ;;A = #$c0 1100_0000
sta      L0000                         ; 0x5d3f $DD2F 85 00                    ;
jsr      L965A                         ; 0x5d41 $DD31 20 5A 96                 ;
ldy      #$00                          ; 0x5d44 $DD34 A0 00                    ;;Y = #$00 0000_0000
LDD36                                                                          ;
ldx      #$06                          ; 0x5d46 $DD36 A2 06                    ;;X = #$06 0000_0110
LDD38                                                                          ;
lda      $06C8,y                       ; 0x5d48 $DD38 B9 C8 06                 ;
sta      $2007                         ; 0x5d4b $DD3B 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5d4e $DD3E C8                       ;
dex                                    ; 0x5d4f $DD3F CA                       ;
bne      LDD38                         ; 0x5d50 $DD40 D0 F6                    ;
lda      #$55                          ; 0x5d52 $DD42 A9 55                    ;;A = #$55 0101_0101
sta      $2007                         ; 0x5d54 $DD44 8D 07 20                 ;;Data ($2007) <> read/write
sta      $2007                         ; 0x5d57 $DD47 8D 07 20                 ;;Data ($2007) <> read/write
cpy      #$24                          ; 0x5d5a $DD4A C0 24                    ;
bne      LDD36                         ; 0x5d5c $DD4C D0 E8                    ;
lda      #$0A                          ; 0x5d5e $DD4E A9 0A                    ;;A = #$0a 0000_1010
sta      $A3                           ; 0x5d60 $DD50 85 A3                    ;
sta      $A5                           ; 0x5d62 $DD52 85 A5                    ;
lda      #$FE                          ; 0x5d64 $DD54 A9 FE                    ;;A = #$fe 1111_1110
sta      $08                           ; 0x5d66 $DD56 85 08                    ;;save calc'd attack strength to $08 ?
lda      #$02                          ; 0x5d68 $DD58 A9 02                    ;;A = #$02 0000_0010
sta      $09                           ; 0x5d6a $DD5A 85 09                    ;
lda      #$00                          ; 0x5d6c $DD5C A9 00                    ;;A = #$00 0000_0000
jsr      LDD68                         ; 0x5d6e $DD5E 20 68 DD                 ;
LDD61                                                                          ;
lda      #$00                          ; 0x5d71 $DD61 A9 00                    ;;A = #$00 0000_0000
sta      $80                           ; 0x5d73 $DD63 85 80                    ;
jmp      LDE16                         ; 0x5d75 $DD65 4C 16 DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD68                                                                          ;
sta      $0A                           ; 0x5d78 $DD68 85 0A                    ;
lda      #$FF                          ; 0x5d7a $DD6A A9 FF                    ;;A = #$ff 1111_1111
sta      $25                           ; 0x5d7c $DD6C 85 25                    ;
lda      #$00                          ; 0x5d7e $DD6E A9 00                    ;;A = #$00 0000_0000
sta      $04                           ; 0x5d80 $DD70 85 04                    ;
jsr      L951A                         ; 0x5d82 $DD72 20 1A 95                 ;
LDD75                                                                          ;
lda      $A3                           ; 0x5d85 $DD75 A5 A3                    ;
sta      $9F                           ; 0x5d87 $DD77 85 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $9E                           ; 0x5d89 $DD79 85 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
LDD7B                                                                          ;
jsr      LDDCB                         ; 0x5d8b $DD7B 20 CB DD                 ;
inc      $9E                           ; 0x5d8e $DD7E E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9E                           ; 0x5d90 $DD80 E6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x5d92 $DD82 A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      $A5                           ; 0x5d94 $DD84 C5 A5                    ;
bmi      LDD7B                         ; 0x5d96 $DD86 30 F3                    ;
LDD88                                                                          ;
jsr      LDDCB                         ; 0x5d98 $DD88 20 CB DD                 ;
inc      $9F                           ; 0x5d9b $DD8B E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inc      $9F                           ; 0x5d9d $DD8D E6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5d9f $DD8F A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      $A5                           ; 0x5da1 $DD91 C5 A5                    ;
bmi      LDD88                         ; 0x5da3 $DD93 30 F3                    ;
LDD95                                                                          ;
jsr      LDDCB                         ; 0x5da5 $DD95 20 CB DD                 ;
dec      $9E                           ; 0x5da8 $DD98 C6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9E                           ; 0x5daa $DD9A C6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9E                           ; 0x5dac $DD9C A5 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      $A3                           ; 0x5dae $DD9E C5 A3                    ;
bne      LDD95                         ; 0x5db0 $DDA0 D0 F3                    ;
LDDA2                                                                          ;
jsr      LDDCB                         ; 0x5db2 $DDA2 20 CB DD                 ;
dec      $9F                           ; 0x5db5 $DDA5 C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
dec      $9F                           ; 0x5db7 $DDA7 C6 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
lda      $9F                           ; 0x5db9 $DDA9 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
cmp      $A3                           ; 0x5dbb $DDAB C5 A3                    ;
bne      LDDA2                         ; 0x5dbd $DDAD D0 F3                    ;
lda      $A3                           ; 0x5dbf $DDAF A5 A3                    ;
cmp      $0A                           ; 0x5dc1 $DDB1 C5 0A                    ;
beq      LDDC6                         ; 0x5dc3 $DDB3 F0 11                    ;
lda      $A3                           ; 0x5dc5 $DDB5 A5 A3                    ;
clc                                    ; 0x5dc7 $DDB7 18                       ;
adc      $08                           ; 0x5dc8 $DDB8 65 08                    ;;save calc'd attack strength to $08 ?
sta      $A3                           ; 0x5dca $DDBA 85 A3                    ;
lda      $A5                           ; 0x5dcc $DDBC A5 A5                    ;
clc                                    ; 0x5dce $DDBE 18                       ;
adc      $09                           ; 0x5dcf $DDBF 65 09                    ;
sta      $A5                           ; 0x5dd1 $DDC1 85 A5                    ;
jmp      LDD75                         ; 0x5dd3 $DDC3 4C 75 DD                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDDC6                                                                          ;
lda      #$00                          ; 0x5dd6 $DDC6 A9 00                    ;;A = #$00 0000_0000
sta      $25                           ; 0x5dd8 $DDC8 85 25                    ;
rts                                    ; 0x5dda $DDCA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDDCB                                                                          ;
jsr      Point_0E__based_on_9E_9F      ; 0x5ddb $DDCB 20 B9 DE                 ;
ldx      $9E                           ; 0x5dde $DDCE A6 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
inx                                    ; 0x5de0 $DDD0 E8                       ;
inx                                    ; 0x5de1 $DDD1 E8                       ;
ldy      $9F                           ; 0x5de2 $DDD2 A4 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
iny                                    ; 0x5de4 $DDD4 C8                       ;
iny                                    ; 0x5de5 $DDD5 C8                       ;
jsr      L9604                         ; 0x5de6 $DDD6 20 04 96                 ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x5de9 $DDD9 20 5D 96  ;
ldy      #$00                          ; 0x5dec $DDDC A0 00                    ;;Y = #$00 0000_0000
lda      ($0E),y                       ; 0x5dee $DDDE B1 0E                    ;
sta      $2007                         ; 0x5df0 $DDE0 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5df3 $DDE3 C8                       ;
lda      ($0E),y                       ; 0x5df4 $DDE4 B1 0E                    ;
sta      $2007                         ; 0x5df6 $DDE6 8D 07 20                 ;;Data ($2007) <> read/write
lda      L0000                         ; 0x5df9 $DDE9 A5 00                    ;
clc                                    ; 0x5dfb $DDEB 18                       ;
adc      #$20                          ; 0x5dfc $DDEC 69 20                    ;
sta      L0000                         ; 0x5dfe $DDEE 85 00                    ;
lda      $01                           ; 0x5e00 $DDF0 A5 01                    ;
adc      #$00                          ; 0x5e02 $DDF2 69 00                    ;
sta      $01                           ; 0x5e04 $DDF4 85 01                    ;
jsr      PPUADDR_SetTo_00_01__PPUSCROLL_Set_To_TopLeft; 0x5e06 $DDF6 20 5D 96  ;
ldy      #$16                          ; 0x5e09 $DDF9 A0 16                    ;;Y = #$16 0001_0110
lda      ($0E),y                       ; 0x5e0b $DDFB B1 0E                    ;
sta      $2007                         ; 0x5e0d $DDFD 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5e10 $DE00 C8                       ;
lda      ($0E),y                       ; 0x5e11 $DE01 B1 0E                    ;
sta      $2007                         ; 0x5e13 $DE03 8D 07 20                 ;;Data ($2007) <> read/write
inc      $04                           ; 0x5e16 $DE06 E6 04                    ;
lda      $04                           ; 0x5e18 $DE08 A5 04                    ;
cmp      #$06                          ; 0x5e1a $DE0A C9 06                    ;
bmi      LDE15                         ; 0x5e1c $DE0C 30 07                    ;
lda      #$00                          ; 0x5e1e $DE0E A9 00                    ;;A = #$00 0000_0000
sta      $04                           ; 0x5e20 $DE10 85 04                    ;
jsr      L951A                         ; 0x5e22 $DE12 20 1A 95                 ;
LDE15                                                                          ;
rts                                    ; 0x5e25 $DE15 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE16                                                                          ;
jsr      LDE6E                         ; 0x5e26 $DE16 20 6E DE                 ;
jsr      L927F                         ; 0x5e29 $DE19 20 7F 92                 ;
jsr      Screen__Setup_MaxMonsterNumAllowed_AndSomething__And_Point_8B_to_6EC; 0x5e2c $DE1C 20 9A C9;
jsr      L96CA                         ; 0x5e2f $DE1F 20 CA 96                 ;
ldx      $47                           ; 0x5e32 $DE22 A6 47                    ;;player CurrentArea       
lda      table_of_palette_index__based_on_player_currentArea,x; 0x5e34 $DE24 BD 91 DF;
jsr      DF11_load_palette_and_implement__index_with_A; 0x5e37 $DE27 20 11 DF  ;
jsr      ClearAll200__set200toF0__setA7to00; 0x5e3a $DE2A 20 7D 96             ;
lda      $81                           ; 0x5e3d $DE2D A5 81                    ;;COUNTER? flash palette to white when reach =0
beq      LDE35                         ; 0x5e3f $DE2F F0 04                    ;
lda      #$14                          ; 0x5e41 $DE31 A9 14                    ;;A = #$14 0001_0100
bne      LDE49                         ; 0x5e43 $DE33 D0 14                    ;
LDE35                                                                          ;
ldx      $47                           ; 0x5e45 $DE35 A6 47                    ;;player CurrentArea       
cpx      #$21                          ; 0x5e47 $DE37 E0 21                    ;
bmi      LDE47                         ; 0x5e49 $DE39 30 0C                    ;
lda      $60                           ; 0x5e4b $DE3B A5 60                    ;;FF=got jewel 			(appears in ITEM)
and      $61                           ; 0x5e4d $DE3D 25 61                    ;;FF=got ring 			(appears in ITEM)
and      $62                           ; 0x5e4f $DE3F 25 62                    ;;FF=got ruby			(appears in ITEM)
beq      LDE47                         ; 0x5e51 $DE41 F0 04                    ;
lda      #$0C                          ; 0x5e53 $DE43 A9 0C                    ;;A = #$0c 0000_1100
bne      LDE49                         ; 0x5e55 $DE45 D0 02                    ;
LDE47                                                                          ;
lda      #$04                          ; 0x5e57 $DE47 A9 04                    ;;A = #$04 0000_0100
LDE49                                                                          ;
cmp      $BC                           ; 0x5e59 $DE49 C5 BC                    ;;music track index?: 		04=main theme	0C=boss theme
beq      LDE50                         ; 0x5e5b $DE4B F0 03                    ;
jsr      LE142                         ; 0x5e5d $DE4D 20 42 E1                 ;
LDE50                                                                          ;
rts                                    ; 0x5e60 $DE50 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE51                                                                          ;
lda      $4B                           ; 0x5e61 $DE51 A5 4B                    ;
beq      LDE5D                         ; 0x5e63 $DE53 F0 08                    ;
lda      #$9A                          ; 0x5e65 $DE55 A9 9A                    ;;A = #$9a 1001_1010
sta      $0D                           ; 0x5e67 $DE57 85 0D                    ;
lda      #$21                          ; 0x5e69 $DE59 A9 21                    ;;A = #$21 0010_0001
sta      $0C                           ; 0x5e6b $DE5B 85 0C                    ;
LDE5D                                                                          ;
jsr      L963C                         ; 0x5e6d $DE5D 20 3C 96                 ;
lda      L0000                         ; 0x5e70 $DE60 A5 00                    ;
clc                                    ; 0x5e72 $DE62 18                       ;
adc      #$20                          ; 0x5e73 $DE63 69 20                    ;
sta      L0000                         ; 0x5e75 $DE65 85 00                    ;
lda      $01                           ; 0x5e77 $DE67 A5 01                    ;
adc      #$00                          ; 0x5e79 $DE69 69 00                    ;
sta      $01                           ; 0x5e7b $DE6B 85 01                    ;
rts                                    ; 0x5e7d $DE6D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE6E                                                                          ;
ldx      #$00                          ; 0x5e7e $DE6E A2 00                    ;;X = #$00 0000_0000
LDE70                                                                          ;
lda      $04E4,x                       ; 0x5e80 $DE70 BD E4 04                 ;;the current screen tile data? 	($0E) points here
tay                                    ; 0x5e83 $DE73 A8                       ;
lda      LDFF3,y                       ; 0x5e84 $DE74 B9 F3 DF                 ;
ora      $04E4,x                       ; 0x5e87 $DE77 1D E4 04                 ;;the current screen tile data? 	($0E) points here
sta      $04E4,x                       ; 0x5e8a $DE7A 9D E4 04                 ;;the current screen tile data? 	($0E) points here
inx                                    ; 0x5e8d $DE7D E8                       ;
bne      LDE70                         ; 0x5e8e $DE7E D0 F0                    ;
LDE80                                                                          ;
lda      $05E4,x                       ; 0x5e90 $DE80 BD E4 05                 ;;the current screen tile data?
tay                                    ; 0x5e93 $DE83 A8                       ;
lda      LDFF3,y                       ; 0x5e94 $DE84 B9 F3 DF                 ;
ora      $05E4,x                       ; 0x5e97 $DE87 1D E4 05                 ;;the current screen tile data?
sta      $05E4,x                       ; 0x5e9a $DE8A 9D E4 05                 ;;the current screen tile data?
inx                                    ; 0x5e9d $DE8D E8                       ;
cpx      #$E4                          ; 0x5e9e $DE8E E0 E4                    ;
bne      LDE80                         ; 0x5ea0 $DE90 D0 EE                    ;
rts                                    ; 0x5ea2 $DE92 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE93                                                                          ;
lda      $5B                           ; 0x5ea3 $DE93 A5 5B                    ;;FF=got lamp 			(appears in ITEM)
eor      #$FF                          ; 0x5ea5 $DE95 49 FF                    ;;Flip Bits:1111_1111
sta      $4B                           ; 0x5ea7 $DE97 85 4B                    ;
rts                                    ; 0x5ea9 $DE99 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE9A                                                                          ;
stx      $9E                           ; 0x5eaa $DE9A 86 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sty      $9F                           ; 0x5eac $DE9C 84 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
jsr      Point_0E__based_on_9E_9F      ; 0x5eae $DE9E 20 B9 DE                 ;
clc                                    ; 0x5eb1 $DEA1 18                       ;
ldy      #$00                          ; 0x5eb2 $DEA2 A0 00                    ;;Y = #$00 0000_0000
lda      #$29                          ; 0x5eb4 $DEA4 A9 29                    ;;A = #$29 0010_1001
sta      ($0E),y                       ; 0x5eb6 $DEA6 91 0E                    ;
iny                                    ; 0x5eb8 $DEA8 C8                       ;
adc      #$01                          ; 0x5eb9 $DEA9 69 01                    ;
sta      ($0E),y                       ; 0x5ebb $DEAB 91 0E                    ;
ldy      #$16                          ; 0x5ebd $DEAD A0 16                    ;;Y = #$16 0001_0110
adc      #$01                          ; 0x5ebf $DEAF 69 01                    ;
sta      ($0E),y                       ; 0x5ec1 $DEB1 91 0E                    ;
iny                                    ; 0x5ec3 $DEB3 C8                       ;
adc      #$01                          ; 0x5ec4 $DEB4 69 01                    ;
sta      ($0E),y                       ; 0x5ec6 $DEB6 91 0E                    ;
rts                                    ; 0x5ec8 $DEB8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Point_0E__based_on_9E_9F                                                       ;
lda      #$00                          ; 0x5ec9 $DEB9 A9 00                    ;;A = #$00 0000_0000
sta      $0F                           ; 0x5ecb $DEBB 85 0F                    ;
lda      $9F                           ; 0x5ecd $DEBD A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
asl                                    ; 0x5ecf $DEBF 0A                       ;
pha                                    ; 0x5ed0 $DEC0 48                       ;
adc      $9F                           ; 0x5ed1 $DEC1 65 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $0E                           ; 0x5ed3 $DEC3 85 0E                    ;
pla                                    ; 0x5ed5 $DEC5 68                       ;
asl                                    ; 0x5ed6 $DEC6 0A                       ;
asl                                    ; 0x5ed7 $DEC7 0A                       ;
adc      $0E                           ; 0x5ed8 $DEC8 65 0E                    ;
asl                                    ; 0x5eda $DECA 0A                       ;
rol      $0F                           ; 0x5edb $DECB 26 0F                    ;
adc      $9E                           ; 0x5edd $DECD 65 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $0E                           ; 0x5edf $DECF 85 0E                    ;
lda      $0F                           ; 0x5ee1 $DED1 A5 0F                    ;
adc      #$00                          ; 0x5ee3 $DED3 69 00                    ;
sta      $0F                           ; 0x5ee5 $DED5 85 0F                    ;
lda      $0E                           ; 0x5ee7 $DED7 A5 0E                    ;
clc                                    ; 0x5ee9 $DED9 18                       ;
adc      #$E4                          ; 0x5eea $DEDA 69 E4                    ;
sta      $0E                           ; 0x5eec $DEDC 85 0E                    ;
lda      $0F                           ; 0x5eee $DEDE A5 0F                    ;
adc      #$04                          ; 0x5ef0 $DEE0 69 04                    ;
sta      $0F                           ; 0x5ef2 $DEE2 85 0F                    ;
rts                                    ; 0x5ef4 $DEE4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDEE5                                                                          ;
lda      #$00                          ; 0x5ef5 $DEE5 A9 00                    ;;A = #$00 0000_0000
sta      $11                           ; 0x5ef7 $DEE7 85 11                    ;
lda      $9F                           ; 0x5ef9 $DEE9 A5 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
asl                                    ; 0x5efb $DEEB 0A                       ;
pha                                    ; 0x5efc $DEEC 48                       ;
adc      $9F                           ; 0x5efd $DEED 65 9F                    ;;"Y index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $10                           ; 0x5eff $DEEF 85 10                    ;
pla                                    ; 0x5f01 $DEF1 68                       ;
asl                                    ; 0x5f02 $DEF2 0A                       ;
asl                                    ; 0x5f03 $DEF3 0A                       ;
adc      $10                           ; 0x5f04 $DEF4 65 10                    ;
asl                                    ; 0x5f06 $DEF6 0A                       ;
rol      $11                           ; 0x5f07 $DEF7 26 11                    ;
adc      $9E                           ; 0x5f09 $DEF9 65 9E                    ;;"X index" on screen for Drawing/Arrow/Cursor/Player(PasswordEntry)	
sta      $10                           ; 0x5f0b $DEFB 85 10                    ;
lda      $11                           ; 0x5f0d $DEFD A5 11                    ;
adc      #$00                          ; 0x5f0f $DEFF 69 00                    ;
sta      $11                           ; 0x5f11 $DF01 85 11                    ;
lda      $10                           ; 0x5f13 $DF03 A5 10                    ;
clc                                    ; 0x5f15 $DF05 18                       ;
adc      #$00                          ; 0x5f16 $DF06 69 00                    ;
sta      $10                           ; 0x5f18 $DF08 85 10                    ;
lda      $11                           ; 0x5f1a $DF0A A5 11                    ;
adc      #$03                          ; 0x5f1c $DF0C 69 03                    ;
sta      $11                           ; 0x5f1e $DF0E 85 11                    ;
rts                                    ; 0x5f20 $DF10 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
DF11_load_palette_and_implement__index_with_A                                  ;
asl                                    ; 0x5f21 $DF11 0A                       ;
asl                                    ; 0x5f22 $DF12 0A                       ;
asl                                    ; 0x5f23 $DF13 0A                       ;
asl                                    ; 0x5f24 $DF14 0A                       ;
adc      #$22                          ; 0x5f25 $DF15 69 22                    ;
sta      $02                           ; 0x5f27 $DF17 85 02                    ;
lda      #$E0                          ; 0x5f29 $DF19 A9 E0                    ;;A = #$e0 1110_0000
adc      #$00                          ; 0x5f2b $DF1B 69 00                    ;
sta      $03                           ; 0x5f2d $DF1D 85 03                    ;
lda      #$3F                          ; 0x5f2f $DF1F A9 3F                    ;;A = #$3f 0011_1111
sta      $01                           ; 0x5f31 $DF21 85 01                    ;
lda      #$10                          ; 0x5f33 $DF23 A9 10                    ;;A = #$10 0001_0000
sta      L0000                         ; 0x5f35 $DF25 85 00                    ;
jsr      L965A                         ; 0x5f37 $DF27 20 5A 96                 ;
ldy      #$00                          ; 0x5f3a $DF2A A0 00                    ;;Y = #$00 0000_0000
LDF2C                                                                          ;
lda      ($02),y                       ; 0x5f3c $DF2C B1 02                    ;
sta      $2007                         ; 0x5f3e $DF2E 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5f41 $DF31 C8                       ;
cpy      #$10                          ; 0x5f42 $DF32 C0 10                    ;
bmi      LDF2C                         ; 0x5f44 $DF34 30 F6                    ;
lda      #$3F                          ; 0x5f46 $DF36 A9 3F                    ;;A = #$3f 0011_1111
sta      $2006                         ; 0x5f48 $DF38 8D 06 20                 ;;PPU address port $2006
lda      #$00                          ; 0x5f4b $DF3B A9 00                    ;;A = #$00 0000_0000
sta      $2006                         ; 0x5f4d $DF3D 8D 06 20                 ;;PPU address port $2006
sta      $2006                         ; 0x5f50 $DF40 8D 06 20                 ;;PPU address port $2006
sta      $2006                         ; 0x5f53 $DF43 8D 06 20                 ;;PPU address port $2006
lda      #$08                          ; 0x5f56 $DF46 A9 08                    ;;A = #$08 0000_1000
sta      $2005                         ; 0x5f58 $DF48 8D 05 20                 ;
lda      #$00                          ; 0x5f5b $DF4B A9 00                    ;;A = #$00 0000_0000
sta      $2005                         ; 0x5f5d $DF4D 8D 05 20                 ;
rts                                    ; 0x5f60 $DF50 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
DF51_load_palette_and_implement__index_with_A                                  ;
asl                                    ; 0x5f61 $DF51 0A                       ;
asl                                    ; 0x5f62 $DF52 0A                       ;
asl                                    ; 0x5f63 $DF53 0A                       ;
asl                                    ; 0x5f64 $DF54 0A                       ;
adc      #$02                          ; 0x5f65 $DF55 69 02                    ;
sta      $02                           ; 0x5f67 $DF57 85 02                    ;
lda      #$E1                          ; 0x5f69 $DF59 A9 E1                    ;;A = #$e1 1110_0001
adc      #$00                          ; 0x5f6b $DF5B 69 00                    ;
sta      $03                           ; 0x5f6d $DF5D 85 03                    ;
lda      #$3F                          ; 0x5f6f $DF5F A9 3F                    ;;A = #$3f 0011_1111
sta      $01                           ; 0x5f71 $DF61 85 01                    ;
lda      #$00                          ; 0x5f73 $DF63 A9 00                    ;;A = #$00 0000_0000
sta      L0000                         ; 0x5f75 $DF65 85 00                    ;
jsr      L965A                         ; 0x5f77 $DF67 20 5A 96                 ;
ldy      #$00                          ; 0x5f7a $DF6A A0 00                    ;;Y = #$00 0000_0000
LDF6C                                                                          ;
lda      ($02),y                       ; 0x5f7c $DF6C B1 02                    ;
sta      $2007                         ; 0x5f7e $DF6E 8D 07 20                 ;;Data ($2007) <> read/write
iny                                    ; 0x5f81 $DF71 C8                       ;
cpy      #$10                          ; 0x5f82 $DF72 C0 10                    ;
bmi      LDF6C                         ; 0x5f84 $DF74 30 F6                    ;
lda      #$3F                          ; 0x5f86 $DF76 A9 3F                    ;;A = #$3f 0011_1111
sta      $2006                         ; 0x5f88 $DF78 8D 06 20                 ;;PPU address port $2006
lda      #$00                          ; 0x5f8b $DF7B A9 00                    ;;A = #$00 0000_0000
sta      $2006                         ; 0x5f8d $DF7D 8D 06 20                 ;;PPU address port $2006
sta      $2006                         ; 0x5f90 $DF80 8D 06 20                 ;;PPU address port $2006
sta      $2006                         ; 0x5f93 $DF83 8D 06 20                 ;;PPU address port $2006
lda      #$08                          ; 0x5f96 $DF86 A9 08                    ;;A = #$08 0000_1000
sta      $2005                         ; 0x5f98 $DF88 8D 05 20                 ;
lda      #$00                          ; 0x5f9b $DF8B A9 00                    ;;A = #$00 0000_0000
sta      $2005                         ; 0x5f9d $DF8D 8D 05 20                 ;
rts                                    ; 0x5fa0 $DF90 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
table_of_palette_index__based_on_player_currentArea                            ;
.byt    $00,$01,$00,$00,$00,$0C,$00,$00; 0x5fa1 $DF91 00 01 00 00 00 0C 00 00  ;;
.byt    $0B,$02,$08,$01,$01,$01,$02,$00; 0x5fa9 $DF99 0B 02 08 01 01 01 02 00  ;;
.byt    $01,$01,$03,$00,$00,$00,$01,$00; 0x5fb1 $DFA1 01 01 03 00 00 00 01 00  ;;
.byt    $00,$05,$05,$05,$05,$05,$05,$07; 0x5fb9 $DFA9 00 05 05 05 05 05 05 07  ;;
.byt    $06,$06,$06                    ; 0x5fc1 $DFB1 06 06 06                 ;;
LDFB4                                                                          ;
.byt    $04                            ; 0x5fc4 $DFB4 04                       ;;
LDFB5                                                                          ;
.byt    $02,$10,$08,$04,$0E,$10,$12,$04; 0x5fc5 $DFB5 02 10 08 04 0E 10 12 04  ;;
.byt    $06,$0A,$0C,$10,$10,$02,$12    ; 0x5fcd $DFBD 06 0A 0C 10 10 02 12     ;;
LDFC4                                                                          ;
.byt    $00,$00,$00,$02,$02,$02,$02,$01; 0x5fd4 $DFC4 00 00 00 02 02 02 02 01  ;;
.byt    $00,$03,$03,$03,$03,$00,$00,$00; 0x5fdc $DFCC 00 03 03 03 03 00 00 00  ;;
.byt    $00,$02,$02,$02,$02,$02,$02,$02; 0x5fe4 $DFD4 00 02 02 02 02 02 02 02  ;;
.byt    $02,$03,$03,$03,$03,$03,$03,$03; 0x5fec $DFDC 02 03 03 03 03 03 03 03  ;;
.byt    $03,$03,$03,$03,$03,$03,$03,$03; 0x5ff4 $DFE4 03 03 03 03 03 03 03 03  ;;
.byt    $03,$01,$01,$01,$01,$01,$00    ; 0x5ffc $DFEC 03 01 01 01 01 01 00     ;;
LDFF3                                                                          ;
.byt    $00,$00,$00,$00,$00,$80,$80,$00; 0x6003 $DFF3 00 00 00 00 00 80 80 00  ;;
.byt    $00,$80,$80,$00,$00,$80,$80,$00; 0x600b $DFFB 00 80 80 00 00 80 80 00  ;;
.byt    $00,$80,$80,$00,$00,$00,$00,$00; 0x6013 $E003 00 80 80 00 00 00 00 00  ;;
.byt    $00,$80,$80,$80,$80,$80,$80,$80; 0x601b $E00B 00 80 80 80 80 80 80 80  ;;
.byt    $80,$80,$80,$80,$80,$00,$00,$00; 0x6023 $E013 80 80 80 80 80 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00    ; 0x602b $E01B 00 00 00 00 00 00 00     ;;
DF11_palette_index_00                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x6032 $E022 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$06,$15,$25,$0F,$03,$2B,$0B; 0x603a $E02A 0F 06 15 25 0F 03 2B 0B  ;;%+
DF11_palette_index_01                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x6042 $E032 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$06,$15,$25,$0F,$1B,$0C,$0F; 0x604a $E03A 0F 06 15 25 0F 1B 0C 0F  ;;%
DF11_palette_index_02                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x6052 $E042 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$06,$15,$25,$0F,$07,$0C,$23; 0x605a $E04A 0F 06 15 25 0F 07 0C 23  ;;%#
DF11_palette_index_03                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x6062 $E052 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$21,$26,$36,$0F,$22,$02,$0F; 0x606a $E05A 0F 21 26 36 0F 22 02 0F  ;;!&6"
DF11_palette_index_04                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x6072 $E062 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$1A,$27,$37,$0F,$03,$2B,$0B; 0x607a $E06A 0F 1A 27 37 0F 03 2B 0B  ;;'7+
DF11_palette_index_05                                                          ;
.byt    $0F,$37,$02,$16,$0F,$01,$23,$06; 0x6082 $E072 0F 37 02 16 0F 01 23 06  ;;7#
.byt    $0F,$1A,$27,$37,$0F,$16,$24,$28; 0x608a $E07A 0F 1A 27 37 0F 16 24 28  ;;'7$(
DF11_palette_index_06                                                          ;
.byt    $0F,$37,$02,$16,$0F,$02,$0F,$15; 0x6092 $E082 0F 37 02 16 0F 02 0F 15  ;;7
.byt    $0F,$16,$0F,$2C,$0F,$20,$0F,$26; 0x609a $E08A 0F 16 0F 2C 0F 20 0F 26  ;;, &
DF11_palette_index_07                                                          ;
.byt    $0F,$37,$02,$16,$0F,$01,$23,$06; 0x60a2 $E092 0F 37 02 16 0F 01 23 06  ;;7#
.byt    $0F,$1A,$27,$37,$0F,$17,$27,$37; 0x60aa $E09A 0F 1A 27 37 0F 17 27 37  ;;'7'7
DF11_palette_index_08                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x60b2 $E0A2 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$0F,$18,$1A,$0F,$00,$10,$0F; 0x60ba $E0AA 0F 0F 18 1A 0F 00 10 0F  ;;
DF11_palette_index_09                                                          ;
.byt    $0F,$37,$02,$16,$0F,$23,$29,$36; 0x60c2 $E0B2 0F 37 02 16 0F 23 29 36  ;;7#)6
.byt    $0F,$21,$26,$36,$0F,$22,$20,$36; 0x60ca $E0BA 0F 21 26 36 0F 22 20 36  ;;!&6" 6
DF11_palette_index_0A                                                          ;
.byt    $0F,$37,$02,$16,$0F,$24,$30,$37; 0x60d2 $E0C2 0F 37 02 16 0F 24 30 37  ;;7$07
.byt    $0F,$21,$26,$36,$0F,$22,$20,$36; 0x60da $E0CA 0F 21 26 36 0F 22 20 36  ;;!&6" 6
DF11_palette_index_0B                                                          ;
.byt    $0F,$37,$02,$16,$0F,$31,$21,$11; 0x60e2 $E0D2 0F 37 02 16 0F 31 21 11  ;;71!
.byt    $0F,$0F,$18,$1A,$0F,$22,$20,$36; 0x60ea $E0DA 0F 0F 18 1A 0F 22 20 36  ;;" 6
DF11_palette_index_0C                                                          ;
.byt    $0F,$37,$02,$16,$0F,$23,$29,$36; 0x60f2 $E0E2 0F 37 02 16 0F 23 29 36  ;;7#)6
.byt    $0F,$1A,$27,$37,$0F,$07,$0C,$23; 0x60fa $E0EA 0F 1A 27 37 0F 07 0C 23  ;;'7#
DF11_palette_index_0D                                                          ;
.byt    $0F,$37,$02,$16,$0F,$23,$29,$36; 0x6102 $E0F2 0F 37 02 16 0F 23 29 36  ;;7#)6
.byt    $0F,$21,$26,$36,$0F,$22,$20,$36; 0x610a $E0FA 0F 21 26 36 0F 22 20 36  ;;!&6" 6
DF51_palette_index_00                                                          ;
.byt    $0F,$2A,$18,$1A,$0F,$14,$28,$30; 0x6112 $E102 0F 2A 18 1A 0F 14 28 30  ;;(0
.byt    $0F,$10,$00,$12,$0F,$00,$10,$2A; 0x611a $E10A 0F 10 00 12 0F 00 10 2A  ;;
DF51_palette_index_01                                                          ;
.byt    $0F,$3A,$38,$3A,$0F,$34,$38,$30; 0x6122 $E112 0F 3A 38 3A 0F 34 38 30  ;;:8:480
.byt    $0F,$30,$30,$32,$0F,$30,$30,$3A; 0x612a $E11A 0F 30 30 32 0F 30 30 3A  ;;00200:
DF51_palette_index_02                                                          ;
.byt    $0F,$12,$1C,$24,$0F,$14,$28,$30; 0x6132 $E122 0F 12 1C 24 0F 14 28 30  ;;$(0
.byt    $0F,$06,$27,$30,$0F,$00,$10,$2A; 0x613a $E12A 0F 06 27 30 0F 00 10 2A  ;;'0
DF51_palette_index_03                                                          ;
.byt    $0F,$37,$27,$18,$0F,$14,$28,$30; 0x6142 $E132 0F 37 27 18 0F 14 28 30  ;;7'(0
.byt    $0F,$06,$27,$30,$0F,$00,$10,$2A; 0x614a $E13A 0F 06 27 30 0F 00 10 2A  ;;'0
; ---------------------------------------------------------------------------- ;
LE142                                                                          ;
ldy      #$10                          ; 0x6152 $E142 A0 10                    ;;Y = #$10 0001_0000
sty      $2000                         ; 0x6154 $E144 8C 00 20                 ;
ldy      $9A                           ; 0x6157 $E147 A4 9A                    ;
beq      LE14D                         ; 0x6159 $E149 F0 02                    ;
lda      #$00                          ; 0x615b $E14B A9 00                    ;;A = #$00 0000_0000
LE14D                                                                          ;
sta      $BC                           ; 0x615d $E14D 85 BC                    ;;music track index?: 		04=main theme	0C=boss theme
lsr                                    ; 0x615f $E14F 4A                       ;
lsr                                    ; 0x6160 $E150 4A                       ;
tay                                    ; 0x6161 $E151 A8                       ;
lda      LE390,y                       ; 0x6162 $E152 B9 90 E3                 ;
sta      $BE                           ; 0x6165 $E155 85 BE                    ;
lda      #$00                          ; 0x6167 $E157 A9 00                    ;;A = #$00 0000_0000
sta      $C5                           ; 0x6169 $E159 85 C5                    ;
sta      $BD                           ; 0x616b $E15B 85 BD                    ;;music delay timer? (force to 00 to speed up music)
ldy      $BC                           ; 0x616d $E15D A4 BC                    ;;music track index?: 		04=main theme	0C=boss theme
lda      LE330,y                       ; 0x616f $E15F B9 30 E3                 ;
sta      $C0                           ; 0x6172 $E162 85 C0                    ;
iny                                    ; 0x6174 $E164 C8                       ;
lda      LE330,y                       ; 0x6175 $E165 B9 30 E3                 ;
sta      $C1                           ; 0x6178 $E168 85 C1                    ;
lda      #$00                          ; 0x617a $E16A A9 00                    ;;A = #$00 0000_0000
sta      $BF                           ; 0x617c $E16C 85 BF                    ;
ldy      $BC                           ; 0x617e $E16E A4 BC                    ;;music track index?: 		04=main theme	0C=boss theme
lda      LE330+$18,y                   ; 0x6180 $E170 B9 48 E3                 ;
sta      $C3                           ; 0x6183 $E173 85 C3                    ;
iny                                    ; 0x6185 $E175 C8                       ;
lda      LE330+$18,y                   ; 0x6186 $E176 B9 48 E3                 ;
sta      $C4                           ; 0x6189 $E179 85 C4                    ;
lda      #$00                          ; 0x618b $E17B A9 00                    ;;A = #$00 0000_0000
sta      $C2                           ; 0x618d $E17D 85 C2                    ;
ldy      $BC                           ; 0x618f $E17F A4 BC                    ;;music track index?: 		04=main theme	0C=boss theme
lda      Music_Main_Theme_Control__orSomething_0,y; 0x6191 $E181 B9 60 E3      ;
sta      $4004                         ; 0x6194 $E184 8D 04 40                 ;;music:Pulse 2 channel (write) ;DDLC NNNN 	Duty, loop envelope/disable length counter, constant volume, envelope period/volume
iny                                    ; 0x6197 $E187 C8                       ;
lda      Music_Main_Theme_Control__orSomething_0,y; 0x6198 $E188 B9 60 E3      ;
sta      $4005                         ; 0x619b $E18B 8D 05 40                 ;;music:Pulse 2 channel (write) ;EPPP NSSS 	Sweep unit: enabled, period, negative, shift count
iny                                    ; 0x619e $E18E C8                       ;
lda      Music_Main_Theme_Control__orSomething_0,y; 0x619f $E18F B9 60 E3      ;
sta      $4006                         ; 0x61a2 $E192 8D 06 40                 ;;music:Pulse 2 channel (write) ;LLLL LLLL 	Timer low
iny                                    ; 0x61a5 $E195 C8                       ;
lda      Music_Main_Theme_Control__orSomething_0,y; 0x61a6 $E196 B9 60 E3      ;
sta      $4007                         ; 0x61a9 $E199 8D 07 40                 ;;music:Pulse 2 channel (write) ;LLLL LHHH 	Length counter load, timer high (also resets duty and starts envelope)
ldy      $BC                           ; 0x61ac $E19C A4 BC                    ;;music track index?: 		04=main theme	0C=boss theme
lda      Music_Main_Theme_Control__orSomething_1,y; 0x61ae $E19E B9 78 E3      ;
sta      $4008                         ; 0x61b1 $E1A1 8D 08 40                 ;;music:Triangle channel (write) ;CRRR RRRR 	Length counter disable/linear counter control, linear counter reload value
iny                                    ; 0x61b4 $E1A4 C8                       ;
lda      Music_Main_Theme_Control__orSomething_1,y; 0x61b5 $E1A5 B9 78 E3      ;
sta      $4009                         ; 0x61b8 $E1A8 8D 09 40                 ;
iny                                    ; 0x61bb $E1AB C8                       ;
lda      Music_Main_Theme_Control__orSomething_1,y; 0x61bc $E1AC B9 78 E3      ;
sta      $400A                         ; 0x61bf $E1AF 8D 0A 40                 ;;music:Triangle channel (write) ;LLLL LLLL 	Timer low
iny                                    ; 0x61c2 $E1B2 C8                       ;
lda      Music_Main_Theme_Control__orSomething_1,y; 0x61c3 $E1B3 B9 78 E3      ;
sta      $400B                         ; 0x61c6 $E1B6 8D 0B 40                 ;;music:Triangle channel (write) ;LLLL LHHH 	Length counter load, timer high (also reloads linear counter)
jsr      LE26B                         ; 0x61c9 $E1B9 20 6B E2                 ;
lda      #$90                          ; 0x61cc $E1BC A9 90                    ;;A = #$90 1001_0000
sta      $2000                         ; 0x61ce $E1BE 8D 00 20                 ;
rts                                    ; 0x61d1 $E1C1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Music_related__during_screen_transitions                                       ;
lda      $BD                           ; 0x61d2 $E1C2 A5 BD                    ;;music delay timer? (force to 00 to speed up music)
bne      LE1D0                         ; 0x61d4 $E1C4 D0 0A                    ;
jsr      LE1D3                         ; 0x61d6 $E1C6 20 D3 E1                 ;
jsr      LE21B                         ; 0x61d9 $E1C9 20 1B E2                 ;
lda      $BE                           ; 0x61dc $E1CC A5 BE                    ;
sta      $BD                           ; 0x61de $E1CE 85 BD                    ;;music delay timer? (force to 00 to speed up music)
LE1D0                                                                          ;
dec      $BD                           ; 0x61e0 $E1D0 C6 BD                    ;;music delay timer? (force to 00 to speed up music)
rts                                    ; 0x61e2 $E1D2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1D3                                                                          ;
lda      $BF                           ; 0x61e3 $E1D3 A5 BF                    ;
bne      LE218                         ; 0x61e5 $E1D5 D0 41                    ;
ldy      #$00                          ; 0x61e7 $E1D7 A0 00                    ;;Y = #$00 0000_0000
lda      ($C0),y                       ; 0x61e9 $E1D9 B1 C0                    ;
asl                                    ; 0x61eb $E1DB 0A                       ;
tax                                    ; 0x61ec $E1DC AA                       ;
lda      Music_Main_Theme0,x           ; 0x61ed $E1DD BD CE E2                 ;
sta      $4006                         ; 0x61f0 $E1E0 8D 06 40                 ;;music:Pulse 2 channel (write) ;LLLL LLLL 	Timer low
lda      Music_Main_Theme1,x           ; 0x61f3 $E1E3 BD CF E2                 ;
sta      $4007                         ; 0x61f6 $E1E6 8D 07 40                 ;;music:Pulse 2 channel (write) ;LLLL LHHH 	Length counter load, timer high (also resets duty and starts envelope)
iny                                    ; 0x61f9 $E1E9 C8                       ;
lda      ($C0),y                       ; 0x61fa $E1EA B1 C0                    ;
sta      $BF                           ; 0x61fc $E1EC 85 BF                    ;
lda      $C0                           ; 0x61fe $E1EE A5 C0                    ;
clc                                    ; 0x6200 $E1F0 18                       ;
adc      #$02                          ; 0x6201 $E1F1 69 02                    ;
sta      $C0                           ; 0x6203 $E1F3 85 C0                    ;
bcc      LE1F9                         ; 0x6205 $E1F5 90 02                    ;
inc      $C1                           ; 0x6207 $E1F7 E6 C1                    ;
LE1F9                                                                          ;
ldy      $BC                           ; 0x6209 $E1F9 A4 BC                    ;;music track index?: 		04=main theme	0C=boss theme
iny                                    ; 0x620b $E1FB C8                       ;
iny                                    ; 0x620c $E1FC C8                       ;
lda      $C0                           ; 0x620d $E1FD A5 C0                    ;
sec                                    ; 0x620f $E1FF 38                       ;
sbc      LE330,y                       ; 0x6210 $E200 F9 30 E3                 ;
iny                                    ; 0x6213 $E203 C8                       ;
lda      $C1                           ; 0x6214 $E204 A5 C1                    ;
sbc      LE330,y                       ; 0x6216 $E206 F9 30 E3                 ;
bmi      LE218                         ; 0x6219 $E209 30 0D                    ;
dey                                    ; 0x621b $E20B 88                       ;
dey                                    ; 0x621c $E20C 88                       ;
lda      LE330,y                       ; 0x621d $E20D B9 30 E3                 ;
sta      $C1                           ; 0x6220 $E210 85 C1                    ;
dey                                    ; 0x6222 $E212 88                       ;
lda      LE330,y                       ; 0x6223 $E213 B9 30 E3                 ;
sta      $C0                           ; 0x6226 $E216 85 C0                    ;
LE218                                                                          ;
dec      $BF                           ; 0x6228 $E218 C6 BF                    ;
rts                                    ; 0x622a $E21A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE21B                                                                          ;
lda      $C2                           ; 0x622b $E21B A5 C2                    ;
bne      LE262                         ; 0x622d $E21D D0 43                    ;
ldy      #$00                          ; 0x622f $E21F A0 00                    ;;Y = #$00 0000_0000
lda      ($C3),y                       ; 0x6231 $E221 B1 C3                    ;
asl                                    ; 0x6233 $E223 0A                       ;
tax                                    ; 0x6234 $E224 AA                       ;
lda      Music_Main_Theme0,x           ; 0x6235 $E225 BD CE E2                 ;
sta      $400A                         ; 0x6238 $E228 8D 0A 40                 ;;music:Triangle channel (write) ;LLLL LLLL 	Timer low
lda      Music_Main_Theme1,x           ; 0x623b $E22B BD CF E2                 ;
sta      $400B                         ; 0x623e $E22E 8D 0B 40                 ;;music:Triangle channel (write) ;LLLL LHHH 	Length counter load, timer high (also reloads linear counter)
iny                                    ; 0x6241 $E231 C8                       ;
lda      ($C3),y                       ; 0x6242 $E232 B1 C3                    ;
sta      $C2                           ; 0x6244 $E234 85 C2                    ;
lda      $C3                           ; 0x6246 $E236 A5 C3                    ;
clc                                    ; 0x6248 $E238 18                       ;
adc      #$02                          ; 0x6249 $E239 69 02                    ;
sta      $C3                           ; 0x624b $E23B 85 C3                    ;
bcc      LE241                         ; 0x624d $E23D 90 02                    ;
inc      $C4                           ; 0x624f $E23F E6 C4                    ;
LE241                                                                          ;
ldy      $BC                           ; 0x6251 $E241 A4 BC                    ;;music track index?: 		04=main theme	0C=boss theme
iny                                    ; 0x6253 $E243 C8                       ;
iny                                    ; 0x6254 $E244 C8                       ;
lda      $C3                           ; 0x6255 $E245 A5 C3                    ;
sec                                    ; 0x6257 $E247 38                       ;
sbc      LE330+$18,y                   ; 0x6258 $E248 F9 48 E3                 ;
iny                                    ; 0x625b $E24B C8                       ;
lda      $C4                           ; 0x625c $E24C A5 C4                    ;
sbc      LE330+$18,y                   ; 0x625e $E24E F9 48 E3                 ;
bmi      LE262                         ; 0x6261 $E251 30 0F                    ;
dey                                    ; 0x6263 $E253 88                       ;
dey                                    ; 0x6264 $E254 88                       ;
lda      LE330+$18,y                   ; 0x6265 $E255 B9 48 E3                 ;
sta      $C4                           ; 0x6268 $E258 85 C4                    ;
dey                                    ; 0x626a $E25A 88                       ;
lda      LE330+$18,y                   ; 0x626b $E25B B9 48 E3                 ;
sta      $C3                           ; 0x626e $E25E 85 C3                    ;
inc      $C5                           ; 0x6270 $E260 E6 C5                    ;
LE262                                                                          ;
dec      $C2                           ; 0x6272 $E262 C6 C2                    ;
rts                                    ; 0x6274 $E264 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE265                                                                          ;
lda      #$01                          ; 0x6275 $E265 A9 01                    ;;A = #$01 0000_0001
sta      $4015                         ; 0x6277 $E267 8D 15 40                 ;;music:DMC channel (write) ;---D NT21 	Control: DMC enable, length counter enables: noise, triangle, pulse 2, pulse 1 (write);music:DMC channel (write) ;IF-D NT21 	Status: DMC interrupt, frame interrupt, length counter status: noise, triangle, pulse 2, pulse 1 (read)
rts                                    ; 0x627a $E26A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE26B                                                                          ;
lda      #$0F                          ; 0x627b $E26B A9 0F                    ;;A = #$0f 0000_1111
sta      $4015                         ; 0x627d $E26D 8D 15 40                 ;;music:DMC channel (write) ;---D NT21 	Control: DMC enable, length counter enables: noise, triangle, pulse 2, pulse 1 (write);music:DMC channel (write) ;IF-D NT21 	Status: DMC interrupt, frame interrupt, length counter status: noise, triangle, pulse 2, pulse 1 (read)
rts                                    ; 0x6280 $E270 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE271                                                                          ;
ldy      $9A                           ; 0x6281 $E271 A4 9A                    ;
beq      LE277                         ; 0x6283 $E273 F0 02                    ;
lda      #$00                          ; 0x6285 $E275 A9 00                    ;;A = #$00 0000_0000
LE277                                                                          ;
asl                                    ; 0x6287 $E277 0A                       ;
asl                                    ; 0x6288 $E278 0A                       ;
tay                                    ; 0x6289 $E279 A8                       ;
lda      LE69E,y                       ; 0x628a $E27A B9 9E E6                 ;
sta      $4000                         ; 0x628d $E27D 8D 00 40                 ;;music:Pulse 1 channel (write) ;DDLC NNNN 	Duty, loop envelope/disable length counter, constant volume, envelope period/volume
lda      LE69F,y                       ; 0x6290 $E280 B9 9F E6                 ;
sta      $4001                         ; 0x6293 $E283 8D 01 40                 ;;music:Pulse 1 channel (write) ;EPPP NSSS 	Sweep unit: enabled, period, negative, shift count
lda      LE6A0,y                       ; 0x6296 $E286 B9 A0 E6                 ;
sta      $4002                         ; 0x6299 $E289 8D 02 40                 ;;music:Pulse 1 channel (write) ;LLLL LLLL 	Timer low
lda      LE6A1,y                       ; 0x629c $E28C B9 A1 E6                 ;
sta      $4003                         ; 0x629f $E28F 8D 03 40                 ;;music:Pulse 1 channel (write) ;LLLL LHHH 	Length counter load, timer high (also resets duty and starts envelope)
rts                                    ; 0x62a2 $E292 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Music_SoundEffect_Play_index_with_A__maybe                                     ;
ldy      $9A                           ; 0x62a3 $E293 A4 9A                    ;
beq      LE299                         ; 0x62a5 $E295 F0 02                    ;
lda      #$00                          ; 0x62a7 $E297 A9 00                    ;;A = #$00 0000_0000
LE299                                                                          ;
asl                                    ; 0x62a9 $E299 0A                       ;
asl                                    ; 0x62aa $E29A 0A                       ;
tay                                    ; 0x62ab $E29B A8                       ;
lda      LE6CE,y                       ; 0x62ac $E29C B9 CE E6                 ;
sta      $400C                         ; 0x62af $E29F 8D 0C 40                 ;;music:Noise channel (write) ;--LC NNNN 	Loop envelope/disable length counter, constant volume, envelope period/volume
lda      LE6CF,y                       ; 0x62b2 $E2A2 B9 CF E6                 ;
sta      $400D                         ; 0x62b5 $E2A5 8D 0D 40                 ;
lda      LE6D0,y                       ; 0x62b8 $E2A8 B9 D0 E6                 ;
sta      $400E                         ; 0x62bb $E2AB 8D 0E 40                 ;;music:Noise channel (write) ;L--- PPPP 	Loop noise, noise period
lda      LE6D1,y                       ; 0x62be $E2AE B9 D1 E6                 ;
sta      $400F                         ; 0x62c1 $E2B1 8D 0F 40                 ;;music:Noise channel (write) ;LLLL L--- 	Length counter load (also starts envelope)
rts                                    ; 0x62c4 $E2B4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$08                          ; 0x62c5 $E2B5 A9 08                    ;;A = #$08 0000_1000
jmp      LE271                         ; 0x62c7 $E2B7 4C 71 E2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$09                          ; 0x62ca $E2BA A9 09                    ;;A = #$09 0000_1001
jmp      LE271                         ; 0x62cc $E2BC 4C 71 E2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$0A                          ; 0x62cf $E2BF A9 0A                    ;;A = #$0a 0000_1010
jmp      LE271                         ; 0x62d1 $E2C1 4C 71 E2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE2C4                                                                          ;
lda      #$07                          ; 0x62d4 $E2C4 A9 07                    ;;A = #$07 0000_0111
jmp      LE271                         ; 0x62d6 $E2C6 4C 71 E2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE2C9                                                                          ;
lda      #$00                          ; 0x62d9 $E2C9 A9 00                    ;;A = #$00 0000_0000
jmp      LE271                         ; 0x62db $E2CB 4C 71 E2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Music_Main_Theme0                                                              ;
.byt    $00                            ; 0x62de $E2CE 00                       ;;
Music_Main_Theme1                                                              ;
.byt    $08,$57,$0B,$27,$0B,$FA,$0A,$CF; 0x62df $E2CF 08 57 0B 27 0B FA 0A CF  ;;W'
.byt    $0A,$A7,$0A,$81,$0A,$5D,$0A,$3B; 0x62e7 $E2D7 0A A7 0A 81 0A 5D 0A 3B  ;;];
.byt    $0A,$1B,$0A,$FC,$09,$E0,$09,$C5; 0x62ef $E2DF 0A 1B 0A FC 09 E0 09 C5  ;;
.byt    $09,$AC,$09,$94,$09,$7D,$09,$68; 0x62f7 $E2E7 09 AC 09 94 09 7D 09 68  ;;}h
.byt    $09,$53,$09,$40,$09,$2E,$09,$1D; 0x62ff $E2EF 09 53 09 40 09 2E 09 1D  ;;S@.
.byt    $09,$0D,$09,$FE,$08,$F0,$08,$E2; 0x6307 $E2F7 09 0D 09 FE 08 F0 08 E2  ;;
.byt    $08,$D6,$08,$CA,$08,$BE,$08,$B4; 0x630f $E2FF 08 D6 08 CA 08 BE 08 B4  ;;
.byt    $08,$AA,$08,$A0,$08,$97,$08,$8F; 0x6317 $E307 08 AA 08 A0 08 97 08 8F  ;;
.byt    $08,$87,$08,$7F,$08,$78,$08,$71; 0x631f $E30F 08 87 08 7F 08 78 08 71  ;;xq
.byt    $08,$6B,$08,$65,$08,$5F,$08,$5A; 0x6327 $E317 08 6B 08 65 08 5F 08 5A  ;;ke_Z
.byt    $08,$55,$08,$50,$08,$4C,$08,$47; 0x632f $E31F 08 55 08 50 08 4C 08 47  ;;UPLG
.byt    $08,$43,$08,$40,$08,$3C,$08,$39; 0x6337 $E327 08 43 08 40 08 3C 08 39  ;;C@<9
.byt    $08                            ; 0x633f $E32F 08                       ;;;save calc'd attack strength to $08 ?
; ---------------------------------------------------------------------------- ;
LE330                                                                          ;
.word    LE396                         ; 0x6340 $E330 96 E3                    ;00
.word    LE398                         ; 0x6342 $E332 98 E3                    ;01
.word    LE398                         ; 0x6344 $E334 98 E3                    ;02
.word    LE3DA                         ; 0x6346 $E336 DA E3                    ;03
.word    LE420                         ; 0x6348 $E338 20 E4                    ;04
.word    LE478                         ; 0x634a $E33A 78 E4                    ;05
.word    LE4BC                         ; 0x634c $E33C BC E4                    ;06
.word    LE504                         ; 0x634e $E33E 04 E5                    ;07
.word    LE5EA                         ; 0x6350 $E340 EA E5                    ;08
.word    LE65E                         ; 0x6352 $E342 5E E6                    ;09
.word    LE398                         ; 0x6354 $E344 98 E3                    ;0A
.word    LE3DA                         ; 0x6356 $E346 DA E3                    ;0B
.word    LE396                         ; 0x6358 $E348 96 E3                    ;0C
.word    LE398                         ; 0x635a $E34A 98 E3                    ;0D
.word    LE3DA                         ; 0x635c $E34C DA E3                    ;0E
.word    LE420                         ; 0x635e $E34E 20 E4                    ;0F
.word    LE478                         ; 0x6360 $E350 78 E4                    ;10
.word    LE4BC                         ; 0x6362 $E352 BC E4                    ;11
.word    LE504                         ; 0x6364 $E354 04 E5                    ;12
.word    LE5EA                         ; 0x6366 $E356 EA E5                    ;13
.word    LE65E                         ; 0x6368 $E358 5E E6                    ;14
.word    LE69E                         ; 0x636a $E35A 9E E6                    ;15
.word    LE3DA                         ; 0x636c $E35C DA E3                    ;16
.word    LE420                         ; 0x636e $E35E 20 E4                    ;17
; ---------------------------------------------------------------------------- ;
Music_Main_Theme_Control__orSomething_0                                        ;
;if all these get changed to 00 then main theme music is gone                  ;
.byt    $B0,$08,$00,$08,$8F,$08,$00,$08; 0x6370 $E360 B0 08 00 08 8F 08 00 08  ;;
.byt    $8F,$08,$00,$08,$A0,$08,$00,$08; 0x6378 $E368 8F 08 00 08 A0 08 00 08  ;;
.byt    $82,$08,$00,$08,$8F,$08,$00,$08; 0x6380 $E370 82 08 00 08 8F 08 00 08  ;;
Music_Main_Theme_Control__orSomething_1                                        ;
.byt    $FF,$00,$00,$08,$FF,$00,$00,$08; 0x6388 $E378 FF 00 00 08 FF 00 00 08  ;;
.byt    $FF,$00,$00,$08,$FF,$00,$00,$08; 0x6390 $E380 FF 00 00 08 FF 00 00 08  ;;
.byt    $FF,$00,$00,$08,$FF,$00,$00,$08; 0x6398 $E388 FF 00 00 08 FF 00 00 08  ;;
LE390                                                                          ;
.byt    $FF,$07,$07,$07,$07,$03        ; 0x63a0 $E390 FF 07 07 07 07 03        ;;
LE396                                                                          ;
.byt    $00,$FF                        ; 0x63a6 $E396 00 FF                    ;;
LE398                                                                          ;
.byt    $1D,$03,$1E,$01,$20,$02,$25,$08; 0x63a8 $E398 1D 03 1E 01 20 02 25 08  ;; %
.byt    $25,$02,$24,$03,$25,$01,$22,$0C; 0x63b0 $E3A0 25 02 24 03 25 01 22 0C  ;;%$%"
.byt    $22,$03,$24,$01,$25,$0A,$25,$02; 0x63b8 $E3A8 22 03 24 01 25 0A 25 02  ;;"$%%
.byt    $27,$03,$25,$01,$29,$04,$25,$04; 0x63c0 $E3B0 27 03 25 01 29 04 25 04  ;;'%)%
.byt    $20,$04,$1D,$03,$1E,$01,$20,$02; 0x63c8 $E3B8 20 04 1D 03 1E 01 20 02  ;;  
.byt    $25,$08,$25,$02,$24,$03,$25,$01; 0x63d0 $E3C0 25 08 25 02 24 03 25 01  ;;%%$%
.byt    $22,$0C,$27,$03,$25,$01,$20,$08; 0x63d8 $E3C8 22 0C 27 03 25 01 20 08  ;;"'% 
.byt    $2A,$02,$29,$02,$27,$03,$25,$01; 0x63e0 $E3D0 2A 02 29 02 27 03 25 01  ;;)'%
.byt    $25,$0C                        ; 0x63e8 $E3D8 25 0C                    ;;%
LE3DA                                                                          ;
.byt    $00,$04,$0D,$04,$08,$04,$0D,$04; 0x63ea $E3DA 00 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$06,$04,$0D,$04,$12,$04; 0x63f2 $E3E2 08 04 06 04 0D 04 12 04  ;;
.byt    $0D,$04,$06,$04,$0D,$04,$12,$04; 0x63fa $E3EA 0D 04 06 04 0D 04 12 04  ;;
.byt    $06,$04,$0D,$04,$08,$04,$0D,$04; 0x6402 $E3F2 06 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$0D,$04,$08,$04,$0D,$04; 0x640a $E3FA 08 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$06,$04,$0D,$04,$12,$04; 0x6412 $E402 08 04 06 04 0D 04 12 04  ;;
.byt    $0D,$04,$08,$04,$0F,$04,$08,$04; 0x641a $E40A 0D 04 08 04 0F 04 08 04  ;;
.byt    $0F,$04,$0D,$02,$0C,$02,$0D,$02; 0x6422 $E412 0F 04 0D 02 0C 02 0D 02  ;;
.byt    $0C,$02,$0D,$02,$0C,$02        ; 0x642a $E41A 0C 02 0D 02 0C 02        ;;
LE420                                                                          ;
.byt    $1D,$03,$20,$01,$1E,$0C,$1B,$02; 0x6430 $E420 1D 03 20 01 1E 0C 1B 02  ;; 
.byt    $1E,$02,$1D,$01,$1B,$01,$19,$0A; 0x6438 $E428 1E 02 1D 01 1B 01 19 0A  ;;
.byt    $1D,$03,$20,$01,$1E,$0C,$1B,$02; 0x6440 $E430 1D 03 20 01 1E 0C 1B 02  ;; 
.byt    $1E,$02,$1D,$02,$20,$02,$25,$08; 0x6448 $E438 1E 02 1D 02 20 02 25 08  ;; %
.byt    $20,$02,$25,$02,$27,$02,$22,$01; 0x6450 $E440 20 02 25 02 27 02 22 01  ;; %'"
.byt    $21,$01,$22,$06,$27,$02,$22,$01; 0x6458 $E448 21 01 22 06 27 02 22 01  ;;!"'"
.byt    $21,$01,$22,$02,$25,$02,$20,$01; 0x6460 $E450 21 01 22 02 25 02 20 01  ;;!"% 
.byt    $1F,$01,$20,$08,$20,$02,$25,$02; 0x6468 $E458 1F 01 20 08 20 02 25 02  ;;  %
.byt    $27,$02,$22,$01,$21,$01,$22,$06; 0x6470 $E460 27 02 22 01 21 01 22 06  ;;'"!"
.byt    $27,$02,$22,$01,$21,$01,$22,$02; 0x6478 $E468 27 02 22 01 21 01 22 02  ;;'"!"
.byt    $25,$02,$20,$01,$1F,$01,$20,$08; 0x6480 $E470 25 02 20 01 1F 01 20 08  ;;%  
LE478                                                                          ;
.byt    $08,$04,$12,$03,$00,$01,$12,$04; 0x6488 $E478 08 04 12 03 00 01 12 04  ;;
.byt    $0D,$04,$12,$04,$0D,$04,$08,$04; 0x6490 $E480 0D 04 12 04 0D 04 08 04  ;;
.byt    $0D,$04,$08,$04,$12,$03,$00,$01; 0x6498 $E488 0D 04 08 04 12 03 00 01  ;;
.byt    $12,$04,$0D,$04,$12,$04,$0D,$04; 0x64a0 $E490 12 04 0D 04 12 04 0D 04  ;;
.byt    $08,$04,$0D,$04,$08,$04,$0F,$04; 0x64a8 $E498 08 04 0D 04 08 04 0F 04  ;;
.byt    $0A,$04,$0F,$04,$0A,$04,$0D,$04; 0x64b0 $E4A0 0A 04 0F 04 0A 04 0D 04  ;;
.byt    $08,$04,$0D,$04,$08,$04,$0F,$04; 0x64b8 $E4A8 08 04 0D 04 08 04 0F 04  ;;
.byt    $0A,$04,$0F,$04,$0A,$04,$0D,$04; 0x64c0 $E4B0 0A 04 0F 04 0A 04 0D 04  ;;
.byt    $08,$04,$0D,$04                ; 0x64c8 $E4B8 08 04 0D 04              ;;
LE4BC                                                                          ;
.byt    $00,$02,$25,$02,$24,$02,$25,$02; 0x64cc $E4BC 00 02 25 02 24 02 25 02  ;;%$%
.byt    $22,$02,$25,$02,$24,$02,$25,$02; 0x64d4 $E4C4 22 02 25 02 24 02 25 02  ;;"%$%
.byt    $22,$10,$00,$02,$25,$02,$24,$02; 0x64dc $E4CC 22 10 00 02 25 02 24 02  ;;"%$
.byt    $25,$02,$22,$02,$25,$02,$24,$02; 0x64e4 $E4D4 25 02 22 02 25 02 24 02  ;;%"%$
.byt    $25,$02,$22,$10,$00,$02,$2A,$02; 0x64ec $E4DC 25 02 22 10 00 02 2A 02  ;;%"
.byt    $29,$02,$2A,$02,$27,$02,$2A,$02; 0x64f4 $E4E4 29 02 2A 02 27 02 2A 02  ;;)'
.byt    $29,$02,$2A,$02,$27,$10,$00,$02; 0x64fc $E4EC 29 02 2A 02 27 10 00 02  ;;)'
.byt    $2A,$02,$29,$02,$2A,$02,$22,$02; 0x6504 $E4F4 2A 02 29 02 2A 02 22 02  ;;)"
.byt    $25,$02,$24,$02,$25,$02,$22,$10; 0x650c $E4FC 25 02 24 02 25 02 22 10  ;;%$%"
LE504                                                                          ;
.byt    $0A,$01,$00,$01,$0A,$01,$00,$01; 0x6514 $E504 0A 01 00 01 0A 01 00 01  ;;
.byt    $09,$02,$0A,$01,$00,$01,$0A,$01; 0x651c $E50C 09 02 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$0A,$01; 0x6524 $E514 00 01 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$09,$02,$0A,$01,$00,$01; 0x652c $E51C 00 01 09 02 0A 01 00 01  ;;
.byt    $0A,$01,$00,$01,$09,$02,$0A,$01; 0x6534 $E524 0A 01 00 01 09 02 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$0A,$01; 0x653c $E52C 00 01 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$0A,$01; 0x6544 $E534 00 01 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$0A,$01; 0x654c $E53C 00 01 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$09,$02,$0A,$01,$00,$01; 0x6554 $E544 00 01 09 02 0A 01 00 01  ;;
.byt    $0A,$01,$00,$01,$0A,$01,$00,$01; 0x655c $E54C 0A 01 00 01 0A 01 00 01  ;;
.byt    $0A,$01,$00,$01,$09,$02,$0A,$01; 0x6564 $E554 0A 01 00 01 09 02 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$09,$02; 0x656c $E55C 00 01 0A 01 00 01 09 02  ;;
.byt    $0A,$01,$00,$01,$0A,$01,$00,$01; 0x6574 $E564 0A 01 00 01 0A 01 00 01  ;;
.byt    $0A,$01,$00,$01,$0A,$01,$00,$01; 0x657c $E56C 0A 01 00 01 0A 01 00 01  ;;
.byt    $0A,$01,$00,$01,$0A,$01,$00,$01; 0x6584 $E574 0A 01 00 01 0A 01 00 01  ;;
.byt    $0A,$01,$00,$01,$09,$02,$0A,$01; 0x658c $E57C 0A 01 00 01 09 02 0A 01  ;;
.byt    $00,$01,$0F,$01,$00,$01,$0F,$01; 0x6594 $E584 00 01 0F 01 00 01 0F 01  ;;
.byt    $00,$01,$0F,$01,$00,$01,$0E,$02; 0x659c $E58C 00 01 0F 01 00 01 0E 02  ;;
.byt    $0F,$01,$00,$01,$0F,$01,$00,$01; 0x65a4 $E594 0F 01 00 01 0F 01 00 01  ;;
.byt    $0E,$02,$0F,$01,$00,$01,$0F,$01; 0x65ac $E59C 0E 02 0F 01 00 01 0F 01  ;;
.byt    $00,$01,$0F,$01,$00,$01,$0F,$01; 0x65b4 $E5A4 00 01 0F 01 00 01 0F 01  ;;
.byt    $00,$01,$0E,$02,$0F,$01,$00,$01; 0x65bc $E5AC 00 01 0E 02 0F 01 00 01  ;;
.byt    $0F,$01,$00,$01,$0E,$02,$0F,$01; 0x65c4 $E5B4 0F 01 00 01 0E 02 0F 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$0A,$01; 0x65cc $E5BC 00 01 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$09,$02; 0x65d4 $E5C4 00 01 0A 01 00 01 09 02  ;;
.byt    $0A,$01,$00,$01,$0A,$01,$00,$01; 0x65dc $E5CC 0A 01 00 01 0A 01 00 01  ;;
.byt    $09,$02,$0A,$01,$00,$01,$0A,$01; 0x65e4 $E5D4 09 02 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01,$0A,$01; 0x65ec $E5DC 00 01 0A 01 00 01 0A 01  ;;
.byt    $00,$01,$0A,$01,$00,$01        ; 0x65f4 $E5E4 00 01 0A 01 00 01        ;;
LE5EA                                                                          ;
.byt    $00,$02,$25,$02,$25,$02,$25,$02; 0x65fa $E5EA 00 02 25 02 25 02 25 02  ;;%%%
.byt    $24,$02,$24,$02,$25,$02,$20,$02; 0x6602 $E5F2 24 02 24 02 25 02 20 02  ;;$$% 
.byt    $00,$02,$25,$02,$25,$02,$25,$02; 0x660a $E5FA 00 02 25 02 25 02 25 02  ;;%%%
.byt    $24,$02,$24,$02,$25,$02,$20,$02; 0x6612 $E602 24 02 24 02 25 02 20 02  ;;$$% 
.byt    $00,$02,$22,$02,$22,$02,$22,$02; 0x661a $E60A 00 02 22 02 22 02 22 02  ;;"""
.byt    $21,$02,$21,$02,$22,$02,$1D,$04; 0x6622 $E612 21 02 21 02 22 02 1D 04  ;;!!"
.byt    $1D,$02,$1B,$02,$1D,$02,$1E,$02; 0x662a $E61A 1D 02 1B 02 1D 02 1E 02  ;;
.byt    $1F,$02,$20,$04,$00,$02,$25,$02; 0x6632 $E622 1F 02 20 04 00 02 25 02  ;; %
.byt    $25,$02,$25,$02,$24,$02,$24,$02; 0x663a $E62A 25 02 25 02 24 02 24 02  ;;%%$$
.byt    $25,$02,$20,$02,$00,$02,$25,$02; 0x6642 $E632 25 02 20 02 00 02 25 02  ;;% %
.byt    $25,$02,$25,$02,$24,$02,$24,$02; 0x664a $E63A 25 02 25 02 24 02 24 02  ;;%%$$
.byt    $25,$02,$20,$04,$20,$02,$1E,$04; 0x6652 $E642 25 02 20 04 20 02 1E 04  ;;%  
.byt    $22,$02,$25,$02,$20,$04,$24,$02; 0x665a $E64A 22 02 25 02 20 04 24 02  ;;"% $
.byt    $27,$02,$25,$02,$25,$02,$24,$02; 0x6662 $E652 27 02 25 02 25 02 24 02  ;;'%%$
.byt    $24,$02,$25,$04                ; 0x666a $E65A 24 02 25 04              ;;$%
LE65E                                                                          ;
.byt    $08,$04,$0D,$04,$08,$04,$0D,$04; 0x666e $E65E 08 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$0D,$04,$08,$04,$0D,$04; 0x6676 $E666 08 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$0A,$04,$05,$04,$0A,$04; 0x667e $E66E 08 04 0A 04 05 04 0A 04  ;;
.byt    $05,$04,$06,$04,$0D,$04,$08,$04; 0x6686 $E676 05 04 06 04 0D 04 08 04  ;;
.byt    $0F,$04,$0D,$04,$08,$04,$0D,$04; 0x668e $E67E 0F 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$0D,$04,$08,$04,$0D,$04; 0x6696 $E686 08 04 0D 04 08 04 0D 04  ;;
.byt    $08,$04,$06,$04,$0D,$04,$08,$04; 0x669e $E68E 08 04 06 04 0D 04 08 04  ;;
.byt    $0F,$04,$0D,$04,$08,$04,$0D,$04; 0x66a6 $E696 0F 04 0D 04 08 04 0D 04  ;;
LE69E                                                                          ;
.byt    $90                            ; 0x66ae $E69E 90                       ;;
LE69F                                                                          ;
.byt    $08                            ; 0x66af $E69F 08                       ;;;save calc'd attack strength to $08 ?
LE6A0                                                                          ;
.byt    $00                            ; 0x66b0 $E6A0 00                       ;;
LE6A1                                                                          ;
.byt    $88,$84,$82,$80,$88,$84,$8A,$C0; 0x66b1 $E6A1 88 84 82 80 88 84 8A C0  ;;
.byt    $88,$82,$82,$40,$88,$8C,$CA,$FF; 0x66b9 $E6A9 88 82 82 40 88 8C CA FF  ;;@
.byt    $A0,$8C,$CA,$FF,$A0,$A1,$AC,$FF; 0x66c1 $E6B1 A0 8C CA FF A0 A1 AC FF  ;;
.byt    $8A,$BF,$08,$40,$08,$BF,$08,$6B; 0x66c9 $E6B9 8A BF 08 40 08 BF 08 6B  ;;@k
.byt    $08,$BF,$08,$55,$08,$BF,$08,$47; 0x66d1 $E6C1 08 BF 08 55 08 BF 08 47  ;;UG
.byt    $08,$A1,$08,$40,$88            ; 0x66d9 $E6C9 08 A1 08 40 88           ;;@
LE6CE                                                                          ;
.byt    $10                            ; 0x66de $E6CE 10                       ;;
LE6CF                                                                          ;
.byt    $00                            ; 0x66df $E6CF 00                       ;;
LE6D0                                                                          ;
.byt    $00                            ; 0x66e0 $E6D0 00                       ;;
LE6D1                                                                          ;
.byt    $88,$38,$00,$0E,$B0,$0F,$00,$08; 0x66e1 $E6D1 88 38 00 0E B0 0F 00 08  ;;8
.byt    $40,$1F,$00,$0D,$B0,$23,$00,$04; 0x66e9 $E6D9 40 1F 00 0D B0 23 00 04  ;;@#
.byt    $B0,$00,$00,$00,$00,$00,$00,$00; 0x66f1 $E6E1 B0 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x66f9 $E6E9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6701 $E6F1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6709 $E6F9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6711 $E701 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6719 $E709 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6721 $E711 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6729 $E719 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6731 $E721 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6739 $E729 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6741 $E731 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6749 $E739 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6751 $E741 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6759 $E749 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6761 $E751 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6769 $E759 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6771 $E761 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6779 $E769 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6781 $E771 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6789 $E779 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6791 $E781 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6799 $E789 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67a1 $E791 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67a9 $E799 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67b1 $E7A1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67b9 $E7A9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67c1 $E7B1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67c9 $E7B9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67d1 $E7C1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67d9 $E7C9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67e1 $E7D1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67e9 $E7D9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67f1 $E7E1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x67f9 $E7E9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6801 $E7F1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6809 $E7F9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6811 $E801 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6819 $E809 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6821 $E811 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6829 $E819 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6831 $E821 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6839 $E829 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6841 $E831 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6849 $E839 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6851 $E841 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6859 $E849 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6861 $E851 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6869 $E859 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6871 $E861 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6879 $E869 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6881 $E871 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6889 $E879 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6891 $E881 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6899 $E889 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68a1 $E891 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68a9 $E899 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68b1 $E8A1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68b9 $E8A9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68c1 $E8B1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68c9 $E8B9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68d1 $E8C1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68d9 $E8C9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68e1 $E8D1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68e9 $E8D9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68f1 $E8E1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x68f9 $E8E9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6901 $E8F1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6909 $E8F9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6911 $E901 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6919 $E909 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6921 $E911 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6929 $E919 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6931 $E921 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6939 $E929 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6941 $E931 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6949 $E939 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6951 $E941 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6959 $E949 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6961 $E951 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6969 $E959 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6971 $E961 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6979 $E969 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6981 $E971 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6989 $E979 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6991 $E981 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6999 $E989 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69a1 $E991 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69a9 $E999 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69b1 $E9A1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69b9 $E9A9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69c1 $E9B1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69c9 $E9B9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69d1 $E9C1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69d9 $E9C9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69e1 $E9D1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69e9 $E9D9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69f1 $E9E1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x69f9 $E9E9 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x6a01 $E9F1 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00    ; 0x6a09 $E9F9 00 00 00 00 00 00 00     ;;
Intro__auto_commands__maybe                                                    ;
.byt    $01,$05,$44,$04,$80,$83,$14,$86; 0x6a10 $EA00 01 05 44 04 80 83 14 86  ;;D
.byt    $00,$00,$02,$81,$26,$61,$43,$21; 0x6a18 $EA08 00 00 02 81 26 61 43 21  ;;&aC!
.byt    $07,$27,$42,$6B,$20,$20,$22,$00; 0x6a20 $EA10 07 27 42 6B 20 20 22 00  ;;'Bk  "
.byt    $01,$10,$10,$15,$0B,$8A,$05,$83; 0x6a28 $EA18 01 10 10 15 0B 8A 05 83  ;;
.byt    $0B,$11,$90,$90,$90,$11,$00,$07; 0x6a30 $EA20 0B 11 90 90 90 11 00 07  ;;
.byt    $29,$07,$4B,$0B,$20,$23,$61,$41; 0x6a38 $EA28 29 07 4B 0B 20 23 61 41  ;;)K #aA
.byt    $62,$4A,$63,$29,$62,$41,$00,$08; 0x6a40 $EA30 62 4A 63 29 62 41 00 08  ;;bJc)bA
.byt    $4B,$0A,$80,$87,$06,$4A,$89,$19; 0x6a48 $EA38 4B 0A 80 87 06 4A 89 19  ;;KJ
.byt    $00,$0B,$4D,$C4,$4F,$05,$41,$02; 0x6a50 $EA40 00 0B 4D C4 4F 05 41 02  ;;MOA
.byt    $21,$62,$29,$60,$60,$02,$44,$00; 0x6a58 $EA48 21 62 29 60 60 02 44 00  ;;!b)``D
.byt    $03,$15,$02,$80,$81,$43,$CB,$43; 0x6a60 $EA50 03 15 02 80 81 43 CB 43  ;;CC
.byt    $C3,$81,$0F,$10,$12,$07,$27,$07; 0x6a68 $EA58 C3 81 0F 10 12 07 27 07  ;;'
.byt    $10,$00,$06,$18,$8F,$0D,$20,$24; 0x6a70 $EA60 10 00 06 18 8F 0D 20 24  ;; $
.byt    $00,$01,$10,$0E,$80,$00,$04,$18; 0x6a78 $EA68 00 01 10 0E 80 00 04 18  ;;
.byt    $00,$04,$80,$0E,$1C,$02,$2D,$0C; 0x6a80 $EA70 00 04 80 0E 1C 02 2D 0C  ;;-
.byt    $40,$42,$00,$0D,$2B,$00,$08,$40; 0x6a88 $EA78 40 42 00 0D 2B 00 08 40  ;;@B+@
.byt    $45,$00,$0A,$10,$19,$00,$03,$8C; 0x6a90 $EA80 45 00 0A 10 19 00 03 8C  ;;E
.byt    $0D,$40,$44,$09,$8D,$00,$05,$26; 0x6a98 $EA88 0D 40 44 09 8D 00 05 26  ;;@D&
.byt    $4B,$87,$43,$85,$91,$13,$91,$85; 0x6aa0 $EA90 4B 87 43 85 91 13 91 85  ;;KC
.byt    $0D,$81,$27,$4D,$C1,$87,$00,$01; 0x6aa8 $EA98 0D 81 27 4D C1 87 00 01  ;;'M
.byt    $22,$00,$0D,$20,$28,$04,$4A,$61; 0x6ab0 $EAA0 22 00 0D 20 28 04 4A 61  ;;" (Ja
.byt    $28,$0F,$10,$11,$0C,$25,$60,$6A; 0x6ab8 $EAA8 28 0F 10 11 0C 25 60 6A  ;;(%`j
.byt    $00,$00,$01,$C0,$CF,$81,$0C,$4A; 0x6ac0 $EAB0 00 00 01 C0 CF 81 0C 4A  ;;J
.byt    $09,$27,$0B,$10,$11,$0B,$80,$87; 0x6ac8 $EAB8 09 27 0B 10 11 0B 80 87  ;;'
.byt    $0C,$28,$02,$16,$84,$04,$10,$14; 0x6ad0 $EAC0 0C 28 02 16 84 04 10 14  ;;(
.byt    $08,$29,$00,$04,$6D,$41,$0E,$42; 0x6ad8 $EAC8 08 29 00 04 6D 41 0E 42  ;;)mAB
.byt    $CD,$00,$01,$18,$04,$87,$01,$10; 0x6ae0 $EAD0 CD 00 01 18 04 87 01 10  ;;
.byt    $18,$05,$29,$30,$00,$08,$81,$99; 0x6ae8 $EAD8 18 05 29 30 00 08 81 99  ;;)0
.byt    $11,$00,$01,$1B,$04,$4C,$02,$2D; 0x6af0 $EAE0 11 00 01 1B 04 4C 02 2D  ;;L-
.byt    $0D,$80,$84,$03,$40,$04,$80,$82; 0x6af8 $EAE8 0D 80 84 03 40 04 80 82  ;;@
.byt    $11,$9D,$17,$91,$14,$95,$18,$00; 0x6b00 $EAF0 11 9D 17 91 14 95 18 00  ;;
.byt    $03,$2E,$0C,$43,$00,$01,$43,$04; 0x6b08 $EAF8 03 2E 0C 43 00 01 43 04  ;;.CC
LEB00                                                                          ;
.byt    $01,$00,$00,$05,$F5,$00,$00,$00; 0x6b10 $EB00 01 00 00 05 F5 00 00 00  ;;
.byt    $00,$0E,$F0,$00,$00,$0F,$FE,$00; 0x6b18 $EB08 00 0E F0 00 00 0F FE 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$07; 0x6b20 $EB10 00 00 00 00 00 00 00 07  ;;
.byt    $FC,$00,$00,$00,$00,$00,$00,$05; 0x6b28 $EB18 FC 00 00 00 00 00 00 05  ;;
.byt    $F0,$FA,$00,$08,$FA,$00,$00,$00; 0x6b30 $EB20 F0 FA 00 08 FA 00 00 00  ;;
.byt    $00,$07,$F0,$F0,$F1,$00,$00,$00; 0x6b38 $EB28 00 07 F0 F0 F1 00 00 00  ;;
.byt    $00,$00,$0F,$FE,$00,$06,$F0,$F1; 0x6b40 $EB30 00 00 0F FE 00 06 F0 F1  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$0F; 0x6b48 $EB38 00 00 00 00 00 00 00 0F  ;;
.byt    $FD,$00,$00,$00,$FC,$00,$00,$00; 0x6b50 $EB40 FD 00 00 00 FC 00 00 00  ;;
.byt    $09,$FC,$00,$00,$00,$00,$00,$00; 0x6b58 $EB48 09 FC 00 00 00 00 00 00  ;;
.byt    $00,$0D,$FD,$00,$00,$00,$0B,$F8; 0x6b60 $EB50 00 0D FD 00 00 00 0B F8  ;;
.byt    $00,$00,$00,$02,$F1,$02,$F0,$F0; 0x6b68 $EB58 00 00 00 02 F1 02 F0 F0  ;;
.byt    $00,$05,$FB,$00,$0B,$F7,$00,$03; 0x6b70 $EB60 00 05 FB 00 0B F7 00 03  ;;
.byt    $F1,$09,$FB,$00,$00,$0F,$FD,$00; 0x6b78 $EB68 F1 09 FB 00 00 0F FD 00  ;;
.byt    $00,$02,$FB,$00,$00,$00,$02,$F0; 0x6b80 $EB70 00 02 FB 00 00 00 02 F0  ;;
.byt    $00,$00,$00,$02,$F0,$00,$07,$FB; 0x6b88 $EB78 00 00 00 02 F0 00 07 FB  ;;
.byt    $01,$00,$00,$05,$F5,$00,$00,$00; 0x6b90 $EB80 01 00 00 05 F5 00 00 00  ;;
.byt    $00,$0E,$F0,$00,$00,$0F,$FE,$00; 0x6b98 $EB88 00 0E F0 00 00 0F FE 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$07; 0x6ba0 $EB90 00 00 00 00 00 00 00 07  ;;
.byt    $FC,$00,$00,$00,$00,$00,$00,$05; 0x6ba8 $EB98 FC 00 00 00 00 00 00 05  ;;
.byt    $F0,$FA,$00,$08,$FA,$00,$00,$00; 0x6bb0 $EBA0 F0 FA 00 08 FA 00 00 00  ;;
.byt    $00,$07,$F0,$F0,$F1,$00,$00,$00; 0x6bb8 $EBA8 00 07 F0 F0 F1 00 00 00  ;;
.byt    $00,$00,$0F,$FE,$00,$06,$F0,$F1; 0x6bc0 $EBB0 00 00 0F FE 00 06 F0 F1  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$0F; 0x6bc8 $EBB8 00 00 00 00 00 00 00 0F  ;;
.byt    $FD,$00,$00,$00,$FC,$00,$00,$00; 0x6bd0 $EBC0 FD 00 00 00 FC 00 00 00  ;;
.byt    $09,$FC,$00,$00,$00,$00,$00,$00; 0x6bd8 $EBC8 09 FC 00 00 00 00 00 00  ;;
.byt    $00,$0D,$FD,$00,$00,$00,$0B,$F8; 0x6be0 $EBD0 00 0D FD 00 00 00 0B F8  ;;
.byt    $00,$00,$00,$02,$F1,$02,$F0,$F0; 0x6be8 $EBD8 00 00 00 02 F1 02 F0 F0  ;;
.byt    $00,$05,$FB,$00,$0B,$F7,$00,$03; 0x6bf0 $EBE0 00 05 FB 00 0B F7 00 03  ;;
.byt    $F1,$09,$FB,$00,$00,$0F,$FD,$00; 0x6bf8 $EBE8 F1 09 FB 00 00 0F FD 00  ;;
.byt    $00,$02,$FB,$00,$00,$00,$02,$F0; 0x6c00 $EBF0 00 02 FB 00 00 00 02 F0  ;;
.byt    $00,$00,$00,$02,$F0,$00,$07,$FB; 0x6c08 $EBF8 00 00 00 02 F0 00 07 FB  ;;
; ---------------------------------------------------------------------------- ;
Pointers_Screen_Data                                                           ;
.word    Screen_Data_00                ; 0x6c10 $EC00 46 EC                    ;00
.word    Screen_Data_01                ; 0x6c12 $EC02 C4 EC                    ;01
.word    Screen_Data_02                ; 0x6c14 $EC04 58 ED                    ;02
.word    Screen_Data_03                ; 0x6c16 $EC06 E9 ED                    ;03
.word    Screen_Data_04                ; 0x6c18 $EC08 79 EE                    ;04
.word    Screen_Data_05                ; 0x6c1a $EC0A 26 EF                    ;05
.word    Screen_Data_06                ; 0x6c1c $EC0C 96 EF                    ;06
.word    Screen_Data_07                ; 0x6c1e $EC0E 11 F0                    ;07
.word    Screen_Data_08                ; 0x6c20 $EC10 35 F0                    ;08
.word    Screen_Data_09                ; 0x6c22 $EC12 D0 F0                    ;09
.word    Screen_Data_0A                ; 0x6c24 $EC14 74 F1                    ;0A
.word    Screen_Data_0B                ; 0x6c26 $EC16 AE F1                    ;0B
.word    Screen_Data_0C                ; 0x6c28 $EC18 4D F2                    ;0C
.word    Screen_Data_0D                ; 0x6c2a $EC1A AA F2                    ;0D
.word    Screen_Data_0E                ; 0x6c2c $EC1C 47 F3                    ;0E
.word    Screen_Data_0F                ; 0x6c2e $EC1E E8 F3                    ;0F
.word    Screen_Data_10                ; 0x6c30 $EC20 3A F4                    ;10
.word    Screen_Data_11                ; 0x6c32 $EC22 F2 F4                    ;11
.word    Screen_Data_12                ; 0x6c34 $EC24 9C F5                    ;12
.word    Screen_Data_13                ; 0x6c36 $EC26 20 F6                    ;13
.word    Screen_Data_14                ; 0x6c38 $EC28 B9 F6                    ;14
.word    Screen_Data_15                ; 0x6c3a $EC2A 23 F7                    ;15
.word    Screen_Data_16                ; 0x6c3c $EC2C E5 F7                    ;16
.word    Screen_Data_17                ; 0x6c3e $EC2E 71 F8                    ;17
.word    Screen_Data_18                ; 0x6c40 $EC30 10 F9                    ;18
.word    Screen_Data_19                ; 0x6c42 $EC32 B5 F9                    ;19
.word    Screen_Data_1A                ; 0x6c44 $EC34 4C FA                    ;1A
.word    Screen_Data_1B                ; 0x6c46 $EC36 F3 FA                    ;1B
.word    Screen_Data_1C                ; 0x6c48 $EC38 93 FB                    ;1C
.word    Screen_Data_1D                ; 0x6c4a $EC3A 33 FC                    ;1D
.word    Screen_Data_1E                ; 0x6c4c $EC3C B5 FC                    ;1E
.word    Screen_Data_1F                ; 0x6c4e $EC3E 47 FD                    ;1F
.word    Screen_Data_20                ; 0x6c50 $EC40 F1 FD                    ;20
.word    Screen_Data_21                ; 0x6c52 $EC42 8C FE                    ;21
.word    Screen_Data_22                ; 0x6c54 $EC44 CE FE                    ;22
; ---------------------------------------------------------------------------- ;
Screen_Data_00                                                                 ;
.byt    $21,$18,$2E,$13,$01,$13,$01,$2E; 0x6c56 $EC46 21 18 2E 13 01 13 01 2E  ;;!..
.byt    $01,$15,$01,$21,$11,$2E,$02,$15; 0x6c5e $EC4E 01 15 01 21 11 2E 02 15  ;;!.
.byt    $01,$20,$01,$16,$23,$91,$F1,$2B; 0x6c66 $EC56 01 20 01 16 23 91 F1 2B  ;; #+
.byt    $02,$14,$23,$F2,$2A,$91,$F1,$21; 0x6c6e $EC5E 02 14 23 F2 2A 91 F1 21  ;;#!
.byt    $12,$02,$2F,$F2,$13,$20,$23,$11; 0x6c76 $EC66 12 02 2F F2 13 20 23 11  ;; #
.byt    $02,$20,$22,$12,$23,$11,$20,$13; 0x6c7e $EC6E 02 20 22 12 23 11 20 13  ;; "# 
.byt    $22,$01,$27,$91,$F1,$26,$11,$01; 0x6c86 $EC76 22 01 27 91 F1 26 11 01  ;;"'&
.byt    $11,$01,$12,$28,$F2,$24,$13,$21; 0x6c8e $EC7E 11 01 12 28 F2 24 13 21  ;;($!
.byt    $01,$12,$01,$A1,$F1,$2C,$01,$12; 0x6c96 $EC86 01 12 01 A1 F1 2C 01 12  ;;,
.byt    $22,$12,$21,$F2,$2D,$01,$13,$02; 0x6c9e $EC8E 22 12 21 F2 2D 01 13 02  ;;"!-
.byt    $20,$21,$13,$26,$11,$2B,$13,$01; 0x6ca6 $EC96 20 21 13 26 11 2B 13 01  ;; !&+
.byt    $26,$11,$A1,$F1,$26,$13,$01,$12; 0x6cae $EC9E 26 11 A1 F1 26 13 01 12  ;;&&
.byt    $21,$11,$23,$12,$01,$F2,$26,$15; 0x6cb6 $ECA6 21 11 23 12 01 F2 26 15  ;;!#&
.byt    $01,$11,$01,$A1,$F1,$21,$02,$29; 0x6cbe $ECAE 01 11 01 A1 F1 21 02 29  ;;!)
.byt    $11,$01,$15,$21,$F2,$2C,$14,$01; 0x6cc6 $ECB6 11 01 15 21 F2 2C 14 01  ;;!,
.byt    $12,$2F,$16,$01,$12,$2D        ; 0x6cce $ECBE 12 2F 16 01 12 2D        ;;-
Screen_Data_01                                                                 ;
.byt    $26,$91,$F1,$18,$01,$22,$13,$26; 0x6cd4 $ECC4 26 91 F1 18 01 22 13 26  ;;&"&
.byt    $F2,$02,$12,$01,$13,$23,$11,$01; 0x6cdc $ECCC F2 02 12 01 13 23 11 01  ;;#
.byt    $11,$2A,$15,$01,$23,$13,$28,$A1; 0x6ce4 $ECD4 11 2A 15 01 23 13 28 A1  ;;#(
.byt    $F1,$01,$13,$01,$23,$11,$01,$12; 0x6cec $ECDC F1 01 13 01 23 11 01 12  ;;#
.byt    $22,$91,$F1,$23,$11,$F2,$13,$01; 0x6cf4 $ECE4 22 91 F1 23 11 F2 13 01  ;;"#
.byt    $D1,$F3,$13,$01,$22,$F2,$22,$14; 0x6cfc $ECEC D1 F3 13 01 22 F2 22 14  ;;""
.byt    $01,$11,$01,$21,$F4,$01,$13,$26; 0x6d04 $ECF4 01 11 01 21 F4 01 13 26  ;;!&
.byt    $01,$15,$91,$F5,$21,$13,$27,$11; 0x6d0c $ECFC 01 15 91 F5 21 13 27 11  ;;!'
.byt    $02,$12,$F6,$21,$01,$11,$01,$27; 0x6d14 $ED04 02 12 F6 21 01 11 01 27  ;;!'
.byt    $01,$91,$F1,$11,$01,$12,$42,$C1; 0x6d1c $ED0C 01 91 F1 11 01 12 42 C1  ;;B
.byt    $F1,$91,$F1,$01,$29,$F2,$01,$21; 0x6d24 $ED14 F1 91 F1 01 29 F2 01 21  ;;)!
.byt    $02,$42,$F4,$2C,$5C,$2A,$51,$3B; 0x6d2c $ED1C 02 42 F4 2C 5C 2A 51 3B  ;;B,Q;
.byt    $2A,$51,$3B,$2A,$51,$32,$59,$2A; 0x6d34 $ED24 2A 51 3B 2A 51 32 59 2A  ;;Q;Q2Y
.byt    $51,$32,$51,$78,$2A,$51,$32,$51; 0x6d3c $ED2C 51 32 51 78 2A 51 32 51  ;;Q2QxQ2Q
.byt    $78,$24,$A1,$F1,$24,$51,$32,$51; 0x6d44 $ED34 78 24 A1 F1 24 51 32 51  ;;x$$Q2Q
.byt    $78,$24,$F2,$24,$51,$32,$51,$78; 0x6d4c $ED3C 78 24 F2 24 51 32 51 78  ;;x$$Q2Qx
.byt    $2A,$51,$32,$51,$78,$2A,$51,$32; 0x6d54 $ED44 2A 51 32 51 78 2A 51 32  ;;Q2QxQ2
.byt    $51,$78,$2A,$51,$32,$51,$78,$2A; 0x6d5c $ED4C 51 78 2A 51 32 51 78 2A  ;;QxQ2Qx
.byt    $51,$32,$51,$78                ; 0x6d64 $ED54 51 32 51 78              ;;Q2Qx
Screen_Data_02                                                                 ;
.byt    $1A,$51,$32,$51,$A1,$F1,$21,$15; 0x6d68 $ED58 1A 51 32 51 A1 F1 21 15  ;;Q2Q!
.byt    $01,$18,$01,$51,$32,$51,$F2,$11; 0x6d70 $ED60 01 18 01 51 32 51 F2 11  ;;Q2Q
.byt    $01,$13,$01,$14,$01,$14,$21,$51; 0x6d78 $ED68 01 13 01 14 01 14 21 51  ;;!Q
.byt    $32,$51,$11,$21,$1A,$21,$13,$01; 0x6d80 $ED70 32 51 11 21 1A 21 13 01  ;;2Q!!
.byt    $11,$51,$32,$51,$01,$15,$01,$12; 0x6d88 $ED78 11 51 32 51 01 15 01 12  ;;Q2Q
.byt    $01,$13,$01,$14,$51,$32,$51,$21; 0x6d90 $ED80 01 13 01 14 51 32 51 21  ;;Q2Q!
.byt    $14,$01,$1C,$51,$32,$51,$12,$01; 0x6d98 $ED88 14 01 1C 51 32 51 12 01  ;;Q2Q
.byt    $1D,$01,$11,$51,$32,$51,$11,$01; 0x6da0 $ED90 1D 01 11 51 32 51 11 01  ;;Q2Q
.byt    $21,$16,$02,$12,$01,$14,$51,$32; 0x6da8 $ED98 21 16 02 12 01 14 51 32  ;;!Q2
.byt    $51,$11,$21,$14,$01,$11,$01,$22; 0x6db0 $EDA0 51 11 21 14 01 11 01 22  ;;Q!"
.byt    $01,$11,$21,$01,$12,$01,$51,$32; 0x6db8 $EDA8 01 11 21 01 12 01 51 32  ;;!Q2
.byt    $51,$15,$01,$21,$01,$24,$01,$22; 0x6dc0 $EDB0 51 15 01 21 01 24 01 22  ;;Q!$"
.byt    $02,$21,$51,$32,$51,$14,$01,$23; 0x6dc8 $EDB8 02 21 51 32 51 14 01 23  ;;!Q2Q#
.byt    $5B,$32,$51,$01,$12,$01,$91,$F1; 0x6dd0 $EDC0 5B 32 51 01 12 01 91 F1  ;;[2Q
.byt    $22,$3D,$51,$21,$02,$21,$F2,$22; 0x6dd8 $EDC8 22 3D 51 21 02 21 F2 22  ;;"=Q!!"
.byt    $3D,$50,$54,$3B,$7A,$51,$3B,$7A; 0x6de0 $EDD0 3D 50 54 3B 7A 51 3B 7A  ;;=PT;zQ;z
.byt    $5C,$70,$26,$70,$26,$70,$72,$24; 0x6de8 $EDD8 5C 70 26 70 26 70 72 24  ;;p&p&pr$
.byt    $70,$72,$24,$70,$74,$22,$70,$74; 0x6df0 $EDE0 70 72 24 70 74 22 70 74  ;;pr$pt"pt
.byt    $22                            ; 0x6df8 $EDE8 22                       ;;";$15 to $24 : current password
Screen_Data_03                                                                 ;
.byt    $18,$61,$45,$61,$45,$61,$41,$11; 0x6df9 $EDE9 18 61 45 61 45 61 41 11  ;;aEaEaA
.byt    $01,$13,$01,$12,$61,$42,$64,$42; 0x6e01 $EDF1 01 13 01 12 61 42 64 42  ;;aBdB
.byt    $65,$18,$61,$42,$61,$4A,$01,$17; 0x6e09 $EDF9 65 18 61 42 61 4A 01 17  ;;eaBaJ
.byt    $61,$42,$61,$4A,$16,$01,$11,$61; 0x6e11 $EE01 61 42 61 4A 16 01 11 61  ;;aBaJa
.byt    $42,$61,$42,$61,$42,$65,$13,$03; 0x6e19 $EE09 42 61 42 61 42 65 13 03  ;;BaBaBe
.byt    $21,$01,$61,$42,$61,$42,$61,$42; 0x6e21 $EE11 21 01 61 42 61 42 61 42  ;;!aBaBaB
.byt    $61,$44,$12,$01,$23,$12,$61,$42; 0x6e29 $EE19 61 44 12 01 23 12 61 42  ;;aD#aB
.byt    $61,$42,$61,$42,$61,$44,$01,$11; 0x6e31 $EE21 61 42 61 42 61 44 01 11  ;;aBaBaD
.byt    $24,$01,$11,$61,$42,$64,$42,$61; 0x6e39 $EE29 24 01 11 61 42 64 42 61  ;;$aBdBa
.byt    $42,$62,$21,$01,$25,$01,$49,$61; 0x6e41 $EE31 42 62 21 01 25 01 49 61  ;;Bb!%Ia
.byt    $42,$61,$41,$28,$49,$61,$42,$61; 0x6e49 $EE39 42 61 41 28 49 61 42 61  ;;BaA(IaBa
.byt    $41,$28,$61,$42,$67,$42,$61,$41; 0x6e51 $EE41 41 28 61 42 67 42 61 41  ;;A(aBgBaA
.byt    $28,$61,$4D,$58,$61,$4D,$37,$51; 0x6e59 $EE49 28 61 4D 58 61 4D 37 51  ;;(aMXaM7Q
.byt    $6E,$37,$53,$2C,$55,$34,$51,$20; 0x6e61 $EE51 6E 37 53 2C 55 34 51 20  ;;n7S,U4Q 
.byt    $51,$34,$51,$22,$A1,$F1,$2C,$53; 0x6e69 $EE59 51 34 51 22 A1 F1 2C 53  ;;Q4Q",S
.byt    $32,$51,$22,$F2,$2E,$51,$32,$51; 0x6e71 $EE61 32 51 22 F2 2E 51 32 51  ;;2Q".Q2Q
.byt    $20,$22,$51,$32,$51,$20,$22,$51; 0x6e79 $EE69 20 22 51 32 51 20 22 51  ;; "Q2Q "Q
.byt    $32,$51,$20,$22,$51,$32,$51,$2C; 0x6e81 $EE71 32 51 20 22 51 32 51 2C  ;;2Q "Q2Q,
Screen_Data_04                                                                 ;
.byt    $61,$45,$61,$42,$61,$42,$61,$42; 0x6e89 $EE79 61 45 61 42 61 42 61 42  ;;aEaBaBaB
.byt    $61,$25,$11,$64,$42,$64,$42,$61; 0x6e91 $EE81 61 25 11 64 42 64 42 61  ;;a%dBdBa
.byt    $42,$61,$25,$11,$43,$61,$48,$61; 0x6e99 $EE89 42 61 25 11 43 61 48 61  ;;Ba%CaHa
.byt    $42,$61,$25,$01,$43,$61,$48,$61; 0x6ea1 $EE91 42 61 25 01 43 61 48 61  ;;Ba%CaHa
.byt    $42,$61,$26,$64,$42,$64,$42,$64; 0x6ea9 $EE99 42 61 26 64 42 64 42 64  ;;Ba&dBdBd
.byt    $11,$25,$43,$61,$42,$61,$42,$61; 0x6eb1 $EEA1 11 25 43 61 42 61 42 61  ;;%CaBaBa
.byt    $45,$61,$01,$11,$24,$43,$61,$42; 0x6eb9 $EEA9 45 61 01 11 24 43 61 42  ;;Ea$CaB
.byt    $61,$42,$61,$45,$61,$11,$01,$21; 0x6ec1 $EEB1 61 42 61 45 61 11 01 21  ;;aBaEa!
.byt    $11,$22,$67,$42,$61,$42,$64,$13; 0x6ec9 $EEB9 11 22 67 42 61 42 64 13  ;;"gBaBd
.byt    $01,$22,$61,$48,$61,$42,$61,$42; 0x6ed1 $EEC1 01 22 61 48 61 42 61 42  ;;"aHaBaB
.byt    $61,$01,$12,$23,$61,$48,$61,$42; 0x6ed9 $EEC9 61 01 12 23 61 48 61 42  ;;a#aHaB
.byt    $61,$42,$61,$12,$01,$23,$61,$42; 0x6ee1 $EED1 61 42 61 12 01 23 61 42  ;;aBa#aB
.byt    $61,$42,$67,$42,$61,$12,$24,$43; 0x6ee9 $EED9 61 42 67 42 61 12 24 43  ;;aBgBa$C
.byt    $61,$4B,$61,$13,$23,$43,$61,$4B; 0x6ef1 $EEE1 61 4B 61 13 23 43 61 4B  ;;aKa#CaK
.byt    $61,$01,$11,$01,$11,$22,$60,$12; 0x6ef9 $EEE9 61 01 11 01 11 22 60 12  ;;a"`
.byt    $21,$01,$28,$19,$21,$13,$29,$02; 0x6f01 $EEF1 21 01 28 19 21 13 29 02  ;;!(!)
.byt    $13,$03,$12,$01,$12,$2B,$02,$12; 0x6f09 $EEF9 13 03 12 01 12 2B 02 12  ;;+
.byt    $A1,$F1,$01,$13,$01,$11,$28,$A1; 0x6f11 $EF01 A1 F1 01 13 01 11 28 A1  ;;(
.byt    $F1,$22,$02,$F2,$21,$17,$26,$F2; 0x6f19 $EF09 F1 22 02 F2 21 17 26 F2  ;;"!&
.byt    $23,$12,$21,$18,$2A,$12,$01,$11; 0x6f21 $EF11 23 12 21 18 2A 12 01 11  ;;#!
.byt    $01,$16,$01,$29,$11,$01,$16,$01; 0x6f29 $EF19 01 16 01 29 11 01 16 01  ;;)
.byt    $14,$27,$12,$01,$1C            ; 0x6f31 $EF21 14 27 12 01 1C           ;;'
Screen_Data_05                                                                 ;
.byt    $14,$01,$12,$2F,$16,$01,$12,$2D; 0x6f36 $EF26 14 01 12 2F 16 01 12 2D  ;;-
.byt    $11,$01,$14,$21,$11,$01,$2D,$15; 0x6f3e $EF2E 11 01 14 21 11 01 2D 15  ;;!-
.byt    $01,$11,$01,$22,$A1,$F1,$2A,$12; 0x6f46 $EF36 01 11 01 22 A1 F1 2A 12  ;;"
.byt    $01,$14,$21,$11,$21,$F2,$24,$A1; 0x6f4e $EF3E 01 14 21 11 21 F2 24 A1  ;;!!$
.byt    $F1,$24,$12,$21,$15,$01,$27,$F2; 0x6f56 $EF46 F1 24 12 21 15 01 27 F2  ;;$!'
.byt    $24,$13,$01,$13,$01,$12,$21,$A1; 0x6f5e $EF4E 24 13 01 13 01 12 21 A1  ;;$!
.byt    $F1,$29,$01,$12,$21,$01,$12,$21; 0x6f66 $EF56 F1 29 01 12 21 01 12 21  ;;)!!
.byt    $02,$21,$F2,$22,$A1,$F1,$26,$02; 0x6f6e $EF5E 02 21 F2 22 A1 F1 26 02  ;;!"&
.byt    $22,$02,$28,$F2,$28,$11,$25,$A1; 0x6f76 $EF66 22 02 28 F2 28 11 25 A1  ;;"((%
.byt    $F1,$2E,$01,$21,$A1,$F1,$22,$F2; 0x6f7e $EF6E F1 2E 01 21 A1 F1 22 F2  ;;.!"
.byt    $20,$F2,$20,$20,$A1,$F1,$23,$A1; 0x6f86 $EF76 20 F2 20 20 A1 F1 23 A1  ;;   #
.byt    $F1,$2F,$F2,$23,$F2,$20,$2B,$A1; 0x6f8e $EF7E F1 2F F2 23 F2 20 2B A1  ;;# +
.byt    $F1,$20,$24,$F2,$20,$20,$20,$A1; 0x6f96 $EF86 F1 20 24 F2 20 20 20 A1  ;; $   
.byt    $F1,$20,$24,$F2,$20,$20,$20,$23; 0x6f9e $EF8E F1 20 24 F2 20 20 20 23  ;; $   #
Screen_Data_06                                                                 ;
.byt    $2A,$51,$32,$51,$78,$2A,$51,$32; 0x6fa6 $EF96 2A 51 32 51 78 2A 51 32  ;;Q2QxQ2
.byt    $51,$78,$2A,$51,$32,$51,$78,$2A; 0x6fae $EF9E 51 78 2A 51 32 51 78 2A  ;;QxQ2Qx
.byt    $51,$32,$51,$78,$2A,$51,$32,$51; 0x6fb6 $EFA6 51 32 51 78 2A 51 32 51  ;;Q2QxQ2Q
.byt    $78,$2A,$51,$32,$51,$78,$26,$55; 0x6fbe $EFAE 78 2A 51 32 51 78 26 55  ;;xQ2Qx&U
.byt    $32,$51,$78,$26,$51,$36,$51,$78; 0x6fc6 $EFB6 32 51 78 26 51 36 51 78  ;;2Qx&Q6Qx
.byt    $26,$51,$36,$51,$78,$26,$51,$32; 0x6fce $EFBE 26 51 36 51 78 26 51 32  ;;&Q6Qx&Q2
.byt    $55,$78,$26,$51,$32,$51,$84,$78; 0x6fd6 $EFC6 55 78 26 51 32 51 84 78  ;;Ux&Q2Qx
.byt    $26,$51,$32,$51,$84,$78,$26,$51; 0x6fde $EFCE 26 51 32 51 84 78 26 51  ;;&Q2Qx&Q
.byt    $32,$51,$42,$82,$78,$26,$51,$32; 0x6fe6 $EFD6 32 51 42 82 78 26 51 32  ;;2QBx&Q2
.byt    $51,$C1,$F1,$82,$78,$26,$51,$32; 0x6fee $EFDE 51 C1 F1 82 78 26 51 32  ;;Qx&Q2
.byt    $51,$F2,$82,$78,$26,$51,$32,$51; 0x6ff6 $EFE6 51 F2 82 78 26 51 32 51  ;;Qx&Q2Q
.byt    $42,$82,$78,$26,$51,$32,$51,$84; 0x6ffe $EFEE 42 82 78 26 51 32 51 84  ;;Bx&Q2Q
.byt    $78,$26,$51,$32,$51,$84,$78,$26; 0x7006 $EFF6 78 26 51 32 51 84 78 26  ;;x&Q2Qx&
.byt    $51,$32,$51,$7C,$26,$51,$32,$51; 0x700e $EFFE 51 32 51 7C 26 51 32 51  ;;Q2Q|&Q2Q
.byt    $7C,$26,$51,$32,$51,$7C,$26,$51; 0x7016 $F006 7C 26 51 32 51 7C 26 51  ;;|&Q2Q|&Q
.byt    $32,$51,$7C                    ; 0x701e $F00E 32 51 7C                 ;;2Q|
Screen_Data_07                                                                 ;
.byt    $70,$74,$22,$70,$74,$22,$70,$70; 0x7021 $F011 70 74 22 70 74 22 70 70  ;;pt"pt"pp
.byt    $70,$70,$70,$70,$70,$70,$70,$70; 0x7029 $F019 70 70 70 70 70 70 70 70  ;;pppppppp
.byt    $70,$70,$70,$70,$70,$70,$70,$70; 0x7031 $F021 70 70 70 70 70 70 70 70  ;;pppppppp
.byt    $70,$70,$70,$70,$70,$70,$70,$70; 0x7039 $F029 70 70 70 70 70 70 70 70  ;;pppppppp
.byt    $22,$70,$74,$22                ; 0x7041 $F031 22 70 74 22              ;;"pt"
Screen_Data_08                                                                 ;
.byt    $26,$51,$32,$51,$20,$22,$51,$32; 0x7045 $F035 26 51 32 51 20 22 51 32  ;;&Q2Q "Q2
.byt    $51,$2C,$72,$24,$51,$32,$51,$A1; 0x704d $F03D 51 2C 72 24 51 32 51 A1  ;;Q,r$Q2Q
.byt    $F1,$2A,$72,$24,$51,$32,$51,$F2; 0x7055 $F045 F1 2A 72 24 51 32 51 F2  ;;r$Q2Q
.byt    $26,$A1,$F1,$22,$72,$24,$51,$32; 0x705d $F04D 26 A1 F1 22 72 24 51 32  ;;&"r$Q2
.byt    $59,$F2,$22,$72,$24,$51,$3A,$51; 0x7065 $F055 59 F2 22 72 24 51 3A 51  ;;Y"r$Q:Q
.byt    $24,$72,$24,$51,$3A,$51,$23,$81; 0x706d $F05D 24 72 24 51 3A 51 23 81  ;;$r$Q:Q#
.byt    $72,$24,$59,$32,$51,$23,$81,$74; 0x7075 $F065 72 24 59 32 51 23 81 74  ;;r$Y2Q#t
.byt    $2A,$51,$32,$51,$22,$B1,$F1,$74; 0x707d $F06D 2A 51 32 51 22 B1 F1 74  ;;Q2Q"t
.byt    $2A,$51,$32,$51,$81,$21,$F2,$74; 0x7085 $F075 2A 51 32 51 81 21 F2 74  ;;Q2Q!t
.byt    $2A,$51,$32,$51,$B1,$F1,$82,$74; 0x708d $F07D 2A 51 32 51 B1 F1 82 74  ;;Q2Qt
.byt    $2A,$51,$32,$51,$F2,$82,$74,$2A; 0x7095 $F085 2A 51 32 51 F2 82 74 2A  ;;Q2Qt
.byt    $51,$32,$51,$84,$74,$2A,$51,$32; 0x709d $F08D 51 32 51 84 74 2A 51 32  ;;Q2QtQ2
.byt    $51,$84,$74,$2A,$51,$32,$51,$B1; 0x70a5 $F095 51 84 74 2A 51 32 51 B1  ;;QtQ2Q
.byt    $F1,$82,$74,$2A,$51,$32,$51,$F2; 0x70ad $F09D F1 82 74 2A 51 32 51 F2  ;;tQ2Q
.byt    $82,$72,$2C,$51,$32,$51,$84,$72; 0x70b5 $F0A5 82 72 2C 51 32 51 84 72  ;;r,Q2Qr
.byt    $2C,$51,$32,$51,$84,$72,$28,$91; 0x70bd $F0AD 2C 51 32 51 84 72 28 91  ;;,Q2Qr(
.byt    $F1,$22,$51,$32,$51,$82,$B1,$F1; 0x70c5 $F0B5 F1 22 51 32 51 82 B1 F1  ;;"Q2Q
.byt    $72,$28,$F2,$22,$51,$32,$51,$82; 0x70cd $F0BD 72 28 F2 22 51 32 51 82  ;;r("Q2Q
.byt    $F2,$2E,$51,$32,$51,$84,$2E,$51; 0x70d5 $F0C5 F2 2E 51 32 51 84 2E 51  ;;.Q2Q.Q
.byt    $32,$51,$84                    ; 0x70dd $F0CD 32 51 84                 ;;2Q
Screen_Data_09                                                                 ;
.byt    $29,$11,$01,$16,$01,$14,$27,$12; 0x70e0 $F0D0 29 11 01 16 01 14 27 12  ;;)'
.byt    $01,$1C,$27,$01,$13,$01,$16,$01; 0x70e8 $F0D8 01 1C 27 01 13 01 16 01  ;;'
.byt    $12,$01,$25,$11,$22,$03,$21,$01; 0x70f0 $F0E0 12 01 25 11 22 03 21 01  ;;%"!
.byt    $12,$01,$16,$25,$01,$27,$02,$21; 0x70f8 $F0E8 12 01 16 25 01 27 02 21  ;;%'!
.byt    $13,$01,$12,$2F,$14,$21,$12,$21; 0x7100 $F0F0 13 01 12 2F 14 21 12 21  ;;!!
.byt    $81,$B1,$F1,$28,$B1,$F1,$21,$02; 0x7108 $F0F8 81 B1 F1 28 B1 F1 21 02  ;;(!
.byt    $15,$21,$81,$F2,$81,$23,$81,$22; 0x7110 $F100 15 21 81 F2 81 23 81 22  ;;!#"
.byt    $81,$F2,$23,$02,$11,$01,$11,$B1; 0x7118 $F108 81 F2 23 02 11 01 11 B1  ;;#
.byt    $F1,$84,$B1,$F1,$87,$24,$01,$21; 0x7120 $F110 F1 84 B1 F1 87 24 01 21  ;;$!
.byt    $01,$F2,$84,$F2,$88,$26,$82,$B1; 0x7128 $F118 01 F2 84 F2 88 26 82 B1  ;;&
.byt    $F1,$86,$B1,$F1,$84,$26,$82,$F2; 0x7130 $F120 F1 86 B1 F1 84 26 82 F2  ;;&
.byt    $86,$F2,$85,$25,$86,$B1,$F1,$86; 0x7138 $F128 86 F2 85 25 86 B1 F1 86  ;;%
.byt    $B1,$F1,$81,$25,$86,$F2,$86,$F2; 0x7140 $F130 B1 F1 81 25 86 F2 86 F2  ;;%
.byt    $24,$A1,$F1,$84,$B1,$F1,$86,$B1; 0x7148 $F138 24 A1 F1 84 B1 F1 86 B1  ;;$
.byt    $F1,$81,$25,$F2,$84,$F2,$86,$F2; 0x7150 $F140 F1 81 25 F2 84 F2 86 F2  ;;%
.byt    $83,$25,$88,$B1,$F1,$86,$B1,$F1; 0x7158 $F148 83 25 88 B1 F1 86 B1 F1  ;;%
.byt    $24,$88,$F2,$86,$F2,$81,$23,$B1; 0x7160 $F150 24 88 F2 86 F2 81 23 B1  ;;$#
.byt    $F1,$8A,$B1,$F1,$85,$23,$F2,$8A; 0x7168 $F158 F1 8A B1 F1 85 23 F2 8A  ;;#
.byt    $F2,$85,$23,$84,$B1,$F1,$84,$B1; 0x7170 $F160 F2 85 23 84 B1 F1 84 B1  ;;#
.byt    $F1,$84,$B1,$F1,$24,$84,$F2,$84; 0x7178 $F168 F1 84 B1 F1 24 84 F2 84  ;;$
.byt    $F2,$84,$F2,$24                ; 0x7180 $F170 F2 84 F2 24              ;;$
Screen_Data_0A                                                                 ;
.byt    $20,$20,$20,$23,$84,$23,$A1,$F1; 0x7184 $F174 20 20 20 23 84 23 A1 F1  ;;   ##
.byt    $2D,$83,$21,$81,$22,$F2,$28,$A1; 0x718c $F17C 2D 83 21 81 22 F2 28 A1  ;;-!"(
.byt    $F1,$22,$86,$2C,$F2,$21,$8A,$27; 0x7194 $F184 F1 22 86 2C F2 21 8A 27  ;;",!'
.byt    $5E,$82,$26,$3D,$51,$83,$25,$3D; 0x719c $F18C 5E 82 26 3D 51 83 25 3D  ;;^&=Q%=
.byt    $50,$54,$3B,$2A,$51,$3B,$2A,$5C; 0x71a4 $F194 50 54 3B 2A 51 3B 2A 5C  ;;PT;Q;
.byt    $26,$91,$F1,$20,$24,$F2,$20,$20; 0x71ac $F19C 26 91 F1 20 24 F2 20 20  ;;& $  
.byt    $20,$20,$20,$20,$20,$20,$20,$20; 0x71b4 $F1A4 20 20 20 20 20 20 20 20  ;;        
.byt    $20,$2E                        ; 0x71bc $F1AC 20 2E                    ;; .
Screen_Data_0B                                                                 ;
.byt    $26,$51,$32,$51,$7C,$26,$51,$32; 0x71be $F1AE 26 51 32 51 7C 26 51 32  ;;&Q2Q|&Q2
.byt    $51,$7C,$26,$51,$32,$51,$7C,$26; 0x71c6 $F1B6 51 7C 26 51 32 51 7C 26  ;;Q|&Q2Q|&
.byt    $51,$32,$51,$7C,$26,$51,$32,$51; 0x71ce $F1BE 51 32 51 7C 26 51 32 51  ;;Q2Q|&Q2Q
.byt    $74,$82,$76,$26,$51,$32,$51,$74; 0x71d6 $F1C6 74 82 76 26 51 32 51 74  ;;tv&Q2Qt
.byt    $82,$76,$26,$51,$32,$53,$88,$72; 0x71de $F1CE 82 76 26 51 32 53 88 72  ;;v&Q2Sr
.byt    $26,$51,$34,$51,$22,$86,$72,$57; 0x71e6 $F1D6 26 51 34 51 22 86 72 57  ;;&Q4Q"rW
.byt    $34,$51,$24,$84,$72,$3B,$51,$25; 0x71ee $F1DE 34 51 24 84 72 3B 51 25  ;;4Q$r;Q%
.byt    $A1,$F1,$81,$72,$3B,$51,$D1,$F3; 0x71f6 $F1E6 A1 F1 81 72 3B 51 D1 F3  ;;r;Q
.byt    $21,$F2,$81,$72,$59,$32,$51,$F4; 0x71fe $F1EE 21 F2 81 72 59 32 51 F4  ;;!rY2Q
.byt    $22,$82,$72,$26,$A1,$F1,$51,$32; 0x7206 $F1F6 22 82 72 26 A1 F1 51 32  ;;"r&Q2
.byt    $51,$F4,$24,$52,$26,$F2,$51,$32; 0x720e $F1FE 51 F4 24 52 26 F2 51 32  ;;Q$R&Q2
.byt    $51,$F4,$24,$51,$31,$28,$51,$32; 0x7216 $F206 51 F4 24 51 31 28 51 32  ;;Q$Q1(Q2
.byt    $51,$C1,$F1,$42,$22,$52,$32,$28; 0x721e $F20E 51 C1 F1 42 22 52 32 28  ;;QB"R2(
.byt    $51,$32,$51,$F2,$42,$22,$51,$33; 0x7226 $F216 51 32 51 F2 42 22 51 33  ;;Q2QB"Q3
.byt    $28,$51,$32,$51,$42,$24,$51,$33; 0x722e $F21E 28 51 32 51 42 24 51 33  ;;(Q2QB$Q3
.byt    $28,$51,$32,$51,$42,$24,$51,$33; 0x7236 $F226 28 51 32 51 42 24 51 33  ;;(Q2QB$Q3
.byt    $28,$51,$32,$51,$24,$52,$34,$28; 0x723e $F22E 28 51 32 51 24 52 34 28  ;;(Q2Q$R4(
.byt    $51,$32,$51,$24,$51,$35,$28,$51; 0x7246 $F236 51 32 51 24 51 35 28 51  ;;Q2Q$Q5(Q
.byt    $32,$51,$22,$91,$F1,$51,$35,$28; 0x724e $F23E 32 51 22 91 F1 51 35 28  ;;2Q"Q5(
.byt    $51,$32,$51,$22,$F2,$51,$35    ; 0x7256 $F246 51 32 51 22 F2 51 35     ;;Q2Q"Q5
Screen_Data_0C                                                                 ;
.byt    $70,$74,$22,$70,$74,$22,$70,$74; 0x725d $F24D 70 74 22 70 74 22 70 74  ;;pt"pt"pt
.byt    $22,$70,$74,$22,$70,$72,$24,$70; 0x7265 $F255 22 70 74 22 70 72 24 70  ;;"pt"pr$p
.byt    $72,$81,$23,$7E,$86,$22,$7E,$87; 0x726d $F25D 72 81 23 7E 86 22 7E 87  ;;r#~"~
.byt    $21,$7A,$8C,$7A,$8C,$74,$58,$86; 0x7275 $F265 21 7A 8C 7A 8C 74 58 86  ;;!zztX
.byt    $54,$74,$51,$36,$51,$86,$51,$33; 0x727d $F26D 54 74 51 36 51 86 51 33  ;;TtQ6QQ3
.byt    $54,$38,$56,$34,$51,$3D,$52,$30; 0x7285 $F275 54 38 56 34 51 3D 52 30  ;;T8V4Q=R0
.byt    $30,$32,$54,$3B,$51,$35,$51,$24; 0x728d $F27D 30 32 54 3B 51 35 51 24  ;;02T;Q5Q$
.byt    $51,$3A,$51,$34,$52,$24,$52,$38; 0x7295 $F285 51 3A 51 34 52 24 52 38  ;;Q:Q4R$R8
.byt    $52,$33,$51,$28,$51,$36,$51,$22; 0x729d $F28D 52 33 51 28 51 36 51 22  ;;R3Q(Q6Q"
.byt    $33,$51,$28,$52,$35,$51,$22,$33; 0x72a5 $F295 33 51 28 52 35 51 22 33  ;;3Q(R5Q"3
.byt    $51,$2A,$51,$34,$51,$22,$33,$51; 0x72ad $F29D 51 2A 51 34 51 22 33 51  ;;QQ4Q"3Q
.byt    $2A,$51,$34,$51,$22            ; 0x72b5 $F2A5 2A 51 34 51 22           ;;Q4Q"
Screen_Data_0D                                                                 ;
.byt    $2E,$51,$32,$51,$84,$2E,$51,$32; 0x72ba $F2AA 2E 51 32 51 84 2E 51 32  ;;.Q2Q.Q2
.byt    $51,$84,$2E,$51,$32,$51,$B1,$F1; 0x72c2 $F2B2 51 84 2E 51 32 51 B1 F1  ;;Q.Q2Q
.byt    $82,$2E,$51,$32,$51,$F2,$82,$2E; 0x72ca $F2BA 82 2E 51 32 51 F2 82 2E  ;;.Q2Q.
.byt    $51,$32,$51,$82,$B1,$F1,$2E,$51; 0x72d2 $F2C2 51 32 51 82 B1 F1 2E 51  ;;Q2Q.Q
.byt    $32,$51,$82,$F2,$24,$81,$29,$51; 0x72da $F2CA 32 51 82 F2 24 81 29 51  ;;2Q$)Q
.byt    $32,$51,$85,$22,$82,$21,$83,$25; 0x72e2 $F2D2 32 51 85 22 82 21 83 25  ;;2Q"!%
.byt    $51,$32,$51,$8C,$26,$51,$32,$51; 0x72ea $F2DA 51 32 51 8C 26 51 32 51  ;;Q2Q&Q2Q
.byt    $B1,$F1,$8B,$25,$51,$32,$51,$F2; 0x72f2 $F2E2 B1 F1 8B 25 51 32 51 F2  ;;%Q2Q
.byt    $82,$56,$85,$23,$51,$32,$55,$35; 0x72fa $F2EA 82 56 85 23 51 32 55 35  ;;V#Q2U5
.byt    $51,$85,$23,$51,$3D,$54,$82,$22; 0x7302 $F2F2 51 85 23 51 3D 54 82 22  ;;Q#Q=T"
.byt    $51,$30,$51,$81,$23,$58,$3A,$52; 0x730a $F2FA 51 30 51 81 23 58 3A 52  ;;Q0Q#X:R
.byt    $24,$A1,$F1,$22,$11,$21,$31,$54; 0x7312 $F302 24 A1 F1 22 11 21 31 54  ;;$"!1T
.byt    $36,$51,$24,$F2,$21,$11,$01,$11; 0x731a $F30A 36 51 24 F2 21 11 01 11  ;;6Q$!
.byt    $31,$51,$22,$51,$37,$52,$25,$13; 0x7322 $F312 31 51 22 51 37 52 25 13  ;;1Q"Q7R%
.byt    $52,$22,$52,$37,$51,$21,$11,$22; 0x732a $F31A 52 22 52 37 51 21 11 22  ;;R"R7Q!"
.byt    $11,$01,$12,$25,$81,$51,$36,$51; 0x7332 $F322 11 01 12 25 81 51 36 51  ;;%Q6Q
.byt    $11,$01,$16,$25,$81,$52,$35,$51; 0x733a $F32A 11 01 16 25 81 52 35 51  ;;%R5Q
.byt    $01,$21,$15,$01,$25,$83,$51,$34; 0x7342 $F332 01 21 15 01 25 83 51 34  ;;!%Q4
.byt    $51,$22,$01,$15,$24,$84,$51,$34; 0x734a $F33A 51 22 01 15 24 84 51 34  ;;Q"$Q4
.byt    $51,$21,$14,$01,$12            ; 0x7352 $F342 51 21 14 01 12           ;;Q!
Screen_Data_0E                                                                 ;
.byt    $84,$B1,$F1,$84,$B1,$F1,$84,$B1; 0x7357 $F347 84 B1 F1 84 B1 F1 84 B1  ;;
.byt    $F1,$24,$84,$F2,$84,$F2,$84,$F2; 0x735f $F34F F1 24 84 F2 84 F2 84 F2  ;;$
.byt    $24,$86,$B1,$F1,$86,$B1,$F1,$82; 0x7367 $F357 24 86 B1 F1 86 B1 F1 82  ;;$
.byt    $24,$86,$F2,$86,$F2,$83,$23,$B1; 0x736f $F35F 24 86 F2 86 F2 83 23 B1  ;;$#
.byt    $F1,$88,$B1,$F1,$86,$B1,$F1,$22; 0x7377 $F367 F1 88 B1 F1 86 B1 F1 22  ;;"
.byt    $F2,$88,$F2,$86,$F2,$22,$84,$B1; 0x737f $F36F F2 88 F2 86 F2 22 84 B1  ;;"
.byt    $F1,$84,$5C,$84,$F2,$84,$51,$3B; 0x7387 $F377 F1 84 5C 84 F2 84 51 3B  ;;Q;
.byt    $82,$B1,$F1,$86,$51,$3B,$82,$F2; 0x738f $F37F 82 B1 F1 86 51 3B 82 F2  ;;Q;
.byt    $86,$51,$32,$50,$54,$32,$51,$28; 0x7397 $F387 86 51 32 50 54 32 51 28  ;;Q2PT2Q(
.byt    $3D,$51,$28,$3D,$51,$28,$5B,$32; 0x739f $F38F 3D 51 28 3D 51 28 5B 32  ;;=Q(=Q([2
.byt    $51,$28,$11,$23,$11,$23,$91,$F1; 0x73a7 $F397 51 28 11 23 11 23 91 F1  ;;Q(##
.byt    $51,$32,$51,$22,$91,$F1,$24,$01; 0x73af $F39F 51 32 51 22 91 F1 24 01  ;;Q2Q"$
.byt    $12,$21,$01,$11,$22,$F2,$51,$32; 0x73b7 $F3A7 12 21 01 11 22 F2 51 32  ;;!"Q2
.byt    $51,$22,$F2,$A1,$F1,$22,$12,$01; 0x73bf $F3AF 51 22 F2 A1 F1 22 12 01  ;;Q""
.byt    $15,$22,$51,$32,$51,$24,$F2,$22; 0x73c7 $F3B7 15 22 51 32 51 24 F2 22  ;;"Q2Q$"
.byt    $16,$01,$12,$21,$51,$32,$51,$28; 0x73cf $F3BF 16 01 12 21 51 32 51 28  ;;!Q2Q(
.byt    $18,$01,$21,$51,$32,$51,$28,$11; 0x73d7 $F3C7 18 01 21 51 32 51 28 11  ;;!Q2Q(
.byt    $01,$12,$01,$13,$22,$51,$32,$51; 0x73df $F3CF 01 12 01 13 22 51 32 51  ;;"Q2Q
.byt    $28,$17,$01,$22,$51,$32,$51,$28; 0x73e7 $F3D7 28 17 01 22 51 32 51 28  ;;("Q2Q(
.byt    $13,$01,$12,$01,$23,$51,$32,$51; 0x73ef $F3DF 13 01 12 01 23 51 32 51  ;;#Q2Q
.byt    $28                            ; 0x73f7 $F3E7 28                       ;;(
Screen_Data_0F                                                                 ;
.byt    $20,$20,$20,$20,$20,$2C,$91,$F1; 0x73f8 $F3E8 20 20 20 20 20 2C 91 F1  ;;     ,
.byt    $2C,$91,$F1,$26,$F2,$2C,$F2,$20; 0x7400 $F3F0 2C 91 F1 26 F2 2C F2 20  ;;,&, 
.byt    $91,$F1,$20,$24,$F2,$20,$A1,$F1; 0x7408 $F3F8 91 F1 20 24 F2 20 A1 F1  ;; $ 
.byt    $20,$24,$F2,$20,$20,$20,$26,$11; 0x7410 $F400 20 24 F2 20 20 20 26 11  ;; $   &
.byt    $22,$12,$20,$21,$12,$21,$01,$13; 0x7418 $F408 22 12 20 21 12 21 01 13  ;;" !!
.byt    $2F,$11,$01,$13,$01,$12,$2E,$15; 0x7420 $F410 2F 11 01 13 01 12 2E 15  ;;.
.byt    $21,$02,$2E,$14,$01,$11,$23,$11; 0x7428 $F418 21 02 2E 14 01 11 23 11  ;;!.#
.byt    $26,$91,$F1,$24,$17,$22,$01,$26; 0x7430 $F420 26 91 F1 24 17 22 01 26  ;;&$"&
.byt    $F2,$24,$01,$12,$01,$12,$01,$12; 0x7438 $F428 F2 24 01 12 01 12 01 12  ;;$
.byt    $2D,$18,$01,$2D,$19,$2D,$12,$01; 0x7440 $F430 2D 18 01 2D 19 2D 12 01  ;;---
.byt    $17,$2C                        ; 0x7448 $F438 17 2C                    ;;,
Screen_Data_10                                                                 ;
.byt    $28,$51,$32,$51,$22,$91,$F1,$51; 0x744a $F43A 28 51 32 51 22 91 F1 51  ;;(Q2Q"Q
.byt    $35,$28,$51,$32,$51,$22,$F2,$51; 0x7452 $F442 35 28 51 32 51 22 F2 51  ;;5(Q2Q"Q
.byt    $35,$28,$51,$32,$51,$24,$51,$35; 0x745a $F44A 35 28 51 32 51 24 51 35  ;;5(Q2Q$Q5
.byt    $28,$51,$32,$51,$24,$51,$35,$28; 0x7462 $F452 28 51 32 51 24 51 35 28  ;;(Q2Q$Q5(
.byt    $51,$33,$54,$36,$28,$51,$3D,$28; 0x746a $F45A 51 33 54 36 28 51 3D 28  ;;Q3T6(Q=(
.byt    $51,$3D,$28,$52,$3C,$22,$91,$F1; 0x7472 $F462 51 3D 28 52 3C 22 91 F1  ;;Q=(R<"
.byt    $24,$11,$21,$51,$36,$51,$34,$22; 0x747a $F46A 24 11 21 51 36 51 34 22  ;;$!Q6Q4"
.byt    $F2,$23,$11,$01,$11,$52,$34,$52; 0x7482 $F472 F2 23 11 01 11 52 34 52  ;;#R4R
.byt    $34,$27,$12,$01,$12,$51,$32,$51; 0x748a $F47A 34 27 12 01 12 51 32 51  ;;4'Q2Q
.byt    $12,$51,$33,$25,$17,$51,$32,$51; 0x7492 $F482 12 51 33 25 17 51 32 51  ;;Q3%Q2Q
.byt    $01,$11,$51,$33,$25,$11,$01,$14; 0x749a $F48A 01 11 51 33 25 11 01 14  ;;Q3%
.byt    $01,$51,$32,$51,$11,$01,$51,$33; 0x74a2 $F492 01 51 32 51 11 01 51 33  ;;Q2QQ3
.byt    $25,$01,$21,$11,$01,$12,$21,$51; 0x74aa $F49A 25 01 21 11 01 12 21 51  ;;%!!Q
.byt    $32,$51,$11,$21,$52,$32,$26,$16; 0x74b2 $F4A2 32 51 11 21 52 32 26 16  ;;2Q!R2&
.byt    $51,$32,$51,$01,$22,$11,$51,$31; 0x74ba $F4AA 51 32 51 01 22 11 51 31  ;;Q2Q"Q1
.byt    $26,$02,$13,$01,$51,$32,$51,$14; 0x74c2 $F4B2 26 02 13 01 51 32 51 14  ;;&Q2Q
.byt    $52,$28,$14,$51,$32,$51,$13,$01; 0x74ca $F4BA 52 28 14 51 32 51 13 01  ;;R(Q2Q
.byt    $29,$11,$01,$13,$51,$32,$51,$13; 0x74d2 $F4C2 29 11 01 13 51 32 51 13  ;;)Q2Q
.byt    $29,$14,$02,$51,$32,$51,$12,$01; 0x74da $F4CA 29 14 02 51 32 51 12 01  ;;)Q2Q
.byt    $12,$27,$01,$15,$51,$32,$51,$01; 0x74e2 $F4D2 12 27 01 15 51 32 51 01  ;;'Q2Q
.byt    $13,$01,$11,$27,$11,$01,$13,$51; 0x74ea $F4DA 13 01 11 27 11 01 13 51  ;;'Q
.byt    $32,$51,$15,$01,$25,$12,$01,$12; 0x74f2 $F4E2 32 51 15 01 25 12 01 12  ;;2Q%
.byt    $01,$11,$51,$32,$51,$11,$01,$14; 0x74fa $F4EA 01 11 51 32 51 11 01 14  ;;Q2Q
Screen_Data_11                                                                 ;
.byt    $33,$51,$2A,$51,$34,$51,$22,$33; 0x7502 $F4F2 33 51 2A 51 34 51 22 33  ;;3QQ4Q"3
.byt    $51,$2A,$51,$34,$51,$22,$33,$51; 0x750a $F4FA 51 2A 51 34 51 22 33 51  ;;QQ4Q"3Q
.byt    $24,$D1,$F3,$22,$51,$34,$51,$22; 0x7512 $F502 24 D1 F3 22 51 34 51 22  ;;$"Q4Q"
.byt    $33,$51,$24,$F4,$22,$51,$34,$51; 0x751a $F50A 33 51 24 F4 22 51 34 51  ;;3Q$"Q4Q
.byt    $22,$33,$51,$24,$F4,$22,$51,$34; 0x7522 $F512 22 33 51 24 F4 22 51 34  ;;"3Q$"Q4
.byt    $51,$22,$33,$51,$24,$F4,$A1,$F1; 0x752a $F51A 51 22 33 51 24 F4 A1 F1  ;;Q"3Q$
.byt    $51,$33,$52,$22,$33,$51,$A1,$F1; 0x7532 $F522 51 33 52 22 33 51 A1 F1  ;;Q3R"3Q
.byt    $24,$A1,$F3,$51,$32,$51,$24,$33; 0x753a $F52A 24 A1 F3 51 32 51 24 33  ;;$Q2Q$3
.byt    $51,$F2,$24,$F2,$22,$51,$32,$51; 0x7542 $F532 51 F2 24 F2 22 51 32 51  ;;Q$"Q2Q
.byt    $24,$34,$52,$24,$91,$F1,$22,$51; 0x754a $F53A 24 34 52 24 91 F1 22 51  ;;$4R$"Q
.byt    $32,$51,$24,$35,$51,$24,$F2,$22; 0x7552 $F542 32 51 24 35 51 24 F2 22  ;;2Q$5Q$"
.byt    $51,$32,$51,$24,$36,$52,$24,$52; 0x755a $F54A 51 32 51 24 36 52 24 52  ;;Q2Q$6R$R
.byt    $34,$52,$22,$37,$51,$24,$51,$36; 0x7562 $F552 34 52 22 37 51 24 51 36  ;;4R"7Q$Q6
.byt    $51,$22,$38,$54,$37,$51,$22,$30; 0x756a $F55A 51 22 38 54 37 51 22 30  ;;Q"8T7Q"0
.byt    $33,$51,$22,$51,$30,$32,$51,$22; 0x7572 $F562 33 51 22 51 30 32 51 22  ;;3Q"Q02Q"
.byt    $54,$3A,$52,$33,$51,$26,$51,$38; 0x757a $F56A 54 3A 52 33 51 26 51 38  ;;T:R3Q&Q8
.byt    $51,$22,$51,$32,$51,$26,$5A,$22; 0x7582 $F572 51 22 51 32 51 26 5A 22  ;;Q"Q2Q&Z"
.byt    $54,$22,$11,$24,$13,$2E,$01,$12; 0x758a $F57A 54 22 11 24 13 2E 01 12  ;;T"$.
.byt    $21,$11,$01,$13,$21,$11,$22,$11; 0x7592 $F582 21 11 01 13 21 11 22 11  ;;!!"
.byt    $28,$11,$01,$16,$01,$11,$01,$21; 0x759a $F58A 28 11 01 16 01 11 01 21  ;;(!
.byt    $13,$27,$14,$01,$17,$01,$11,$01; 0x75a2 $F592 13 27 14 01 17 01 11 01  ;;'
.byt    $11,$26                        ; 0x75aa $F59A 11 26                    ;;&
Screen_Data_12                                                                 ;
.byt    $25,$83,$51,$34,$51,$22,$01,$15; 0x75ac $F59C 25 83 51 34 51 22 01 15  ;;%Q4Q"
.byt    $24,$84,$51,$34,$51,$21,$14,$01; 0x75b4 $F5A4 24 84 51 34 51 21 14 01  ;;$Q4Q!
.byt    $12,$24,$84,$51,$34,$51,$21,$01; 0x75bc $F5AC 12 24 84 51 34 51 21 01  ;;$Q4Q!
.byt    $15,$01,$25,$83,$52,$33,$51,$22; 0x75c4 $F5B4 15 01 25 83 52 33 51 22  ;;%R3Q"
.byt    $02,$14,$24,$86,$51,$33,$52,$22; 0x75cc $F5BC 02 14 24 86 51 33 52 22  ;;$Q3R"
.byt    $01,$11,$01,$11,$24,$86,$51,$34; 0x75d4 $F5C4 01 11 01 11 24 86 51 34  ;;$Q4
.byt    $51,$23,$01,$21,$11,$26,$84,$51; 0x75dc $F5CC 51 23 01 21 11 26 84 51  ;;Q#!&Q
.byt    $35,$52,$22,$11,$01,$28,$82,$52; 0x75e4 $F5D4 35 52 22 11 01 28 82 52  ;;5R"(R
.byt    $35,$51,$22,$01,$29,$55,$35,$54; 0x75ec $F5DC 35 51 22 01 29 55 35 54  ;;5Q")U5T
.byt    $28,$51,$3D,$28,$51,$3D,$28,$51; 0x75f4 $F5E4 28 51 3D 28 51 3D 28 51  ;;(Q=(Q=(Q
.byt    $32,$5B,$28,$51,$32,$51,$20,$22; 0x75fc $F5EC 32 5B 28 51 32 51 20 22  ;;2[(Q2Q "
.byt    $51,$32,$51,$20,$22,$51,$32,$51; 0x7604 $F5F4 51 32 51 20 22 51 32 51  ;;Q2Q "Q2Q
.byt    $20,$22,$51,$32,$51,$20,$22,$51; 0x760c $F5FC 20 22 51 32 51 20 22 51  ;; "Q2Q "Q
.byt    $32,$51,$20,$22,$51,$32,$51,$20; 0x7614 $F604 32 51 20 22 51 32 51 20  ;;2Q "Q2Q 
.byt    $22,$51,$32,$51,$20,$22,$51,$32; 0x761c $F60C 22 51 32 51 20 22 51 32  ;;"Q2Q "Q2
.byt    $51,$20,$22,$51,$32,$51,$20,$22; 0x7624 $F614 51 20 22 51 32 51 20 22  ;;Q "Q2Q "
.byt    $51,$32,$51,$2A                ; 0x762c $F61C 51 32 51 2A              ;;Q2Q
Screen_Data_13                                                                 ;
.byt    $17,$01,$22,$51,$32,$51,$28,$13; 0x7630 $F620 17 01 22 51 32 51 28 13  ;;"Q2Q(
.byt    $01,$12,$01,$23,$51,$32,$51,$28; 0x7638 $F628 01 12 01 23 51 32 51 28  ;;#Q2Q(
.byt    $11,$01,$14,$42,$22,$51,$32,$51; 0x7640 $F630 11 01 14 42 22 51 32 51  ;;B"Q2Q
.byt    $28,$15,$01,$42,$22,$51,$32,$51; 0x7648 $F638 28 15 01 42 22 51 32 51  ;;(B"Q2Q
.byt    $28,$01,$13,$42,$C1,$F1,$11,$21; 0x7650 $F640 28 01 13 42 C1 F1 11 21  ;;(B!
.byt    $51,$32,$51,$29,$13,$42,$F2,$01; 0x7658 $F648 51 32 51 29 13 42 F2 01  ;;Q2Q)B
.byt    $11,$51,$32,$51,$28,$11,$01,$17; 0x7660 $F650 11 51 32 51 28 11 01 17  ;;Q2Q(
.byt    $01,$51,$32,$51,$42,$26,$01,$21; 0x7668 $F658 01 51 32 51 42 26 01 21  ;;Q2QB&!
.byt    $01,$14,$01,$11,$21,$51,$32,$51; 0x7670 $F660 01 14 01 11 21 51 32 51  ;;!Q2Q
.byt    $42,$26,$5B,$32,$51,$44,$24,$3D; 0x7678 $F668 42 26 5B 32 51 44 24 3D  ;;B&[2QD$=
.byt    $51,$41,$C1,$F1,$41,$24,$3D,$51; 0x7680 $F670 51 41 C1 F1 41 24 3D 51  ;;QAA$=Q
.byt    $41,$F2,$41,$24,$5E,$44,$20,$21; 0x7688 $F678 41 F2 41 24 5E 44 20 21  ;;AA$^D !
.byt    $13,$23,$12,$2D,$11,$01,$11,$01; 0x7690 $F680 13 23 12 2D 11 01 11 01  ;;#-
.byt    $11,$22,$01,$12,$2B,$11,$01,$18; 0x7698 $F688 11 22 01 12 2B 11 01 18  ;;"+
.byt    $01,$2B,$16,$01,$11,$01,$12,$29; 0x76a0 $F690 01 2B 16 01 11 01 12 29  ;;+)
.byt    $12,$01,$13,$01,$13,$21,$12,$29; 0x76a8 $F698 12 01 13 01 13 21 12 29  ;;!)
.byt    $02,$21,$01,$12,$21,$01,$15,$2B; 0x76b0 $F6A0 02 21 01 12 21 01 15 2B  ;;!!+
.byt    $19,$01,$11,$2A,$18,$01,$13,$29; 0x76b8 $F6A8 19 01 11 2A 18 01 13 29  ;;)
.byt    $11,$01,$12,$01,$18,$29,$17,$01; 0x76c0 $F6B0 11 01 12 01 18 29 17 01  ;;)
.byt    $15                            ; 0x76c8 $F6B8 15                       ;;;$15 to $24 : current password
Screen_Data_14                                                                 ;
.byt    $19,$2D,$12,$01,$17,$2C,$16,$01; 0x76c9 $F6B9 19 2D 12 01 17 2C 16 01  ;;-,
.byt    $12,$01,$2C,$19,$2D,$18,$01,$2D; 0x76d1 $F6C1 12 01 2C 19 2D 18 01 2D  ;;,--
.byt    $18,$2E,$11,$01,$16,$28,$91,$F1; 0x76d9 $F6C9 18 2E 11 01 16 28 91 F1  ;;.(
.byt    $24,$16,$02,$12,$26,$F2,$24,$19; 0x76e1 $F6D1 24 16 02 12 26 F2 24 19  ;;$&$
.byt    $01,$2B,$14,$01,$17,$27,$13,$01; 0x76e9 $F6D9 01 2B 14 01 17 27 13 01  ;;+'
.byt    $1A,$01,$25,$12,$01,$1F,$23,$11; 0x76f1 $F6E1 1A 01 25 12 01 1F 23 11  ;;%#
.byt    $01,$1A,$01,$15,$01,$23,$16,$02; 0x76f9 $F6E9 01 1A 01 15 01 23 16 02  ;;#
.byt    $19,$01,$24,$01,$13,$01,$1A,$02; 0x7701 $F6F1 19 01 24 01 13 01 1A 02  ;;$
.byt    $24,$11,$21,$1E,$23,$A1,$F1,$21; 0x7709 $F6F9 24 11 21 1E 23 A1 F1 21  ;;$!#!
.byt    $01,$21,$01,$17,$01,$16,$22,$F2; 0x7711 $F701 01 21 01 17 01 16 22 F2  ;;!"
.byt    $24,$02,$12,$01,$18,$01,$12,$28; 0x7719 $F709 24 02 12 01 18 01 12 28  ;;$(
.byt    $02,$21,$01,$14,$01,$14,$01,$2C; 0x7721 $F711 02 21 01 14 01 14 01 2C  ;;!,
.byt    $18,$01,$2D,$18,$2E,$13,$01,$13; 0x7729 $F719 18 01 2D 18 2E 13 01 13  ;;-.
.byt    $01,$2D                        ; 0x7731 $F721 01 2D                    ;;-
Screen_Data_15                                                                 ;
.byt    $27,$11,$01,$13,$51,$32,$51,$15; 0x7733 $F723 27 11 01 13 51 32 51 15  ;;'Q2Q
.byt    $01,$25,$12,$01,$12,$01,$11,$51; 0x773b $F72B 01 25 12 01 12 01 11 51  ;;%Q
.byt    $32,$51,$11,$01,$14,$25,$17,$51; 0x7743 $F733 32 51 11 01 14 25 17 51  ;;2Q%Q
.byt    $32,$51,$16,$24,$18,$51,$32,$51; 0x774b $F73B 32 51 16 24 18 51 32 51  ;;2Q$Q2Q
.byt    $01,$12,$01,$12,$24,$01,$13,$01; 0x7753 $F743 01 12 01 12 24 01 13 01  ;;$
.byt    $13,$51,$32,$51,$21,$12,$21,$12; 0x775b $F74B 13 51 32 51 21 12 21 12  ;;Q2Q!!
.byt    $23,$11,$21,$17,$51,$32,$51,$11; 0x7763 $F753 23 11 21 17 51 32 51 11  ;;#!Q2Q
.byt    $01,$12,$01,$11,$23,$01,$17,$01; 0x776b $F75B 01 12 01 11 23 01 17 01  ;;#
.byt    $51,$32,$51,$15,$01,$23,$11,$01; 0x7773 $F763 51 32 51 15 01 23 11 01  ;;Q2Q#
.byt    $15,$01,$21,$51,$32,$51,$01,$15; 0x777b $F76B 15 01 21 51 32 51 01 15  ;;!Q2Q
.byt    $21,$19,$22,$51,$32,$51,$21,$12; 0x7783 $F773 21 19 22 51 32 51 21 12  ;;!"Q2Q!
.byt    $02,$12,$01,$17,$01,$12,$51,$32; 0x778b $F77B 02 12 01 17 01 12 51 32  ;;Q2
.byt    $51,$21,$02,$22,$01,$1C,$51,$32; 0x7793 $F783 51 21 02 22 01 1C 51 32  ;;Q!"Q2
.byt    $57,$14,$01,$17,$51,$39,$11,$01; 0x779b $F78B 57 14 01 17 51 39 11 01  ;;WQ9
.byt    $14,$01,$14,$01,$51,$39,$16,$21; 0x77a3 $F793 14 01 14 01 51 39 16 21  ;;Q9!
.byt    $01,$13,$21,$5A,$1A,$01,$22,$11; 0x77ab $F79B 01 13 21 5A 1A 01 22 11  ;;!Z"
.byt    $44,$22,$17,$01,$16,$21,$01,$41; 0x77b3 $F7A3 44 22 17 01 16 21 01 41  ;;D"!A
.byt    $C1,$F1,$41,$21,$14,$02,$18,$01; 0x77bb $F7AB C1 F1 41 21 14 02 18 01  ;;A!
.byt    $12,$41,$F2,$41,$11,$01,$11,$02; 0x77c3 $F7B3 12 41 F2 41 11 01 11 02  ;;AA
.byt    $22,$02,$12,$03,$14,$44,$14,$25; 0x77cb $F7BB 22 02 12 03 14 44 14 25  ;;"D%
.byt    $11,$01,$21,$91,$F1,$1C,$25,$01; 0x77d3 $F7C3 11 01 21 91 F1 1C 25 01  ;;!%
.byt    $22,$F2,$01,$13,$01,$12,$02,$12; 0x77db $F7CB 22 F2 01 13 01 12 02 12  ;;"
.byt    $01,$26,$91,$F1,$18,$01,$22,$13; 0x77e3 $F7D3 01 26 91 F1 18 01 22 13  ;;&"
.byt    $26,$F2,$02,$12,$01,$13,$23,$11; 0x77eb $F7DB 26 F2 02 12 01 13 23 11  ;;&#
.byt    $01,$11                        ; 0x77f3 $F7E3 01 11                    ;;
Screen_Data_16                                                                 ;
.byt    $11,$01,$16,$01,$11,$01,$21,$13; 0x77f5 $F7E5 11 01 16 01 11 01 21 13  ;;!
.byt    $27,$14,$01,$17,$01,$11,$01,$11; 0x77fd $F7ED 27 14 01 17 01 11 01 11  ;;'
.byt    $26,$1B,$01,$11,$01,$12,$26,$19; 0x7805 $F7F5 26 1B 01 11 01 12 26 19  ;;&&
.byt    $01,$13,$21,$02,$26,$13,$01,$15; 0x780d $F7FD 01 13 21 02 26 13 01 15  ;;!&
.byt    $21,$03,$29,$01,$15,$02,$12,$2C; 0x7815 $F805 21 03 29 01 15 02 12 2C  ;;!),
.byt    $11,$01,$14,$22,$02,$91,$F1,$2A; 0x781d $F80D 11 01 14 22 02 91 F1 2A  ;;"
.byt    $14,$02,$24,$F2,$2A,$01,$13,$20; 0x7825 $F815 14 02 24 F2 2A 01 13 20  ;;$ 
.byt    $23,$03,$20,$22,$5E,$28,$3D,$51; 0x782d $F81D 23 03 20 22 5E 28 3D 51  ;;# "^(=Q
.byt    $28,$3D,$50,$54,$3B,$15,$22,$12; 0x7835 $F825 28 3D 50 54 3B 15 22 12  ;;(=PT;"
.byt    $21,$51,$3B,$14,$01,$12,$01,$12; 0x783d $F82D 21 51 3B 14 01 12 01 12  ;;!Q;
.byt    $51,$32,$59,$11,$01,$17,$01,$51; 0x7845 $F835 51 32 59 11 01 17 01 51  ;;Q2YQ
.byt    $32,$51,$24,$13,$21,$15,$01,$12; 0x784d $F83D 32 51 24 13 21 15 01 12  ;;2Q$!
.byt    $01,$21,$51,$32,$51,$23,$13,$01; 0x7855 $F845 01 21 51 32 51 23 13 01  ;;!Q2Q#
.byt    $19,$22,$51,$32,$51,$23,$01,$15; 0x785d $F84D 19 22 51 32 51 23 01 15  ;;"Q2Q#
.byt    $01,$15,$01,$12,$51,$32,$51,$24; 0x7865 $F855 01 15 01 12 51 32 51 24  ;;Q2Q$
.byt    $01,$1D,$51,$32,$51,$A1,$F1,$21; 0x786d $F85D 01 1D 51 32 51 A1 F1 21  ;;Q2Q!
.byt    $15,$01,$18,$01,$51,$32,$51,$F2; 0x7875 $F865 15 01 18 01 51 32 51 F2  ;;Q2Q
.byt    $11,$01,$13,$01                ; 0x787d $F86D 11 01 13 01              ;;
Screen_Data_17                                                                 ;
.byt    $28,$51,$32,$51,$20,$22,$51,$32; 0x7881 $F871 28 51 32 51 20 22 51 32  ;;(Q2Q "Q2
.byt    $51,$20,$22,$51,$32,$51,$20,$22; 0x7889 $F879 51 20 22 51 32 51 20 22  ;;Q "Q2Q "
.byt    $51,$32,$51,$2C,$57,$32,$51,$2C; 0x7891 $F881 51 32 51 2C 57 32 51 2C  ;;Q2Q,W2Q,
.byt    $51,$38,$51,$2C,$51,$38,$51,$22; 0x7899 $F889 51 38 51 2C 51 38 51 22  ;;Q8Q,Q8Q"
.byt    $68,$22,$51,$32,$57,$22,$61,$45; 0x78a1 $F891 68 22 51 32 57 22 61 45  ;;h"Q2W"aE
.byt    $61,$41,$22,$51,$32,$51,$28,$61; 0x78a9 $F899 61 41 22 51 32 51 28 61  ;;aA"Q2Q(a
.byt    $45,$61,$41,$22,$51,$32,$51,$28; 0x78b1 $F8A1 45 61 41 22 51 32 51 28  ;;EaA"Q2Q(
.byt    $61,$42,$61,$42,$62,$22,$51,$32; 0x78b9 $F8A9 61 42 61 42 62 22 51 32  ;;aBaBb"Q2
.byt    $51,$11,$27,$61,$42,$61,$44,$22; 0x78c1 $F8B1 51 11 27 61 42 61 44 22  ;;Q'aBaD"
.byt    $51,$32,$51,$11,$27,$61,$42,$61; 0x78c9 $F8B9 51 32 51 11 27 61 42 61  ;;Q2Q'aBa
.byt    $44,$53,$32,$51,$01,$21,$67,$42; 0x78d1 $F8C1 44 53 32 51 01 21 67 42  ;;DS2Q!gB
.byt    $65,$35,$51,$12,$61,$4D,$35,$51; 0x78d9 $F8C9 65 35 51 12 61 4D 35 51  ;;e5QaM5Q
.byt    $11,$01,$61,$4D,$56,$12,$61,$42; 0x78e1 $F8D1 11 01 61 4D 56 12 61 42  ;;aMVaB
.byt    $6A,$41,$11,$22,$13,$01,$11,$61; 0x78e9 $F8D9 6A 41 11 22 13 01 11 61  ;;jA"a
.byt    $42,$61,$4A,$01,$12,$01,$14,$61; 0x78f1 $F8E1 42 61 4A 01 12 01 14 61  ;;BaJa
.byt    $42,$61,$4A,$12,$01,$15,$61,$42; 0x78f9 $F8E9 42 61 4A 12 01 15 61 42  ;;BaJaB
.byt    $61,$42,$64,$42,$62,$16,$01,$11; 0x7901 $F8F1 61 42 64 42 62 16 01 11  ;;aBdBb
.byt    $61,$45,$61,$45,$61,$41,$18,$61; 0x7909 $F8F9 61 45 61 45 61 41 18 61  ;;aEaEaAa
.byt    $45,$61,$45,$61,$41,$11,$01,$13; 0x7911 $F901 45 61 45 61 41 11 01 13  ;;EaEaA
.byt    $01,$12,$61,$42,$64,$42,$65    ; 0x7919 $F909 01 12 61 42 64 42 65     ;;aBdBe
Screen_Data_18                                                                 ;
.byt    $29,$11,$01,$12,$01,$18,$29,$17; 0x7920 $F910 29 11 01 12 01 18 29 17  ;;))
.byt    $01,$15,$29,$02,$1B,$2B,$14,$01; 0x7928 $F918 01 15 29 02 1B 2B 14 01  ;;)+
.byt    $13,$01,$12,$2B,$01,$12,$01,$21; 0x7930 $F920 13 01 12 2B 01 12 01 21  ;;+!
.byt    $16,$2C,$02,$22,$16,$60,$01,$14; 0x7938 $F928 16 2C 02 22 16 60 01 14  ;;,"`
.byt    $01,$61,$4B,$61,$42,$61,$21,$01; 0x7940 $F930 01 61 4B 61 42 61 21 01  ;;aKaBa!
.byt    $11,$01,$12,$61,$4B,$61,$42,$61; 0x7948 $F938 11 01 12 61 4B 61 42 61  ;;aKaBa
.byt    $22,$14,$6A,$42,$61,$42,$61,$22; 0x7950 $F940 22 14 6A 42 61 42 61 22  ;;"jBaBa"
.byt    $01,$13,$49,$61,$45,$61,$21,$15; 0x7958 $F948 01 13 49 61 45 61 21 15  ;;IaEa!
.byt    $49,$61,$45,$61,$21,$02,$13,$67; 0x7960 $F950 49 61 45 61 21 02 13 67  ;;IaEa!g
.byt    $42,$64,$42,$61,$23,$01,$12,$43; 0x7968 $F958 42 64 42 61 23 01 12 43  ;;BdBa#C
.byt    $61,$42,$61,$48,$61,$24,$01,$11; 0x7970 $F960 61 42 61 48 61 24 01 11  ;;aBaHa$
.byt    $43,$61,$42,$61,$48,$61,$23,$13; 0x7978 $F968 43 61 42 61 48 61 23 13  ;;CaBaHa#
.byt    $61,$42,$61,$42,$64,$42,$64,$22; 0x7980 $F970 61 42 61 42 64 42 64 22  ;;aBaBdBd"
.byt    $11,$01,$12,$43,$61,$45,$61,$45; 0x7988 $F978 11 01 12 43 61 45 61 45  ;;CaEaE
.byt    $61,$21,$15,$43,$61,$45,$61,$45; 0x7990 $F980 61 21 15 43 61 45 61 45  ;;a!CaEaE
.byt    $61,$21,$02,$13,$64,$42,$61,$42; 0x7998 $F988 61 21 02 13 64 42 61 42  ;;a!dBaB
.byt    $64,$42,$61,$23,$02,$11,$61,$45; 0x79a0 $F990 64 42 61 23 02 11 61 45  ;;dBa#aE
.byt    $61,$42,$61,$42,$61,$42,$61,$25; 0x79a8 $F998 61 42 61 42 61 42 61 25  ;;aBaBaBa%
.byt    $11,$61,$45,$61,$42,$61,$42,$61; 0x79b0 $F9A0 11 61 45 61 42 61 42 61  ;;aEaBaBa
.byt    $42,$61,$25,$11,$64,$42,$64,$42; 0x79b8 $F9A8 42 61 25 11 64 42 64 42  ;;Ba%dBdB
.byt    $61,$42,$61,$25,$11            ; 0x79c0 $F9B0 61 42 61 25 11           ;;aBa%
Screen_Data_19                                                                 ;
.byt    $60,$60,$6D,$4B,$61,$48,$62,$4B; 0x79c5 $F9B5 60 60 6D 4B 61 48 62 4B  ;;``mKaHbK
.byt    $61,$48,$65,$42,$64,$42,$64,$42; 0x79cd $F9BD 61 48 65 42 64 42 64 42  ;;aHeBdBdB
.byt    $61,$42,$62,$45,$61,$42,$61,$48; 0x79d5 $F9C5 61 42 62 45 61 42 61 48  ;;aBbEaBaH
.byt    $61,$43,$61,$45,$61,$42,$61,$48; 0x79dd $F9CD 61 43 61 45 61 42 61 48  ;;aCaEaBaH
.byt    $61,$43,$61,$42,$64,$42,$64,$42; 0x79e5 $F9D5 61 43 61 42 64 42 64 42  ;;aCaBdBdB
.byt    $64,$42,$62,$42,$61,$40,$41,$62; 0x79ed $F9DD 64 42 62 42 61 40 41 62  ;;dBbBa@Ab
.byt    $42,$61,$40,$41,$62,$42,$64,$42; 0x79f5 $F9E5 42 61 40 41 62 42 64 42  ;;Ba@AbBdB
.byt    $64,$42,$61,$42,$61,$42,$62,$45; 0x79fd $F9ED 64 42 61 42 61 42 62 45  ;;dBaBaBbE
.byt    $61,$42,$61,$45,$61,$42,$61,$42; 0x7a05 $F9F5 61 42 61 45 61 42 61 42  ;;aBaEaBaB
.byt    $62,$45,$61,$42,$61,$45,$61,$42; 0x7a0d $F9FD 62 45 61 42 61 45 61 42  ;;bEaBaEaB
.byt    $61,$42,$65,$42,$64,$42,$67,$42; 0x7a15 $FA05 61 42 65 42 64 42 67 42  ;;aBeBdBgB
.byt    $62,$42,$61,$48,$61,$48,$62,$42; 0x7a1d $FA0D 62 42 61 48 61 48 62 42  ;;bBaHaHbB
.byt    $61,$48,$61,$48,$62,$42,$61,$42; 0x7a25 $FA15 61 48 61 48 62 42 61 42  ;;aHaHbBaB
.byt    $64,$42,$61,$42,$68,$45,$61,$42; 0x7a2d $FA1D 64 42 61 42 68 45 61 42  ;;dBaBhEaB
.byt    $61,$45,$61,$45,$62,$45,$61,$42; 0x7a35 $FA25 61 45 61 45 62 45 61 42  ;;aEaEbEaB
.byt    $61,$45,$61,$45,$62,$42,$64,$42; 0x7a3d $FA2D 61 45 61 45 62 42 64 42  ;;aEaEbBdB
.byt    $64,$42,$61,$42,$61,$42,$62,$42; 0x7a45 $FA35 64 42 61 42 61 42 62 42  ;;dBaBaBbB
.byt    $61,$48,$61,$45,$61,$42,$62,$42; 0x7a4d $FA3D 61 48 61 45 61 42 62 42  ;;aHaEaBbB
.byt    $61,$48,$61,$45,$61,$42,$61    ; 0x7a55 $FA45 61 48 61 45 61 42 61     ;;aHaEaBa
Screen_Data_1A                                                                 ;
.byt    $61,$42,$61,$48,$61,$45,$61,$42; 0x7a5c $FA4C 61 42 61 48 61 45 61 42  ;;aBaHaEaB
.byt    $62,$42,$61,$48,$61,$45,$61,$42; 0x7a64 $FA54 62 42 61 48 61 45 61 42  ;;bBaHaEaB
.byt    $62,$42,$64,$42,$64,$42,$61,$42; 0x7a6c $FA5C 62 42 64 42 64 42 61 42  ;;bBdBdBaB
.byt    $61,$42,$62,$45,$61,$42,$61,$45; 0x7a74 $FA64 61 42 62 45 61 42 61 45  ;;aBbEaBaE
.byt    $61,$45,$62,$45,$61,$42,$61,$45; 0x7a7c $FA6C 61 45 62 45 61 42 61 45  ;;aEbEaBaE
.byt    $61,$45,$62,$42,$61,$42,$61,$42; 0x7a84 $FA74 61 45 62 42 61 42 61 42  ;;aEbBaBaB
.byt    $61,$42,$64,$42,$65,$42,$61,$48; 0x7a8c $FA7C 61 42 64 42 65 42 61 48  ;;aBdBeBaH
.byt    $61,$42,$61,$42,$61,$42,$62,$42; 0x7a94 $FA84 61 42 61 42 61 42 62 42  ;;aBaBaBbB
.byt    $61,$48,$61,$42,$61,$42,$61,$42; 0x7a9c $FA8C 61 48 61 42 61 42 61 42  ;;aHaBaBaB
.byt    $62,$42,$64,$42,$61,$42,$61,$42; 0x7aa4 $FA94 62 42 64 42 61 42 61 42  ;;bBdBaBaB
.byt    $61,$42,$61,$42,$62,$48,$61,$48; 0x7aac $FA9C 61 42 61 42 62 48 61 48  ;;aBaBbHaH
.byt    $61,$42,$62,$48,$61,$48,$61,$42; 0x7ab4 $FAA4 61 42 62 48 61 48 61 42  ;;aBbHaHaB
.byt    $68,$42,$64,$42,$64,$42,$62,$4B; 0x7abc $FAAC 68 42 64 42 64 42 62 4B  ;;hBdBdBbK
.byt    $61,$48,$62,$4B,$61,$48,$62,$42; 0x7ac4 $FAB4 61 48 62 4B 61 48 62 42  ;;aHbKaHbB
.byt    $64,$42,$61,$42,$61,$42,$61,$42; 0x7acc $FABC 64 42 61 42 61 42 61 42  ;;dBaBaBaB
.byt    $61,$42,$62,$42,$61,$42,$61,$42; 0x7ad4 $FAC4 61 42 62 42 61 42 61 42  ;;aBbBaBaB
.byt    $61,$45,$61,$42,$61,$42,$62,$42; 0x7adc $FACC 61 45 61 42 61 42 62 42  ;;aEaBaBbB
.byt    $61,$42,$61,$42,$61,$45,$61,$42; 0x7ae4 $FAD4 61 42 61 42 61 45 61 42  ;;aBaBaEaB
.byt    $61,$42,$62,$42,$61,$42,$64,$42; 0x7aec $FADC 61 42 62 42 61 42 64 42  ;;aBbBaBdB
.byt    $64,$42,$61,$42,$62,$4B,$61,$48; 0x7af4 $FAE4 64 42 61 42 62 4B 61 48  ;;dBaBbKaH
.byt    $62,$4B,$61,$48,$60,$60,$6D    ; 0x7afc $FAEC 62 4B 61 48 60 60 6D     ;;bKaH``m
Screen_Data_1B                                                                 ;
.byt    $60,$60,$6D,$45,$61,$C1,$F1,$46; 0x7b03 $FAF3 60 60 6D 45 61 C1 F1 46  ;;``mEaF
.byt    $61,$45,$62,$45,$61,$F2,$46,$61; 0x7b0b $FAFB 61 45 62 45 61 F2 46 61  ;;aEbEaFa
.byt    $45,$62,$42,$64,$42,$64,$42,$61; 0x7b13 $FB03 45 62 42 64 42 64 42 61  ;;EbBdBdBa
.byt    $42,$61,$42,$62,$4B,$61,$45,$61; 0x7b1b $FB0B 42 61 42 62 4B 61 45 61  ;;BaBbKaEa
.byt    $42,$62,$4B,$61,$45,$61,$42,$62; 0x7b23 $FB13 42 62 4B 61 45 61 42 62  ;;BbKaEaBb
.byt    $42,$64,$42,$61,$42,$61,$42,$64; 0x7b2b $FB1B 42 64 42 61 42 61 42 64  ;;BdBaBaBd
.byt    $42,$62,$42,$61,$45,$61,$45,$61; 0x7b33 $FB23 42 62 42 61 45 61 45 61  ;;BbBaEaEa
.byt    $45,$62,$42,$61,$45,$61,$45,$61; 0x7b3b $FB2B 45 62 42 61 45 61 45 61  ;;EbBaEaEa
.byt    $45,$65,$42,$67,$42,$64,$42,$62; 0x7b43 $FB33 45 65 42 67 42 64 42 62  ;;EeBgBdBb
.byt    $45,$61,$4E,$62,$45,$61,$4E,$62; 0x7b4b $FB3B 45 61 4E 62 45 61 4E 62  ;;EaNbEaNb
.byt    $42,$64,$42,$61,$42,$64,$42,$65; 0x7b53 $FB43 42 64 42 61 42 64 42 65  ;;BdBaBdBe
.byt    $42,$61,$45,$61,$42,$61,$48,$62; 0x7b5b $FB4B 42 61 45 61 42 61 48 62  ;;BaEaBaHb
.byt    $42,$61,$45,$61,$42,$61,$48,$62; 0x7b63 $FB53 42 61 45 61 42 61 48 62  ;;BaEaBaHb
.byt    $42,$67,$42,$61,$42,$64,$42,$62; 0x7b6b $FB5B 42 67 42 61 42 64 42 62  ;;BgBaBdBb
.byt    $48,$61,$45,$61,$42,$61,$42,$62; 0x7b73 $FB63 48 61 45 61 42 61 42 62  ;;HaEaBaBb
.byt    $48,$61,$45,$61,$42,$61,$42,$62; 0x7b7b $FB6B 48 61 45 61 42 61 42 62  ;;HaEaBaBb
.byt    $42,$61,$42,$64,$42,$61,$42,$61; 0x7b83 $FB73 42 61 42 64 42 61 42 61  ;;BaBdBaBa
.byt    $42,$61,$42,$62,$42,$61,$48,$61; 0x7b8b $FB7B 42 61 42 62 42 61 48 61  ;;BaBbBaHa
.byt    $42,$61,$42,$61,$42,$62,$42,$61; 0x7b93 $FB83 42 61 42 61 42 62 42 61  ;;BaBaBbBa
.byt    $48,$61,$42,$61,$42,$61,$42,$61; 0x7b9b $FB8B 48 61 42 61 42 61 42 61  ;;HaBaBaBa
Screen_Data_1C                                                                 ;
.byt    $61,$42,$61,$48,$61,$42,$61,$42; 0x7ba3 $FB93 61 42 61 48 61 42 61 42  ;;aBaHaBaB
.byt    $61,$42,$62,$42,$61,$48,$61,$42; 0x7bab $FB9B 61 42 62 42 61 48 61 42  ;;aBbBaHaB
.byt    $61,$42,$61,$42,$62,$42,$61,$42; 0x7bb3 $FBA3 61 42 61 42 62 42 61 42  ;;aBaBbBaB
.byt    $61,$42,$61,$42,$61,$42,$61,$42; 0x7bbb $FBAB 61 42 61 42 61 42 61 42  ;;aBaBaBaB
.byt    $61,$42,$62,$45,$61,$42,$61,$45; 0x7bc3 $FBB3 61 42 62 45 61 42 61 45  ;;aBbEaBaE
.byt    $61,$45,$62,$45,$61,$42,$61,$45; 0x7bcb $FBBB 61 45 62 45 61 42 61 45  ;;aEbEaBaE
.byt    $61,$45,$62,$42,$64,$42,$64,$42; 0x7bd3 $FBC3 61 45 62 42 64 42 64 42  ;;aEbBdBdB
.byt    $64,$42,$62,$42,$61,$42,$61,$45; 0x7bdb $FBCB 64 42 62 42 61 42 61 45  ;;dBbBaBaE
.byt    $61,$48,$62,$42,$61,$42,$61,$45; 0x7be3 $FBD3 61 48 62 42 61 42 61 45  ;;aHbBaBaE
.byt    $61,$48,$62,$42,$61,$42,$61,$42; 0x7beb $FBDB 61 48 62 42 61 42 61 42  ;;aHbBaBaB
.byt    $61,$42,$64,$42,$65,$48,$61,$4B; 0x7bf3 $FBE3 61 42 64 42 65 48 61 4B  ;;aBdBeHaK
.byt    $62,$48,$61,$4B,$65,$42,$67,$42; 0x7bfb $FBEB 62 48 61 4B 65 42 67 42  ;;bHaKeBgB
.byt    $68,$42,$61,$45,$61,$4B,$62,$42; 0x7c03 $FBF3 68 42 61 45 61 4B 62 42  ;;hBaEaKbB
.byt    $61,$45,$61,$4B,$62,$42,$61,$42; 0x7c0b $FBFB 61 45 61 4B 62 42 61 42  ;;aEaKbBaB
.byt    $61,$42,$61,$42,$64,$42,$61,$42; 0x7c13 $FC03 61 42 61 42 64 42 61 42  ;;aBaBdBaB
.byt    $62,$45,$61,$45,$61,$45,$61,$42; 0x7c1b $FC0B 62 45 61 45 61 45 61 42  ;;bEaEaEaB
.byt    $62,$45,$61,$45,$61,$45,$61,$42; 0x7c23 $FC13 62 45 61 45 61 45 61 42  ;;bEaEaEaB
.byt    $68,$42,$67,$42,$61,$42,$62,$48; 0x7c2b $FC1B 68 42 67 42 61 42 62 48  ;;hBgBaBbH
.byt    $61,$C1,$F1,$46,$61,$42,$62,$48; 0x7c33 $FC23 61 C1 F1 46 61 42 62 48  ;;aFaBbH
.byt    $61,$F2,$46,$61,$42,$60,$60,$6D; 0x7c3b $FC2B 61 F2 46 61 42 60 60 6D  ;;aFaB``m
Screen_Data_1D                                                                 ;
.byt    $60,$68,$C1,$F1,$46,$61,$48,$61; 0x7c43 $FC33 60 68 C1 F1 46 61 48 61  ;;`hFaHa
.byt    $42,$62,$F2,$46,$61,$48,$61,$42; 0x7c4b $FC3B 42 62 F2 46 61 48 61 42  ;;BbFaHaB
.byt    $68,$42,$61,$42,$67,$42,$62,$4B; 0x7c53 $FC43 68 42 61 42 67 42 62 4B  ;;hBaBgBbK
.byt    $61,$48,$62,$4B,$61,$48,$62,$42; 0x7c5b $FC4B 61 48 62 4B 61 48 62 42  ;;aHbKaHbB
.byt    $61,$42,$64,$42,$61,$42,$61,$42; 0x7c63 $FC53 61 42 64 42 61 42 61 42  ;;aBdBaBaB
.byt    $65,$42,$61,$4B,$61,$45,$62,$42; 0x7c6b $FC5B 65 42 61 4B 61 45 62 42  ;;eBaKaEbB
.byt    $61,$4B,$61,$45,$62,$42,$61,$42; 0x7c73 $FC63 61 4B 61 45 62 42 61 42  ;;aKaEbBaB
.byt    $61,$42,$64,$42,$61,$42,$65,$45; 0x7c7b $FC6B 61 42 64 42 61 42 65 45  ;;aBdBaBeE
.byt    $61,$45,$61,$48,$62,$45,$61,$45; 0x7c83 $FC73 61 45 61 48 62 45 61 45  ;;aEaHbEaE
.byt    $61,$48,$65,$42,$61,$42,$61,$42; 0x7c8b $FC7B 61 48 65 42 61 42 61 42  ;;aHeBaBaB
.byt    $61,$42,$68,$48,$61,$4B,$62,$48; 0x7c93 $FC83 61 42 68 48 61 4B 62 48  ;;aBhHaKbH
.byt    $61,$4B,$62,$42,$64,$42,$64,$42; 0x7c9b $FC8B 61 4B 62 42 64 42 64 42  ;;aKbBdBdB
.byt    $64,$42,$62,$48,$61,$45,$61,$45; 0x7ca3 $FC93 64 42 62 48 61 45 61 45  ;;dBbHaEaE
.byt    $62,$48,$61,$45,$61,$45,$62,$42; 0x7cab $FC9B 62 48 61 45 61 45 62 42  ;;bHaEaEbB
.byt    $64,$42,$61,$42,$61,$42,$61,$42; 0x7cb3 $FCA3 64 42 61 42 61 42 61 42  ;;dBaBaBaB
.byt    $65,$4B,$61,$48,$62,$4B,$61,$48; 0x7cbb $FCAB 65 4B 61 48 62 4B 61 48  ;;eKaHbKaH
.byt    $60,$66                        ; 0x7cc3 $FCB3 60 66                    ;;`f
Screen_Data_1E                                                                 ;
.byt    $60,$66,$42,$61,$45,$61,$4B,$62; 0x7cc5 $FCB5 60 66 42 61 45 61 4B 62  ;;`fBaEaKb
.byt    $42,$61,$45,$61,$4B,$62,$42,$64; 0x7ccd $FCBD 42 61 45 61 4B 62 42 64  ;;BaEaKbBd
.byt    $42,$6A,$42,$62,$4B,$61,$48,$62; 0x7cd5 $FCC5 42 6A 42 62 4B 61 48 62  ;;BjBbKaHb
.byt    $4B,$61,$48,$6B,$42,$61,$42,$61; 0x7cdd $FCCD 4B 61 48 6B 42 61 42 61  ;;KaHkBaBa
.byt    $42,$61,$42,$62,$48,$61,$45,$61; 0x7ce5 $FCD5 42 61 42 62 48 61 45 61  ;;BaBbHaEa
.byt    $42,$61,$42,$62,$48,$61,$45,$61; 0x7ced $FCDD 42 61 42 62 48 61 45 61  ;;BaBbHaEa
.byt    $42,$61,$42,$65,$42,$61,$42,$67; 0x7cf5 $FCE5 42 61 42 65 42 61 42 67  ;;BaBeBaBg
.byt    $42,$65,$45,$61,$45,$61,$45,$61; 0x7cfd $FCED 42 65 45 61 45 61 45 61  ;;BeEaEaEa
.byt    $42,$62,$45,$61,$45,$61,$45,$61; 0x7d05 $FCF5 42 62 45 61 45 61 45 61  ;;BbEaEaEa
.byt    $42,$6B,$42,$61,$42,$64,$42,$62; 0x7d0d $FCFD 42 6B 42 61 42 64 42 62  ;;BkBaBdBb
.byt    $42,$61,$42,$61,$42,$61,$48,$61; 0x7d15 $FD05 42 61 42 61 42 61 48 61  ;;BaBaBaHa
.byt    $42,$62,$42,$61,$42,$61,$42,$61; 0x7d1d $FD0D 42 62 42 61 42 61 42 61  ;;BbBaBaBa
.byt    $48,$61,$42,$62,$42,$61,$42,$61; 0x7d25 $FD15 48 61 42 62 42 61 42 61  ;;HaBbBaBa
.byt    $42,$67,$42,$61,$42,$62,$45,$61; 0x7d2d $FD1D 42 67 42 61 42 62 45 61  ;;BgBaBbEa
.byt    $48,$61,$45,$62,$45,$61,$48,$61; 0x7d35 $FD25 48 61 45 62 45 61 48 61  ;;HaEbEaHa
.byt    $45,$65,$42,$64,$42,$61,$42,$64; 0x7d3d $FD2D 45 65 42 64 42 61 42 64  ;;EeBdBaBd
.byt    $42,$62,$4B,$61,$43,$C1,$F1,$61; 0x7d45 $FD35 42 62 4B 61 43 C1 F1 61  ;;BbKaCa
.byt    $42,$62,$4B,$61,$43,$F2,$61,$42; 0x7d4d $FD3D 42 62 4B 61 43 F2 61 42  ;;BbKaCaB
.byt    $60,$68                        ; 0x7d55 $FD45 60 68                    ;;`h
Screen_Data_1F                                                                 ;
.byt    $60,$67,$C1,$F1,$43,$61,$48,$61; 0x7d57 $FD47 60 67 C1 F1 43 61 48 61  ;;`gCaHa
.byt    $45,$62,$F2,$43,$61,$48,$61,$45; 0x7d5f $FD4F 45 62 F2 43 61 48 61 45  ;;EbCaHaE
.byt    $62,$42,$61,$42,$61,$42,$64,$42; 0x7d67 $FD57 62 42 61 42 61 42 64 42  ;;bBaBaBdB
.byt    $61,$42,$65,$42,$61,$45,$61,$4B; 0x7d6f $FD5F 61 42 65 42 61 45 61 4B  ;;aBeBaEaK
.byt    $62,$42,$61,$45,$61,$4B,$62,$42; 0x7d77 $FD67 62 42 61 45 61 4B 62 42  ;;bBaEaKbB
.byt    $64,$42,$61,$42,$67,$42,$62,$45; 0x7d7f $FD6F 64 42 61 42 67 42 62 45  ;;dBaBgBbE
.byt    $61,$42,$61,$42,$61,$45,$61,$42; 0x7d87 $FD77 61 42 61 42 61 45 61 42  ;;aBaBaEaB
.byt    $62,$45,$61,$42,$61,$42,$61,$45; 0x7d8f $FD7F 62 45 61 42 61 42 61 45  ;;bEaBaBaE
.byt    $61,$42,$65,$42,$61,$42,$61,$42; 0x7d97 $FD87 61 42 65 42 61 42 61 42  ;;aBeBaBaB
.byt    $61,$42,$61,$42,$61,$42,$62,$45; 0x7d9f $FD8F 61 42 61 42 61 42 62 45  ;;aBaBaBbE
.byt    $61,$45,$61,$42,$61,$45,$62,$45; 0x7da7 $FD97 61 45 61 42 61 45 62 45  ;;aEaBaEbE
.byt    $61,$45,$61,$42,$61,$45,$62,$42; 0x7daf $FD9F 61 45 61 42 61 45 62 42  ;;aEaBaEbB
.byt    $64,$42,$64,$42,$68,$42,$61,$45; 0x7db7 $FDA7 64 42 64 42 68 42 61 45  ;;dBdBhBaE
.byt    $61,$42,$61,$45,$61,$42,$62,$42; 0x7dbf $FDAF 61 42 61 45 61 42 62 42  ;;aBaEaBbB
.byt    $61,$45,$61,$42,$61,$45,$61,$42; 0x7dc7 $FDB7 61 45 61 42 61 45 61 42  ;;aEaBaEaB
.byt    $62,$42,$61,$42,$64,$42,$64,$42; 0x7dcf $FDBF 62 42 61 42 64 42 64 42  ;;bBaBdBdB
.byt    $61,$42,$62,$45,$61,$45,$61,$45; 0x7dd7 $FDC7 61 42 62 45 61 45 61 45  ;;aBbEaEaE
.byt    $61,$42,$62,$45,$61,$45,$61,$45; 0x7ddf $FDCF 61 42 62 45 61 45 61 45  ;;aBbEaEaE
.byt    $61,$42,$68,$42,$61,$42,$61,$42; 0x7de7 $FDD7 61 42 68 42 61 42 61 42  ;;aBhBaBaB
.byt    $61,$42,$61,$42,$62,$48,$61,$45; 0x7def $FDDF 61 42 61 42 62 48 61 45  ;;aBaBbHaE
.byt    $61,$45,$62,$48,$61,$45,$61,$45; 0x7df7 $FDE7 61 45 62 48 61 45 61 45  ;;aEbHaEaE
.byt    $60,$67                        ; 0x7dff $FDEF 60 67                    ;;`g
Screen_Data_20                                                                 ;
.byt    $61,$42,$60,$64,$45,$61,$45,$61; 0x7e01 $FDF1 61 42 60 64 45 61 45 61  ;;aB`dEaEa
.byt    $48,$62,$45,$61,$45,$61,$48,$65; 0x7e09 $FDF9 48 62 45 61 45 61 48 65  ;;HbEaEaHe
.byt    $42,$61,$42,$61,$42,$61,$42,$64; 0x7e11 $FE01 42 61 42 61 42 61 42 64  ;;BaBaBaBd
.byt    $42,$62,$45,$61,$42,$61,$48,$61; 0x7e19 $FE09 42 62 45 61 42 61 48 61  ;;BbEaBaHa
.byt    $43,$61,$45,$61,$42,$61,$48,$61; 0x7e21 $FE11 43 61 45 61 42 61 48 61  ;;CaEaBaHa
.byt    $43,$61,$42,$64,$42,$61,$42,$64; 0x7e29 $FE19 43 61 42 64 42 61 42 64  ;;CaBdBaBd
.byt    $42,$65,$45,$61,$4B,$61,$42,$62; 0x7e31 $FE21 42 65 45 61 4B 61 42 62  ;;BeEaKaBb
.byt    $45,$61,$4B,$61,$42,$65,$42,$61; 0x7e39 $FE29 45 61 4B 61 42 65 42 61  ;;EaKaBeBa
.byt    $42,$67,$42,$61,$42,$62,$45,$61; 0x7e41 $FE31 42 67 42 61 42 62 45 61  ;;BgBaBbEa
.byt    $42,$61,$45,$61,$45,$62,$45,$61; 0x7e49 $FE39 42 61 45 61 45 62 45 61  ;;BaEaEbEa
.byt    $42,$61,$45,$61,$45,$62,$42,$61; 0x7e51 $FE41 42 61 45 61 45 62 42 61  ;;BaEaEbBa
.byt    $42,$64,$42,$61,$42,$64,$42,$62; 0x7e59 $FE49 42 64 42 61 42 64 42 62  ;;BdBaBdBb
.byt    $42,$61,$42,$61,$45,$61,$48,$62; 0x7e61 $FE51 42 61 42 61 45 61 48 62  ;;BaBaEaHb
.byt    $42,$61,$42,$61,$45,$61,$48,$62; 0x7e69 $FE59 42 61 42 61 45 61 48 62  ;;BaBaEaHb
.byt    $42,$61,$42,$61,$42,$67,$42,$65; 0x7e71 $FE61 42 61 42 61 42 67 42 65  ;;BaBaBgBe
.byt    $45,$61,$42,$61,$45,$61,$45,$62; 0x7e79 $FE69 45 61 42 61 45 61 45 62  ;;EaBaEaEb
.byt    $45,$61,$42,$61,$45,$61,$45,$62; 0x7e81 $FE71 45 61 42 61 45 61 45 62  ;;EaBaEaEb
.byt    $42,$64,$42,$61,$42,$61,$42,$64; 0x7e89 $FE79 42 64 42 61 42 61 42 64  ;;BdBaBaBd
.byt    $42,$62,$4B,$61,$48,$62,$4B,$61; 0x7e91 $FE81 42 62 4B 61 48 62 4B 61  ;;BbKaHbKa
.byt    $48,$60,$67                    ; 0x7e99 $FE89 48 60 67                 ;;H`g
Screen_Data_21                                                                 ;
.byt    $60,$67,$40,$44,$62,$40,$44,$62; 0x7e9c $FE8C 60 67 40 44 62 40 44 62  ;;`g@Db@Db
.byt    $40,$44,$61,$40,$45,$61,$40,$45; 0x7ea4 $FE94 40 44 61 40 45 61 40 45  ;;@Da@Ea@E
.byt    $62,$48,$61,$4B,$62,$40,$44,$62; 0x7eac $FE9C 62 48 61 4B 62 40 44 62  ;;bHaKb@Db
.byt    $40,$44,$62,$40,$44,$62,$40,$44; 0x7eb4 $FEA4 40 44 62 40 44 62 40 44  ;;@Db@Db@D
.byt    $62,$40,$44,$62,$40,$44,$62,$4E; 0x7ebc $FEAC 62 40 44 62 40 44 62 4E  ;;b@Db@DbN
.byt    $61,$45,$62,$40,$44,$62,$44,$61; 0x7ec4 $FEB4 61 45 62 40 44 62 44 61  ;;aEb@DbDa
.byt    $4F,$62,$40,$44,$62,$40,$44,$62; 0x7ecc $FEBC 4F 62 40 44 62 40 44 62  ;;Ob@Db@Db
.byt    $40,$44,$62,$40,$44,$64,$40,$66; 0x7ed4 $FEC4 40 44 62 40 44 64 40 66  ;;@Db@Dd@f
.byt    $40,$63                        ; 0x7edc $FECC 40 63                    ;;@c
Screen_Data_22                                                                 ;
.byt    $63,$40,$66,$40,$64,$41,$B1,$F1; 0x7ede $FECE 63 40 66 40 64 41 B1 F1  ;;c@f@dA
.byt    $4E,$B1,$F1,$41,$62,$41,$F2,$4E; 0x7ee6 $FED6 4E B1 F1 41 62 41 F2 4E  ;;NAbAN
.byt    $F2,$41,$62,$40,$44,$62,$40,$44; 0x7eee $FEDE F2 41 62 40 44 62 40 44  ;;Ab@Db@D
.byt    $62,$40,$44,$62,$43,$6E,$43,$62; 0x7ef6 $FEE6 62 40 44 62 43 6E 43 62  ;;b@DbCnCb
.byt    $43,$61,$4C,$61,$43,$62,$43,$61; 0x7efe $FEEE 43 61 4C 61 43 62 43 61  ;;CaLaCbCa
.byt    $4C,$61,$43,$62,$43,$61,$42,$61; 0x7f06 $FEF6 4C 61 43 62 43 61 42 61  ;;LaCbCaBa
.byt    $86,$61,$42,$61,$43,$62,$43,$61; 0x7f0e $FEFE 86 61 42 61 43 62 43 61  ;;aBaCbCa
.byt    $42,$61,$86,$61,$42,$61,$43,$62; 0x7f16 $FF06 42 61 86 61 42 61 43 62  ;;BaaBaCb
.byt    $43,$61,$42,$61,$82,$B1,$F1,$82; 0x7f1e $FF0E 43 61 42 61 82 B1 F1 82  ;;CaBa
.byt    $61,$42,$61,$43,$62,$43,$61,$42; 0x7f26 $FF16 61 42 61 43 62 43 61 42  ;;aBaCbCaB
.byt    $61,$82,$F2,$82,$61,$42,$61,$43; 0x7f2e $FF1E 61 82 F2 82 61 42 61 43  ;;aaBaC
.byt    $62,$43,$61,$42,$61,$86,$61,$42; 0x7f36 $FF26 62 43 61 42 61 86 61 42  ;;bCaBaaB
.byt    $61,$43,$62,$43,$61,$42,$61,$86; 0x7f3e $FF2E 61 43 62 43 61 42 61 86  ;;aCbCaBa
.byt    $61,$42,$61,$43,$62,$43,$61,$42; 0x7f46 $FF36 61 42 61 43 62 43 61 42  ;;aBaCbCaB
.byt    $68,$42,$61,$43,$62,$43,$61,$4C; 0x7f4e $FF3E 68 42 61 43 62 43 61 4C  ;;hBaCbCaL
.byt    $61,$43,$62,$40,$44,$62,$40,$44; 0x7f56 $FF46 61 43 62 40 44 62 40 44  ;;aCb@Db@D
.byt    $62,$40,$44,$60,$67,$00,$00,$00; 0x7f5e $FF4E 62 40 44 60 67 00 00 00  ;;b@D`g
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f66 $FF56 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f6e $FF5E 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f76 $FF66 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f7e $FF6E 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f86 $FF76 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f8e $FF7E 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f96 $FF86 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7f9e $FF8E 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fa6 $FF96 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fae $FF9E 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fb6 $FFA6 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fbe $FFAE 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fc6 $FFB6 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fce $FFBE 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fd6 $FFC6 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fde $FFCE 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fe6 $FFD6 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7fee $FFDE 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7ff6 $FFE6 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x7ffe $FFEE 00 00 00 00 00 00 00 00  ;;
.byt    $00,$00,$00,$00                ; 0x8006 $FFF6 00 00 00 00              ;;
; ---------------------------------------------------------------------------- ;
.word    nmi_entry_point               ; 0x800a $FFFA 03 80                    ;
.word    lReset                        ; 0x800c $FFFC 00 80                    ;
.word    nmi_entry_point               ; 0x800e $FFFE 03 80                    ;
                                                                               ;
                                                                               ;
